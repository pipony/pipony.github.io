[{"content":"想说的话 最近一直有一种焦虑在身上。我也知道对抗焦虑方法就是行动，但是也是受限于自己的能力和决心。其实我认为人的品质，比如努力和偷懒，很大程度决定于基因。有些人生来就是自律，就是喜欢钻研。他们成功的惯性更大。即使阻碍很大，也很难阻止他们去碾平它。我自然不是这类人，我容易知难而退，自律性弱，没有明确的目标。我快30了，但依然感觉很多方面自己都不清不楚。我想捋清楚我的人生，不蒙着眼过河，一步一个脚印坚定地走在自己规划的向前的路。今天就算是给自己鼓鼓劲吧，因为感觉我最近的状态不大好，和希望的自己有较大的差距。认清现实，尽自己有限的决心去改变吧。希望几个月后我可以写到：“最近，我比自己想象得要好些”。\n关于本周 因为前两周周末有点事，每周漫步断了两周。这周有时间了就赶紧补上，因为我怕像之前一样，一旦断了就很难坚持下去了。这周的状态还是忙碌的，工作上还是做不完的状态。因为月末就要软考了，所以这个月主要在学这个内容。\n本周keypoints:\n纠结了一阵子，还是买了个键盘给家里的电脑用。官方的薄键盘实在是不适合我。 周一晚去看了shanghaiqiutian的live，很赞 周五尝试了公司的毛笔小课，表示还是没有写字的细胞。。 周六去外面玩了一天，主要去看了世界像素展，逛了华润万象，吃了牛肉味很足的汉堡，逛了师大学生街，街很长，最后还是选择了凑凑，新的火锅体验 言论 如果你只是把业务流程给数字化、代码化，那即使在大公司里，你本质也是做外包。不要觉得在大公司里就不是做外包，我给你讲，你很有可能是在给那些运营做外包。要理解，真正的技术是要拿来做创新的，你要去颠覆点什么，要去创造点什么。\nby 左耳朵耗子的话\n刚才有人跟我说我做的事情太大了，有点不可能。这就对了，因为绝大多数人都不敢想，他们想一想就觉得这事不可能，就离开了，所以我没有太多的竞争对手，明白吗？因为绝大多数人都不敢想，他们一想他们觉得我做不到，就傻掉了，他们自己就给自己思维框架里面就设了一座墙，因为连尝试他都不敢尝试。\nby 左耳朵耗子的话\n若大家也在唱同一个音符，又岂能谱出和声？\nby 属于青年的时间与未曾抵达的未来｜新闻实验室\n本周音乐 Whisper - Freen Sarocha\n2023.05.20 ☁️ by.XD\n","date":"2023-05-20T00:00:00Z","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.16-%E6%98%AF%E8%B0%812023%E8%BF%98%E5%9C%A8%E5%AF%B9%E5%86%9B%E7%83%A8%E4%B8%8A%E5%A4%B4%E6%98%AF%E5%A4%B1%E7%9C%A0%E7%9A%84%E6%88%91/","title":"【XD的一周漫步】No.16  是谁2023还在对军烨上头？是失眠的我"},{"content":"","date":"2023-05-17T00:00:00Z","permalink":"https://huangxindi.com/p/podcast001-%E6%9D%A8%E5%8D%83%E5%AC%85/","title":"【podcast】001 杨千嬅"},{"content":"云计算基础知识 定义：将可伸缩、弹性、共享的物理和虚拟资源池以按需自服务的方式供应和管理，并提供网络访问的模式\n云计算关键特征 关键特征：\n广泛的网络接入 可测量的服务 多租户 按需自服务 快速的弹性和可扩展性 资源池化 其他关键特征：\n虚拟化技术 可靠性高 性价比高 云计算的分类 部署模式和应用范围分类：\n公有云 社区云 私有云 混合云 服务层次和服务类型分类：\n基础设施即服务 IaaS(Infrastructure) 基础设施服务，核心技术是虚拟化 平台即服务 PaaS(Platform) 提供开发、测试环境，核心技术是分布式并行计算 软件即服务 SaaS(Software) 提供应用软件 大数据处理 大数据处理基础知识 特征 5V：\n多样性 variety 数据类型繁多 速度 velocity 增长速度快、处理快。时效性 大量 volume 价值 value 价值密度低，本质是需要从海量数据中获取高价值的数据 真实性 veracity 大数据处理流程 数据采集 如数据抽取、集成 数据分析 如机器学习、数据挖掘 数据解释 可视化、人机交互 补充知识（关于数据库主流应用技术章节） OLTP：联机事务处理； OLAP：联机分析处理 分布式数据库数据透明性的表现形式：分片、位置、模型 ","date":"2023-05-17T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-08-%E4%BA%91%E8%AE%A1%E7%AE%97%E5%92%8C%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/","title":"软考-中级数据库系统分析师-08 云计算和大数据处理"},{"content":"常考大题点 数据库恢复（检查点） E-R图 关系规范化 SQL 两段锁协议 数据库恢复 解题思路：\n找到checkpoint 观察检查点之前有start标志的事务 将这些事务分成三类 在检查点之前提交（commit或rollback）的事务：已经正常结束，并不是活动事务，不用做任何操作 检查点之后提交的事务：redo 检查点之前和之后都没有提交的事务：undo E-R图 常考：\n两方联系，句式AB，BA 三方联系，句式AB，BC 弱实体：一个实体必须以另一个实体为前提 聚合：将联系作为实体，与其他的实体产生联系。如A和B先产生联系，联系本身再和C产生联系，需要用方框把A，B和联系框起来。（与三方联系有区别，三方联系需要三者同时参与） 子实体 补充ER图，思路：\n重点看需求描述 没描述清楚的，可以参考下面的逻辑结构设计 描述完整性约束：就是指出主键、外键\n关系规范化 常考：\n找候选码：任何真子集不能单独决定全属性 是否满足某一范式，最高达到第几范式 非主对码的部分函数依赖 非主对码的传递函数依赖 主对码的部分和传递函数依赖 有多值依赖的，比如X-\u0026gt;-\u0026gt;Y，X和Y必须在一个关系模式中，且只有它俩在。不然不满足。不满足的原因可以这么写：由于存在嵌入式的多值依赖 分解关系模式 做题方法：\n找函数依赖集 找候选码，确定非和主属性 判断部分和传递依赖 确定第n范式 分解关系模式（根据函数依赖集来分解，一个依赖的左右都要放在同一个子关系模式） SQL 主要考察建表，select语法等\n两段锁协议 注意；对同一事务在读写前必须对数据加锁，释放一个锁之后，就不能申请和获取任何锁\n采取什么措施来解决死锁问题：\n死锁预防 死锁避免 死锁检测 死锁解除 ","date":"2023-05-17T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-09-%E5%A4%A7%E9%A2%98%E8%AE%B2%E8%A7%A3/","title":"软考-中级数据库系统分析师-09 大题讲解"},{"content":"定义 传统的关系型数据库遵循传统数据库原则：ACID\n原子性 一致性 隔离性 持久性 分布式系统遵循：CAP理论（最多三选二特点）\n一致性 可用性 分区容忍性 BASE理论（ACID变种，CAP是基础）：非关系型数据库采用\n基本可用 软状态：无连接的 最终一致性：弱一致性 种类 文档存储 键值存储 列存储 图存储 ","date":"2023-05-14T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-04-%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93nosql/","title":"软考-中级数据库系统分析师-04 非关系型数据库NoSQL"},{"content":"软件生存周期 可行性分析与项目开发计划 需求分析 概要设计（包括设计总体数据结构和数据库结构） 详细设计 编码 单元测试 综合测试（最基本的测试是集成测试和验收测试） 维护阶段 软件生存周期模型 瀑布模型：线性顺序，适用于需求明确的项目 增量模型：融合了瀑布模型+原型实现，将需求分段为一系列增量产品，强调每一个增量均发布一个可操作的产品 演化模型：事先不能完整定义需求的软件开发，根据反馈进行改进，获得原型的新版本。重复这一过程，最终得到令用户满意的软件产品 螺旋模型：结合瀑布+演化。加入了两种模型均忽略的风险分析。每个螺旋周期大致和瀑布模型相符合。适合庞大、复杂且具有高风险的系统 喷泉模型：适用于面对对象的开发方法。以用户需求为动力，具有迭代性和无间隙性 典型的软件开发方法 结构化开发：自顶向下、逐层分解、模块化设计，基本原则是功能的分解与抽象。不适合较大规模的项目，适合数据处理领域的问题 原型化开发：快速建立一个系统模型展示给用户，在此基础上与用户交流，不太适合大型系统 面向对象开发：按照人类思维方法解决问题，更好的复用性，缩短开发周期 敏捷方法：灵活性，尽可能早地、持续地交付，可以支持用户后期增加或改变需求 软件项目管理 成本估算 风险分析 进度管理 Gantt图（甘特图） 项目计划评审技术图（PERT） 人员管理 主程序员组：有主程序员 无主程序员组：相互平等 层次式程序员组：层次负责 沟通路径\n面向对象分析方法 基本概念 对象：基本运行时的实体，包括属性和行为 消息：对象之间进行通信的一种构造 类 继承 多态：不同的对象收到同一消息可以产生不同的结果 动态绑定和静态绑定：编译时进行为静态绑定，运行时进行为动态绑定 UML 类图：类、接口、协作、它们之间的关系 对象图：实例 用例图：用例 序列图：以时间顺序组织的 通信图：强调时序，强调对象之间的组织结构 状态图：描述一个状态机，关注动态视图 活动图：一个活动到另一个活动的流程 构件图：一组构件之间，静态实现视图 部署图：运行时的处理节点以及其中的构件配置，与构件图相关 系统设计 概要设计 设计总体结构 数据结构和数据库设计 编写概要设计文档 评审 详细设计 每个模块的算法设计 模块内的数据结构设计 数据库的物理设计，确定物理结构 其他设计 编写详细设计说明书 评审 系统设计的基本原理 抽象 模块化 信息隐蔽 模块独立 模块独立 耦合性：模块之间联系的紧密程度。耦合性越高，模块的独立性越差 无直接耦合 数据耦合：之间有调用关系，传递的是简单的数据值 标记耦合：传递的是数据结构，如记录名、文件名 控制耦合：传递的是控制变量 公共耦合：通过一个公共数据环境相互作用 内容耦合：耦合性最高，直接使用另一个模块的内部数据，或通过非正常入口进入另一个模块内部 内聚性：模块内部各元素之间联系紧密程度。内聚度越低，模块独立性越差 偶然内聚 逻辑内聚：执行几个逻辑相似的功能 时间内聚：同时执行的动作组合在一起 通信内聚：所有处理元素在同一个数据结构上，或使用相同的输入输出数据 顺序内聚：相关且必须顺序执行，前一功能元素输出是下一元素的输入 功能内聚：最强的内聚，所有元素共同完成一个功能，缺一不可 系统测试基础知识 成功的测试是发现了至今尚未发现的错误的测试。目的是以最少的人力和时间发现潜在的各种错误和缺陷。\n单元测试：模块测试 集成测试：检查模块之间，模块和已集成的软件之间 确认测试：验证是否与用户需求一致 系统测试：对象是完整的、集成的计算机系统 回归测试：软件变更后，变更的和原有功能的正确性 验收测试：客户为主 软件测试方法 黑盒测试：功能测试，常见方法：等价类划分、边界值分析、错误推测、因果图 白盒测试：结构测试，主要用于单元测试。常用技术：逻辑覆盖、循环覆盖、基本路径测试 系统维护 评价指标\n可理解性 可测试性 可修改性 正确性维护\n适应性维护：适应环境变化（技术和需求变化）\n完善性维护：扩充功能、改善性能\n预防性维护：改进可靠性、可维护性\n数据流图（DFD） 面向数据流来建模，是对功能建模，而不是对数据建模。包括：\n数据流：表示数据的流向 加工：描述输入数据流到输出数据流之间的变换 数据存储：表示存储的数据 外部实体 注意：\n画数据流，不要画控制流 每条数据流的输入或输出是加工 一个加工的输出和输入数据流不能同名，即使组成成分相同 保持父图与子图的平衡 每个加工必须既有输入数据流，又有输出数据流 ","date":"2023-05-14T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-05-%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%92%8C%E8%BF%90%E8%A1%8C%E7%9F%A5%E8%AF%86/","title":"软考-中级数据库系统分析师-05 系统开发和运行知识"},{"content":"数据库应用系统的生命期 数据库规划 需求描述与分析 数据库与应用程序设计 数据库设计实现 测试 运行维护 一般策略 自顶向下 自底向上 数据库设计的基本步骤 用户需求分析 概念结构设计 逻辑结构设计 物理结构设计 实施阶段 运行和维护 以下分别进行分析。\n系统需求分析 信息要求：保存、需求哪些信息 处理要求：功能方面 系统要求 成果：系统需求说明书，包括数据流图、数据字典、各种说明性表格、统计输出表、系统功能结构图\n数据字典：是各类数据描述的集合，是关于数据库中数据的描述，即元数据。比如用户向数据库中输入什么信息，得到什么信息等，数据字典包括数据项、数据结构、数据流、数据存储、处理过程。\n概念结构设计 主要工作：E-R图（实体-联系方法）\n步骤包括：选择局部应用、逐一设计分E-R图、E-R图合并（解决冲突，消除冗余）\n合并时冲突三类：\n属性冲突 命名冲突 结构冲突：同一实体在不同分ER图中属性不同；或者出现同一对象在某ER是对象，在另一ER是属性 逻辑结构设计 步骤：\n转换为数据模型 关系规范化（最好最少达到3NF；但是有时候需要反规范化，比如为了查询更方便） 模式优化 设计用户子模式 设计目标：\n层次模型 网状模型 关系模型 重要：E-R图向关系模式的转换，即实体和联系向关系模式的转换\n联系向关系模式的转换 1:1 1:n n:n 数据库物理设计 主要步骤：确定数据分布，存储结构和访问方式\n注意：确定索引是这一步的工作\n数据库运行维护与管理 数据库重组和重构：前者不改变逻辑和物理结构 审计：记录资源和权限的使用。是被动的，只能跟踪不能防止 存储管理 安全管理 SQL编码校验 数据安全性管理 索引维护和改进 ","date":"2023-05-14T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-06-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/","title":"软考-中级数据库系统分析师-06 数据库设计"},{"content":"事务概念 定义：事务是一系列的数据库操作，是数据库应用程序的逻辑单位。要么都做，要么都不做。\n语句：\n1 2 3 4 5 begin transaction end transaction commit / commit work rollback / rollback work 事务特性 原子性 一致性 隔离性：两个事务对同一个数据进行操作，不会相互干扰 持久性：存在磁盘上，不是存在内存中 事务的状态 活动状态 部分提交 提交状态 失败状态 中止状态 并发控制（重要） 事务调度 串行调度 并发调度：利用分时的方法同时处理多个事务 可恢复调度：当事务A要读事务B写的数据时，B事务必须要先于事务A提交 并发调度是否正确：结果和任意一次串性执行结果一致即可，则可以认为是可串行化的调度。可串行性是并发事务正确性的准则。\n并发操作的不一致性：\n丢失修改 不可重复读 读脏数据：读取的是其他事务修改后的值，但是该修改后来又被撤销了 并发控制技术 1、排它锁（X锁）：其他事务无法进行读或写 2、共享锁（S锁，读锁）：其他事务可以读，不能写\n封锁协议 一级封锁协议：修改前加X锁，解决丢失修改问题 二级封锁协议：一级协议基础上加上读之前加S锁，读完释放S锁。解决读脏数据的问题 三级封锁协议：一级协议基础上加上读之前加S锁，事务结束才释放S锁。解决不可重复读的问题 两段锁协议（2PL） 定义：同一事务对任何数据进行读写之前必须对该数据加锁，在释放一个封锁之后，该事务不再申请和获得任何其他封锁。第一阶段获得封锁，即扩展阶段；第二阶段是释放封锁，即收缩阶段。（含义要背下来！）\n特点：\n遵循两段锁，一定是可串行化的；不遵循两段锁，可能是可串行化，可能不是 采用两段锁协议可能产生死锁 事务的隔离级别 READ UNCOMMITED 读未提交 避免丢失修改 READ COMMITED 读已提交 避免丢失修改、读脏数据 REPETABLE READ 可重复读 避免丢失修改、读脏数据、不可重复读 SERIALIZABLE 串行化 最高级别，避免丢失修改、读脏数据、不可重复读、幻读 幻读：事务A查询到N条数据，然后事务B又插入M条数据，导致事务A再次搜索发现有N+M条数据，产生幻读（与不可重复读区别，幻读是第二次读取到更多条数据，脏数据是同一个数据值变了）\n数据库备份与恢复 故障种类 事务故障：由于程序执行错误引起事务异常终止 逻辑错误 系统错误：如死锁 系统故障：硬件故障，未破坏存储在外存上的信息 介质故障：存储介质发生故障，如磁盘损坏，会直接破坏数据库 数据库备份 静态转储、动态转储：静态在转储期间不能进行任何存取、修改操作 海量转储、增量转储 日志文件 数据库镜像 数据库恢复 要能够恢复，必须建立冗余数据。\n恢复操作：\n撤销undo：将未完成的事务撤销，使数据库恢复到事务执行前的正确状态。通过反向扫描日志文件，进行逆操作，直至事务开始标志 重做数据redo：正向扫描日志文件，重新执行，直至事务结束标志 恢复策略：\n事务故障的恢复（在运行到正常终止点commit或rollback前终止）：undo。是由系统自动完成，对用户透明 系统故障的恢复，包括未完成事务已经写入数据库（undo），或者已提交的事务还没写入数据库（redo） 介质故障：重装数据库，装载最近一次的备份和日志文件副本，再undoundo+redo 检查点机制 checkpoint 反向扫描日志文件，找到检查点。对于检查点后提交的事务，执行redo；对于检查点后未提交的事务，执行undo\n","date":"2023-05-14T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-07-%E4%BA%8B%E5%8A%A1/","title":"软考-中级数据库系统分析师-07 事务"},{"content":"概述 SQL的基本组成：\n数据定义语言 数据操纵语言 事务控制 嵌入式和动态sql 完整性 权限管理 表操作 表创建 1、实体完整性约束\n列后面PRIMARY KEY 最后加PRIMARY KEY(属性名1，属性名2) 2、参照完整性约束 列后面加 References 表名（属性名） 在最后加，有几个外码，就写几行： foreign key(属性名) references 表名（属性名） 另外，可选参数：[on delete[cascade|set null]]] 。表示删除被参照的元组时，前者会删除参照元组；后者会将对应属性设为空 3、属性值约束 null / not null unique not null unique 与primary key可互换（not null unique 和 primary key指定一个就可以了，不能同时指定） check 限制列中的取值范围，如check (jyje \u0026gt;=0), check(col1 \u0026gt; col2) 表修改/删除 alter table xxx add/drop/modify\ndrop table xxx\n索引 索引位于内模式（物理层面）。\n1 2 create [unique][cluster] index xxx on table(col1[次序(默认asc｜desc)],col2[次序]) cluster：聚簇索引，索引项的顺序与表中记录的物理顺序一致的索引组织\n视图 1 2 3 create view 视图名(列表名) as select 查询子句 [with check option] 规则：\n子查询可以是复杂的select语句，但不允许含有order by和distinct with check option 增删更新时保证操作行满足视图定义的条件 数据操作 select 1 2 3 4 5 select [all|distinct] 目标列表达式 from 表名或视图名,表名或视图名 where 条件表达式 group by col1 [having 条件表达式] order by col2 [asc|desc] 注意：as可以给列和表名重命名，as可省略\n子查询（嵌套查询） in / not in （前面加属性名） exists / not exists （前面不加属性名）(关注的是子查询是否成立，而不是子查询的查询结果) 例如： 1 2 select cno, cname from c where not exists (select * from sc where sc.cno = c.cno) 聚集函数 1 2 3 4 5 6 7 count([distinct|all] *) min max avg any 任何一个即可 all ... 分组查询 group by 如查询每个学生的平均成绩：\n1 2 3 select sno, avg(grade) from sc group by sno; 分组查询的条件：having 子句\n字符串操作 like进行匹配，%匹配任意长度字符串，_匹配任意一个字符\n注意：如果模式中包含特殊字符（如%, _, \\），使用escape进行转义： like 'ab\\%cd%' secape'\\'\n集合操作 union or union all (不去重复行) intersect 交 except 差 外连接 left join right join full join 全外连接（左和右连接做并集） insert into 1 2 insert into table values (...) insert into table (col1,col2) values (val, val2) delete delete vs. drop : 前者只删除数据，关系模式仍然存在\nupdate 1 update table set col=new_val where ... 授权与触发器 授权grant 1 2 3 grant 权限 on table/database/view 表名/数据库名/视图名 to user1, user2 / public(所有人) [with grant option] （表示权限给A后，A可以再把这个权限给其他人） 所有权限：all privileges\n收回权限revoke 1 2 3 revoke 权限 on ... from user1, ... / public [restrict | cascade] restrict: 只收回指定的用户的权限； cascade：还收回该用户赋予的其他用户的权限\n触发器 特点：\n当指定的触发条件满足时（比如插入删除更新），则激活触发器。 触发器可以引用当前数据库以外的对象，但只能在当前数据库中创建触发器 不能在临时表或系统表上创建触发器，但触发器可以引用临时表 需要指定：\n触发器名称 表名 触发事件（不能是查询 ） 触发条件 触发动作 语句：\n1 2 3 4 5 6 7 8 9 create trigger trigger_name [before|after] [delete | insert | update of col_name] -- 触发事件 on table_name [referencing 临时视图名] [for each row | for each statement（默认方式）] [when \u0026lt;触发条件\u0026gt;] begin 触发动作 end [触发器名称] 规则：触发事件发生，触发器被激活。检查触发条件，若满足，则执行触发动作。否则，啥都不做。\n嵌入式sql与存储过程 嵌入式sql 定义：将sql语句嵌入到某种高级语言中的方式，通常采用预编译的方法 EXEC SQL \u0026lt;SQL语言\u0026gt;\n向主语言传递SQL语句执行状态信息的方式： SQLCA，即SQL通信区，系统默认的全局变量\n主变量（共享变量）：主语言通过主变量向sql语句提供参数，用DECLARE说明。在sql中，为了和属性名区分，需要在前面加: (有的可能是@)\n游标 定义游标：\n1 2 EXEC SQL DECLARE name CURSOR FOR \u0026lt;select语句\u0026gt; 这只是说明性语句，此时select并不执行\n打开游标：\n1 exec sql open name; 游标可以理解为指针\n推进游标：\n1 exec sql fetch name into table_name; 游标推进一行，将游标指向的行的值取出，送到共享变量中\n关闭游标：\n1 exec sql close name; 存储过程（procedure） 定义：是一组委了完成特定功能的sql语句集合，经编译后存储在数据库中，用户指定存储过程的名称并给出参数来执行。类似函数。可以接受输入和输出参数。执行比单个的sql语句块更快。需要注意：没有共享变量的概念。\n1 2 3 4 5 create procedure procedure_name (in|out|in out para1 type1, ...) [as] begin \u0026lt;SQL语句\u0026gt; end 参数类型：\nin 输入型 out 输出型 in out 既可作为输入，也可作为输出 补充知识 触发器内部不能以事务程序方式编写，存储过程可以 针对复杂的约束，应采用触发器来实现 嵌入式SQL，引入指示变量来解决主语言无空值的问题 ","date":"2023-05-13T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-03-sql/","title":"软考-中级数据库系统分析师-03 SQL"},{"content":"关系数据库概述 相关名词 关系：实体以及实体间的联系 关系模式：关系的描述，类似于程序设计语言中类型定义的概念 关系模型：若干个关系模式组成的集合 属性 域：每个属性的取值范围所对应一个值的集合 候选码：或称为码。某个属性或一组属性可以唯一标识一个元组，一个关系可能有多个候选码 主码（主键）：若有多个候选码，可选定一个为主码 主属性：包含在任何候选码（出现在一个候选码中即可）的各个属性 非主属性：不包含在任何候选码的属性 外码：非该关系的码，但是其他关系的码 全码：所有属性组是这个关系模式的候选码 元组/记录：某行 字段、数据项 元数：属性的个数（列数） 基数：记录的个数（行数） n元关系：元数为几，就是几元关系 关系模式 可以表示为：R(U,D,dom,F)，一般简化为：R(U)或R(A1,A2,...)\n分类：\n基本表：真实表 查询表：查询结果对应的表 视图表：虚拟的表 关系的完整性约束 用于保证用户对数据库修改时不会破坏数据的一致性\n实体完整性：基本关系R的主属性不能取空值 参照完整性：例如学生的所属院系属性值必须在学院表的院系属性字段取值中 用户定义完整性：对于某一具体的关系数据库的约束条件，可用户指定 关系运算 基本关系代数运算 扩展运算 基本关系代数运算 并（要求两个关系必须有相同的关系模式，如相同的列数量和类型） 差（也是要求有相同的关系模式，属于R且不属于S） 广义笛卡尔积（不要求有相同的关系模式） 投影及广义投影（列选择）（不去重） 选择运算（选择满足条件的元组）（行选择） 扩展的关系运算 交（需要具有相同的关系模式） 连接（扩展的笛卡尔积，即笛卡尔积后进行条件筛选，包括西塔连接【大小于，不等于】、等值连接【等于】、自然连接【要求比较的字段必须是相同的属性组，并且所有相同的属性都得等值判断。并且去掉重复属性组。如果没有重复属性，则转换为普通的笛卡尔积】） 除（结果去重） 外连接（自然连接的扩展）（注意看图中的运算符号）\n左外连接（左侧为准，右侧补充。不匹配的用NULL填充） 右外连接（与上面相反） 全外连接（左外+右外，取并集） 元组演算、域演算、查询优化 元组演算 域演算 查询优化 为查询选择最有效的查询计划的过程，节省时间和空间。在关系代数运算中，笛卡尔积、连接运算最耗费时间和空间。（笛卡尔积比连接运算代价更大，因为连接运算会只保留相同的列）\n例如，连接前先把各自的表在横向和纵向上进行精简\n关系数据库设计基础知识 函数依赖 如果两个相同的X，是否Y一定是相同的。满足则为X决定Y或Y函数依赖于X。\n非平凡的函数依赖\n平凡的函数依赖（一般不考虑） 完全函数依赖：X的任何一个真子集，都不能决定Y\n部分（局部）函数依赖\n传递函数依赖\n码 候选码：可以决定全码，任何一个真子集都不能决定全码。 主码（主键）：若有多个候选码，则可以选择一个作为主码。 包含在任何一个（即可）候选码的属性叫主属性，否则叫非主属性 外码（外键）：非此表的码，是另一个表的码 多值依赖 规范化（重点） 1NF（第一范式） 定义：每一个分量是不可再分的数据项\n存在的问题：\n数据冗余 更新异常（修改操作后数据不一致） 插入异常 删除异常 2NF（第二范式） 定义：当1NF消除了非主属性对码的部分函数依赖\n3NF（第三范式） 定义：当2NF消除了非主属性对码的传递函数依赖\nBCNF（巴克斯范式） 定义：当3NF消除了主属性对码的部分函数依赖和传递函数依赖\n性质：\n所有非主属性对每个码都是完全函数依赖 所有主属性对每一个不包含它的码，也是完全函数依赖 没有任何属性完全函数依赖于非码的任何一组属性 4NF（第四范式） 定义：限制关系模式的属性间不允许有非平凡且非函数依赖的多值依赖\n注意：如果只考虑函数依赖，则最高为BCNF范式。如果考虑多值依赖，则最高为4NF。只包含多值依赖关系的关系才可能是4NF，如果包含非多值依赖的属性，要拿出来才能组成4NF\n5NF（一般不考） Armstrong公理系统 函数依赖的闭包 函数依赖的闭包 属性的闭包 候选码求解 1、根据函数关系，将所有属性分类\nL 只在左边出现：一定是 R 只在右边出现：一定不是 LR 同时在左右出现：可能是，可能不是 NLR 左右都没出现：一定是 2、将所有L和NLR组合起来，设为P，求P的闭包，若为全集U，则为候选码 3、若第2步闭包不是全集，则依次将LR类属性和P组合起来求闭包，只要其闭包为全集，则为候选码。注意：如果LR有多个，则要依次判断，因为可能有多个候选码 最小函数依赖集（极小函数依赖集/最小覆盖） 定义：\n所有函数依赖的右侧只有一个属性 没有冗余的函数依赖 所有函数依赖的左侧没有冗余的属性 模式分解 无损连接 定义：一个关系模式分解为若干个关系模式后，通过自然连接和投影等运算仍能还原为原来的关系模式\n保持函数依赖 补充知识 平凡和非平凡的函数依赖：X-\u0026gt;Y,若Y是X的子集，则为平凡；否则为非平凡 平凡和非平凡的多值依赖：U=X+Y+Z，若X-\u0026gt;-\u0026gt;Y，且Z为空集，则为平凡；否则非平凡 ","date":"2023-05-06T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-02-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/","title":"软考-中级数据库系统分析师-02 关系数据库"},{"content":"三级模式结构 数据抽象\n物理层：索引、存储文件 逻辑层：基本表 视图层：视图 三级模式\n外模式（用户模式，子模式）：用户与数据库之间的接口 概念模式（模式）：只涉及型的描述，不涉及具体的值 内模式（存储模式）：定义所有内部记录类型、索引和文件的组织方式，以及数据控制方面的细节 映象\n模式/内模式映象 外模式/模式映象 独立性：\n物理独立性：物理结构发生改变后，不影响逻辑层 逻辑独立性：模式结构发生改变后，不影响视图层 E-R模式（重点，大题也考） E：entity 实体；R：relationship 联系\n实体 每个实体由一组属性来表示。实体用方框，属性用椭圆形。\n联系 联系用棱形来表示\n两个不同实体之间的联系 1:1 1:n n:n 两个以上实体之间的联系 1:1:1 1:1:n 1:n:n n:n:n 这种画ER图时，可以以任意两个实体都为1为基准来判断另一个实体是1还是n来联系\n同一个实体内的二元联系 属性 简单属性、复合属性（可细分更小，如通信地址） 单值属性、多值属性（如职工的父亲和母亲名称，要两行来存储） NULL属性：表示未知，没有值 派生属性：可以从其他属性得来，如身份证号-\u0026gt;年龄。不建议存储派生属性，容易不一致。 扩充的ER模型 弱实体（两个框框表示）：一个实体的存在必须以另一个实体为前提。比如家属存在是以职工为前提的。关系表示用两个菱形表示。 特殊化（子实体）：某些实体有一些共性，还各自有特殊性。 补充知识 数据模型三元素组成：数据结构、数据操纵、完整性约束 数据库管理数据，具有 数据独立性高 的优势 与网状和层次模型相比，关系模型结构更简单 一个数据库可能不止一个外模式 ","date":"2023-05-05T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-01-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/","title":"软考-中级数据库系统分析师-01 数据库技术基础"},{"content":" 参考JAVAschool基础教程的IO流学习：http://www.51gjie.com/java/686.html\n以及chatgpt\n概念 IO流（stream）\n流的源端和目的端可简单地看成是字节的生产者和消费者，对输入流，可不必关心它的源端是什么，只要简单地从流中读数据，而对输出流，也可不知道它的目的端，只是简单地往流中写数据。\n流是一组有顺序的，有起点和终点的字节集合，是对数据传输的总称或抽象。即数据在两设备间的传输称为流，流的本质是数据传输，根据数据传输特性将流抽象为各种类，方便更直观的进行数据操作。\nhttp://www.51gjie.com/java/686.html\n分类 数据类型：字符、字节 流向：输入、输出 方法类型：结点流、过滤器流（buffer）、数据流（也是过滤器流）\u0026hellip; 有一些类名容易搞混，比如：InputStreamReader和FileInputStream，两者都含Input和Stream，但是前者是继承Reader类的字符流，后者是继承InputStream类的字节流。因此，要识别类是属于字符or字节流的话，看【后缀】即可：\nReader后缀：输入字符流 Writer后缀：输出字符流 InputStream后缀：输入字节流 OutputStream后缀：输出字节流 按用法分类：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 (1) 按数据来源（去向）使用 是文件： FileInputStream, FileOutputStream, FileReader, FileWriter 是byte[]：ByteArrayInputStream, ByteArrayOutputStream 是Char[]: CharArrayReader, CharArrayWriter 是String: StringBufferInputStream, StringReader, StringWriter 网络数据流：InputStream, OutputStream, Reader, Writer (2) 按是否格式化输出使用 要格式化输出：PrintStream, PrintWriter (3) 按是否要缓冲使用 要缓冲：BufferedInputStream, BufferedOutputStream, BufferedReader, BufferedWriter。 (4) 按数据格式使用 二进制格式（只要不能确定是纯文本的）: InputStream, OutputStream及其所有带Stream结束的子类 纯文本格式（含纯英文与汉字或其他编码方式）；Reader, Writer及其所有带Reader, Writer的子类 (5) 按输入输出使用 输入：Reader, InputStream类型的子类；输出：Writer, OutputStream类型的子类 (6) 特殊需要 从Stream到Reader,Writer的转换类：InputStreamReader, OutputStreamWriter 对象输入输出：ObjectInputStream, ObjectOutputStream 进程间通信：PipeInputStream, PipeOutputStream, PipeReader, PipeWriter 合并输入：SequenceInputStream 更特殊的需要：PushbackInputStream, PushbackReader, LineNumberInputStream, LineNumberReader (7) 决定使用哪个类以及它的构造进程的一般准则如下（不考虑特殊需要）： 考虑最原始的数据格式是什么：是否为文本？是输入还是输出?是否需要转换流：InputStreamReader, OutputStreamWriter?数据来源（去向）是什么：文件？内存？网络？是否要缓冲：bufferedReader （特别注明：一定要注意的是readLine()是否有定义，有什么比read, write更特殊的输入或输出方法）是否要格式化输出：print。 http://www.51gjie.com/java/686.html 字符流和字节流的转换 转换流：是两者之间的桥梁\n字节到字符的桥梁：InputStreamReader 字符到字节的桥梁：OutputStreamWriter File类 java.io.File类实现对文件进行基本操作。常用方法如下：\n创建 createNewFile() mkdir() mkdirs() 获取信息 getName() getParent() getParentFile() getPath() lastModified() exists() isFile() isDirectory() length() listFiles() listFiles(FileFilter filter) list() list(FilenameFilter filter) 修改 delete() renameTo(File dest) 其中，listFiles返回的是File[]类型，list方法返回的是String[]类型\nInputStream类 是字节输入流的所有类的超类。常见子类：\nFileInputStream StringBufferInputStream BufferedInputStream 以下仅介绍FileInputStream的常见用法。需要注意的是，因为这些字类都实现了InputStream定义的基本方法，故基本的使用方法是差不多的。但是各自有自己的特色方法，我们可以按需使用。\nFileInputStream 用法：读取文件内容，用byte[]存储。主要方法如下：\n1 2 3 4 5 FileInputStream(String fileName) // 构造函数 int read() // 从输入流中读取一个字节的数据（输出时可用(char)转换为字符）。如果已经到达文件的末尾，则返回-1 int read(byte[] b) // 从输入流中读取若干个字节的数据，并将其存储在缓冲区`b`中。返回实际读取的字节数。 int read(byte[] b, int offset, int len) // 从输入流中读取最多`len`个字节的数据，并将其存储在缓冲区`b`中，从偏移量`off`开始存储。返回实际读取的字节数。 void close() // 关闭并释放流 使用实例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 public static void fileRead() { try { File file = new File(\u0026#34;IOStreamLearning/file.txt\u0026#34;); // 如果不确定文件路径是否写对，可以在失败时输出文件路径进行调整 if (!file.exists()) { throw new FileNotFoundException(\u0026#34;File not found: \u0026#34; + file.getAbsolutePath()); } // 1.使用read()方法 FileInputStream fis1 = new FileInputStream(file); // 也可以直接将文件路径写在参数里 // FileInputStream fis1 = new FileInputStream(\u0026#34;IOStreamLearning/file.txt\u0026#34;); int data; // 读取结果转换为int赋值给data while ( (data = fis1.read()) != -1) { // System.out.print((char)data); } fis1.close(); // 2.使用read(byte[] b)方法 FileInputStream fis2 = new FileInputStream(file); byte[] b2 = new byte[2]; int byteArray = fis2.read(b2); // 依次读取b2所定义的字节数量，直到读取结束 while (-1 != byteArray) { // System.out.print(new String(b2)); // byte[]-\u0026gt;String用的是new String(byte[])哦！ byteArray = fis2.read(b2); } fis2.close(); // 3.使用read(byte[], int offset, int len) FileInputStream fis3 = new FileInputStream(file); byte[] b3 = new byte[1024]; while (-1 != fis3.read(b3, 0, 1024)) { System.out.println(new String(b3)); } fis3.close(); } catch (IOException e) { throw new RuntimeException(e); } OutputStream类 是字节输出流的所有类的超类。常见子类：\nBufferedOutputStream FileOutputStream 以下仅介绍FileOutputStream的常见用法。\nFileOutputStream 用于将数据写入文件，常用方法：\n1 2 3 4 5 void write(int b) // 写入一个字节到输出流 void write(byte[] b) // 写入一个字节数组 void write(byte[]b, int offset, int len) void flush() // 刷新输出流，将缓冲区的内容写入目标文件。虽然大部分情况下，程序正常结束时数据都会自动写入文件中，但是保险起见需要在适当的时候及时刷新写入数据 void close() 关于为何第一个方法的参数是int类型：\n虽然这个方法接受一个int作为参数，但它实际上会写入一个无符号字节。Java没有无符号字节数据类型，所以这里要使用int来代替。\nby https://www.jianshu.com/p/c47c79882607\n应用实例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 public static void writeFile() { try { // 1.使用write(int b)方法 // FileOutputStream第二个参数为可选，表示是否追加写。默认为false FileOutputStream fos1 = new FileOutputStream(\u0026#34;IOStreamLearning/file1.txt\u0026#34;, true); byte b = 66; fos1.write(b); fos1.flush(); fos1.close(); // 2.使用write(byte[])方法 FileOutputStream fos2 = new FileOutputStream(\u0026#34;IOStreamLearning/file2.txt\u0026#34;); String content = \u0026#34;hello\u0026#34;; fos2.write(content.getBytes()); // 通过getBytes方法将要写入的String转换为byte[] fos2.flush(); fos2.close(); // 3.使用write(byte[], int offset, int len)方法 FileOutputStream fos3 = new FileOutputStream(\u0026#34;IOStreamLearning/file3.txt\u0026#34;); String content1 = \u0026#34;bye\u0026#34;; byte[] b3 = content1.getBytes(\u0026#34;UTF-8\u0026#34;); // 将String对象转换为UTF-8编码的byte数组 // 如果要写入全部，len参数取数组的长度。注意len参数不能指定为超出实际数组的长度 fos3.write(b3, 0, b3.length); fos3.flush(); fos3.close(); } catch (IOException e) { e.printStackTrace(); } } Reader类 是字符输入流的所有类的超类。常见子类：\nBufferedReader InputStreamReader FileReader 三者的区别： BufferedReader是一个缓冲字符输入流，它可以减少了读取文件的次数，提高读取文件的效率。InputStreamReader是用来读取字节流并将其转换为字符流的类，可以将任何字节流转换为字符流。更重要的是：InputStreamReader可以接收第二个参数，指定字节流使用的编码格式。FileReader继承自InputStreamReader类，读取文本文件时可以直接使用该类。但是，FileReader是使用系统默认的字符编码读取文件（无法指定的编码），如果文件的编码不是系统默认的编码，那么就不能正确地读取文件内容(乱码)。\n需要注意的是：这些类都是用于读取文本文件的，如果要读取二进制文件（例如图片、音频、视频等），则应该使用InputStream类及其子类，而不是使用这些类。\n下面介绍仅BufferedReader的用法。\nBufferedReader 在开始之前，先搞清楚一件事：前面说到，InputStreamReader可以通过第二个参数指定读取的编码，但是BufferedReader并不能这样做。那么如果实现缓存+指定编码的效果呢？答案是：将InputStreamReader对象传递给BufferedReader构造函数（下面会给出例子）。\nBufferedReader的常用方法：\n1 2 3 4 int read() // 与InputStream类似 int read(byte[] b) // 与InputStream类似 String readLine() // 读取一行文本数据，如到达文件结尾返回null close() // 与InputStream类似 具体实例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public static void readFile() { String filePath = \u0026#34;IOStreamLearning/file.txt\u0026#34;; try { // 1.使用FileReader构建BufferedReader对象 BufferedReader br1 = new BufferedReader(new FileReader(filePath)); String line; while(null != (line = br1.readLine())) { // System.out.println(line); } // 2.使用InputStreamReader构建BufferedReader对象 // FileReader无法指定读取编码，但是可以借助FileInputStream+InputStreamReader来指定编码 BufferedReader br2 = new BufferedReader(new InputStreamReader(new FileInputStream(filePath), \u0026#34;UTF-8\u0026#34;)); while(null != (line = br2.readLine())) { System.out.println(line); } } catch(IOException e) { System.out.println(\u0026#34;Error reading file: \u0026#34; + e.getMessage()); } } BufferedReader的构造函数不能直接使用文件路径作为参数，而是必须使用字符输入流传递进去（例如借助桥梁InputStreamReader或它的子类FileReader）。即，需要使用这些方法作为字节流和字符流的连接桥梁。\n分析方法2:BufferedReader br2 = new BufferedReader(new InputStreamReader(new FileInputStream(filePath), \u0026quot;UTF-8\u0026quot;)); 。FileInputStream提供文件的字节流，InputStreamReader将字节流转换为字符流，BufferedReader接收字符流生成对象。此外，读取的编码集在InputStreamReader的第二个参数指定。如果不指定编码方式，则会使用默认的编码方式（据说Windows下默认编码是GBK，Linux下默认编码是UTF-8）。\nWriter类 是字符输出流的所有类的超类，常用子类：\nBufferedWriter OutputStreamWriter，子类有FileWriter。前者可以设置编码集 以下仅介绍OutputStreamWriter的常见用法。\nOutputStreamWriter 将字符流转换为字节流。常见用法：\n1 2 3 4 5 void write(int c) // 写入单个字符 void write(char[] c, int offset, int len) // 写入字符数组 void write(String str, int offset, int len) // 写入字符串 void flush() void close() 具体实例：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 public static void writeFile() { try{ String filePath = \u0026#34;IOStreamLearning/file4.txt\u0026#34;; // 1.使用write(int c)方法 OutputStreamWriter osw1 = new OutputStreamWriter(new FileOutputStream(filePath), \u0026#34;UTF-8\u0026#34;); int c = 66; osw1.write(c); osw1.flush(); osw1.close(); // 2。使用write(char[] c, int offset, int len)方法 OutputStreamWriter osw2 = new OutputStreamWriter(new FileOutputStream(filePath), \u0026#34;UTF-8\u0026#34;); char[] c2 = new char[3]; c2[0] = \u0026#39;a\u0026#39;; c2[1] = \u0026#39;a\u0026#39;; osw2.write(c2, 0, c2.length); osw2.flush(); osw2.close(); // 2。使用write(String str, int offset, int len)方法 OutputStreamWriter osw3 = new OutputStreamWriter(new FileOutputStream(filePath), \u0026#34;UTF-8\u0026#34;); String content = \u0026#34;hello world\u0026#34;; osw3.write(content, 0, content.length()); osw3.flush(); osw3.close(); } catch (IOException e) { e.printStackTrace(); } } ","date":"2023-05-03T00:00:00Z","permalink":"https://huangxindi.com/p/java%E5%9F%BA%E7%A1%80%E4%B9%8Bio%E6%B5%81/","title":"Java基础之IO流"},{"content":"想说的话 自制力和突破性，向内和向外。想分别聊聊这两种品质：\n自制力的对象，在不同时期是不同的。对于现代人来说，是碳水？夜宵？短视频？…… 如何抵抗住明知道不好的诱惑，是我们自己脑袋里的博弈。相信每个人都想拥有一个”清醒“的大脑，和”不好“的一切划清界限，及时say no。我们的每一次决定，可以看成是众多“细胞”的共同决定时刻。有时候享乐细胞打败了向上细胞，boom，你输了。但我们又是完全由体内的这些细胞自主决定的吗？我认为我们都有个“上帝细胞”，可以扭转乾坤。甚至在认清人的所有贪念和欲望都是由人脑自然生成的结果时，我们可以选择“不听”这个结果。我们来掌控脑袋，而不是脑袋掌控我们。但是说到底，我们的核心就是脑袋。也就是说，我们应该有个拥有掌控力的脑袋。有些人生来自制力强，但他们只是少数。相信主观的力量，让自制力为我们所用。\n突破性。我昨天突然想到这点，想今天来聊聊。主动去学习和探索新知识，为什么这么难。是不是我们的好奇心都退化了。有很多东西，其实只需要花点时间就可以去获取和解决，为什么不愿意付诸时间呢？是不是tmd多巴胺搞错方向了。我给自己的最低要求，是每天都要进步一点。如果没进步的话，就是纯消耗。这里指的突破，不是突破哪个学科，是突破自我的认知，这很简单。多学了一个单词，你的词库就突破了。与自制力类似，让你的大脑决定你的大脑，不要“懒”。不要过早放弃自己。\n关于本周 略略略，等五一\n言论 总而言之，无论对人类个体来说，还是对总体来说，“大脑”这个东西都是一样的：大脑总会在“忙活”什么事儿，不忙活着这个，就忙活那个。人类的发展史，就是一部科技发展释放“脑力”的历史——在新技术的支持下，人类得以把脑力运用到新的事物上，并在新的应用下推动文明进一步发展。\nby Chairman Rabbit\n债的本质就是借钱，是时间的货币化，而利息是货币的时间价值。\nby 人生是滚雪球时光胶囊 Vol.20230426\n中年只不过是宇宙轻轻把手放在你的肩上，然后低声耳语：我不是在胡闹，所有这些保护你免于受到伤害的伪装和表演，都必须消失。你的盔甲阻碍了你的天赋。前方仍有未知的冒险，你不可能一辈子都在担心别人的想法，你生来应该全心全意地生活和爱，现在是时候让其他人看到了。\nby 产品沉思录 | 第七季（连载中） Vol.20230424\n本周音乐 春游 - 窦靖童\n2023.05.03 ☁️ by.XD\n","date":"2023-04-29T00:00:00Z","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.15-%E8%87%AA%E5%88%B6%E5%8A%9B%E4%B8%8E%E7%AA%81%E7%A0%B4%E6%80%A7/","title":"【XD的一周漫步】No.15 自制力与突破性 "},{"content":"金色梦乡（一部奇迹般的小说，带给人活下去的勇气、希望和信心，再黑暗的地方也能成为金色梦乡！） Metadata Author: [[伊坂幸太郎]] Highlights “城镇也好村庄也好，或许预算规模不一样，可是嫁出去的女儿夏天带着孩子回娘家，一家人结伴去看烟火的心情，在哪里都是一样的。不同行业、不同生活背景的人为了烟火而聚到一起，遥望着它们砰地飞上了天，打心眼里觉得真大真好看，从中得到了继续努力的动力，于是相约到明年再一起回来看，这才是烟火大会的意义。” — location: 2283 ^ref-12162\n“回忆会在相似的情景下苏醒。既然自己能想起，对方同样也能。” — location: 2291 ^ref-2860\n烟火带来了最原始的畅快淋漓，洗刷着在场所有人心中的疲累与无意义的执着，每个人都仿佛回到了天真无邪的孩提时代。 — location: 2303 ^ref-56308\n据说，猎人会剜去旅鸽的眼珠。看不见的旅鸽失去了飞翔能力，只能不断扇动翅膀原地挣扎。其他同行旅鸽发现后会误认为那是在进食，于是全都聚过来。猎人们只要等候这一刻，一网打尽即可。 — location: 2709 ^ref-12317\n如果在纸上画一条直线，代表从大学开始到现在为止的那些岁月，樋口晴子现在的感觉就好像纸对折了，直线的两端连在一起，时光的距离一下子无限缩短，眼前仿佛见到了第一次在社团活动上露面的阿一。 — location: 3319 ^ref-38630\n这件事她早已遗忘，但在阿一的提醒下，记忆的片段又不断地涌了出来，好像有一把钥匙打开了一个柜门，柜子里的东西接二连三地掉落了出来。 — location: 4960 ^ref-9325\n一转身，发现刚才的小女孩就站在身后。樋口晴子和同行的男子并不在。 “嗯？”青柳雅春低头看着她。 “妈妈让我替叔叔盖上这个。”看青柳雅春仍愣愣地站着，小女孩便拉起了他的左手，拿什么东西在手背上戳了一下。好像是一枚印章。青柳雅春没搞清状况，只是任由她摆布，连一句像样的话都说不出来。一来二去之后，小女孩道了一声“叔叔再见”，便往反方向跑去了。 青柳雅春低头看了看盖在左手的印章。是一朵可爱的小花，正中间还有字——“做得非常好”。 — location: 5940 ^ref-8516\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/book-highlights%E4%BC%8A%E5%9D%82%E5%B9%B8%E5%A4%AA%E9%83%8E-%E9%87%91%E8%89%B2%E6%A2%A6%E4%B9%A1/","title":"【Book Highlights】伊坂幸太郎-金色梦乡"},{"content":"我们没有秘密（继现象级作品《你的孩子不是你的孩子》后，作家吴晓乐再度聚焦社会暗面，书写性别议题下的隐秘伤痛） Metadata Author: [[吴晓乐-SanQiu.mobi]] Highlights 见我们陷入静默，方老师又说，很多年后你们都会忘记小时候的自己有多残忍，大人不是，大人会记得被辜负、利用的每一分、每一秒。 — location: 976 ^ref-51078\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/book-highlights%E5%90%B4%E6%99%93%E4%B9%90-%E6%88%91%E4%BB%AC%E6%B2%A1%E6%9C%89%E7%A7%98%E5%AF%86/","title":"【Book Highlights】吴晓乐-我们没有秘密"},{"content":"夏天、烟火和我的尸体（日本鬼才作家乙一高口碑暗黑杰作！九岁那年夏天，我看着我的尸体漫山遍野奔跑。获第6届JUMP小说大奖。） Metadata Author: [[乙一]] Highlights 如此闷热的夜晚，弥生却像要藏起来似的，裹着毛巾被钻进了健的被子里。她把滚烫的额头贴在健的后背上，闭上了眼睛。 不一会儿，房间里传出了两人的呼吸声，它们交织在一起，消失在夏夜里。 漆黑的夜幕降临到健和弥生身上，降临到埋藏在水沟里的我的尸体上，还有在黑暗中哭泣着寻找我的妈妈身上。 — location: 228 ^ref-26602\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/book-highlights%E5%A4%8F%E5%A4%A9%E7%83%9F%E7%81%AB%E5%92%8C%E6%88%91%E7%9A%84%E5%B0%B8%E4%BD%93/","title":"【Book Highlights】夏天、烟火和我的尸体"},{"content":"偶像失格 Metadata Author: [[[日] 宇佐见铃-SanQiu.mobi]] Highlights 仅仅是起床，床单就会皱起来；仅仅是活着，人也会皱起来。 — location: 55 ^ref-57710\n叹息声像尘埃一样飘落在起居室里，抽泣声渗入地板的缝隙和收纳柜的木头纹理中。粗暴地拉扯椅子，更粗暴地摔门，所谓家，或许就是堆积这种声音的地方，在咬牙切齿与怨言相对之间，渐渐积起灰尘、生出霉菌，一点点地变旧。摇摇欲坠的家，倒不如说本就渴求崩坏的瞬间。 — location: 586 ^ref-42057\n是她抱在怀里的衣物对我造成了无法再逃避的伤害。我堆放在房间里的大量档案、写真、CD，那些我用尽全力收集来的东西，都不如一件衬衫、一双袜子更能真切地描绘一个人的现在。 — location: 925 ^ref-27970\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/book-highlights%E5%AE%87%E4%BD%90%E8%A7%81%E9%93%83-%E5%81%B6%E5%83%8F%E5%A4%B1%E6%A0%BC/","title":"【Book Highlights】宇佐见铃-偶像失格"},{"content":"N号房追踪记（震惊全球的网络性犯罪，韩国N号房事件直击实录。我们可以沉默,但也可以绝不罢休。 ） Metadata Author: [[追踪团火花]] Highlights [2]哥谭市（Gotham City）作为蝙蝠侠的故乡和生活的城市而闻名于世。作为通往N号房的关口的Telegram聊天室“哥谭房”的名字正是来源于此。哥谭市和哥谭房都是观念堕落、犯罪不断、法律监管薄弱的地带，区别仅在于哥谭房没有蝙蝠侠这样的守护者。——译者注 — location: 241 ^ref-50916\n暗网上的“Welcome to Video”（W2V）是世界上最大的儿童性剥削网站，这里前后约有22万个儿童性剥削视频被发布和兜售。网站上传视频的页面上有“请勿上传成人色情视频”的公告。2015年7月起，运营“Welcome to Video”的孙正宇依靠践踏人格的儿童性剥削，赚取了超过4亿韩元的收益。他于2018年3月被捕，因涉嫌运营性剥削网站，二审中被判一年零六个月有期徒刑。另 — location: 655 ^ref-55355\n由于韩国法院的决定，世界最大的儿童性剥削网站运营者孙正宇于2020年7月6日恢复自由之身。 — location: 662 ^ref-18064\n但是，假如报道内容过于吸引人眼球，容易引发二次伤害，这一点拜托大家多加注意。”我们向媒体这样呼吁道。但是“博士”被捕后，媒体好像都把注意力放到了加害者身上，似乎都想把他变成恶魔，然后争相报道一段“加害者口供”。对于媒体的这种态度，我们感到非常绝望。受害者的安危完全被抛在了脑后。 — location: 785 ^ref-29433\n“小女孩不会永远长不大的，她们总有一天会长大，然后回来毁掉你的世界。” — location: 970 ^ref-60530\n从家到爸爸的单位开车不到10分钟，但妈妈20年来每天平均要往返一个小时。因此，我们家最忙的人是妈妈。虽然很累，但妈妈还是每天早起给我们做饭，这种状态一直持续到我考上大学，一天都没有中断过。因为当时我们和奶奶一起生活，所以不能吃麦片之类的简单的早餐，妈妈必须先做早饭，再去上班。她每天早上匆忙出门的情景至今仍历历在目。 — location: 1204 ^ref-12899\n“又要上班，还要侍奉婆婆，是不是很辛苦？” 经常有人这样问妈妈。虽然妈妈总是说“没什么”，做出不介意的样子，但她该有多累啊。小时候以为妈妈说的是真的，但现在回想起来才知道，为了不失去自己的生活，妈妈付出了多少辛苦。好心疼。 — location: 1213 ^ref-29860\n有一次，一个女生没化妆就去了教室，结果有男同学问她：“你怎么把脸落在家里了？”真是令人既难过，又感到无语。 — location: 1249 ^ref-37189\n在韩剧中经常可以看到男主角把女主角推到墙上强吻的场面，以及男主角粗暴地抓住女主角手腕的场景等，而有些人竟然将之吹捧为所谓的经典镜头。在韩国社会，约会暴力正作为让人心动的浪漫场面被消费。 — location: 1490 ^ref-41325\n像往常一样，爸爸来接我了。他递给我一杯青葡萄汽水，说我坐了很长时间的车，肯定口渴了，所以特意去咖啡厅买了饮料。他问咖啡店的服务员：“我女儿20多岁，20多岁的人最喜欢喝哪种饮料？”爸爸笨拙的道歉让我有些意外。想到他有些害羞地向别人询问时的情景，我的眼里噙满了泪水。然后我假装打哈欠，迅速擦干了眼泪。 — location: 1908 ^ref-50240\n这样说的时候，我的声音已经像山羊的叫声一样带着哭音了。 — location: 1923 ^ref-57143\n歌德说过，人生最重要的不是速度，而是方向。我相信自己是向着正确的方向在前进，想到这里，我告诉自己，不要着急。 — location: 1974 ^ref-47667\n“我们不是总有一天会凋谢的花，而是燃烧的火花。我们要切断把女性视为漂亮的花朵，最终和性器官画上等号的父权制和资本主义的纽带。我们不是花，而是火花！[1]” — location: 1993 ^ref-18993\n号码房的成员的性剥削目标是曾在SNS上传本人裸照和使用“不雅账号”标签的未成年人。“不雅账号”指那些在Twitter上传本人的裸露照片或自慰行为视频，用于表达性欲望的账号。根据最初散布者B某在聊天室A中透露的内容，从去年六七月份到今年（2020年）年初，他先是通过“不雅账号”标签向受害者的Twitter账号发送黑客链接，入侵对方的账号，之后谎称自己是警察，要以“传播淫秽内容”的罪名控诉对方，并收集了对方的姓名、身份证号码、学校名称、联系方式等信息。在此过程中，他威胁对方“按照指示去做，不然就告诉你的父母”，还让对方用刀在身上刻上“奴隶”字样，并拍摄自慰视频等。截至1月30日，个人信息、性剥削影像被传播到号码房的受害者已超过30人。 — location: 2957 ^ref-59524\nTelegram自警团 通过聊天软件、Twitter等，怂恿他人进行熟人凌辱，或者鼓吹可以替人进行熟人凌辱，寻找雇主的团伙。在此过程中，自警团会获取雇主的个人信息和受害者的SNS账号等信息。接着，他们会反过来用加害证据威胁委托者，尝试对其进行性剥削，说如果不服从命令，将向受害者告知对方委托自己进行熟人凌辱的事实。他们还经常在Telegram和SNS上曝光委托者的身份。 — location: 3025 ^ref-60963\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/book-highlights%E8%BF%BD%E8%B8%AA%E5%9B%A2%E7%81%AB%E8%8A%B1-n%E5%8F%B7%E6%88%BF%E8%BF%BD%E8%B8%AA%E8%AE%B0/","title":"【Book Highlights】追踪团火花-N号房追踪记 "},{"content":"你的夏天还好吗？（韩国80后天才女作家金爱烂累积五年的八段人生；诺贝尔文学奖得主勒克莱齐奥称她极有可能获得诺贝尔文学奖） Metadata Author: [[金爱烂]] Highlights 也许，就是这个缘故吧。后来有人问我爱情是什么的时候，我就回答“知道我不在的人”。 — location: 96 ^ref-17717\n我静静地注视着他映在蓝光里的侧脸。我决定从现在开始，正式喜欢这个人。我相信，全世界只有前辈这样评价我的照片。 — location: 183 ^ref-6127\n想起当初令人振奋的肺活量，现在还觉得轻松。拉帮结派、熟悉规则、动用微不足道的词汇量拼命争吵，气呼呼地回家。忘了什么时候，为了尽可能悠得更远而助跑上了秋千，按捺住即将爆裂的心脏，我终于领悟道： “原来成长是快乐的事情。” — location: 193 ^ref-57589\n尽管本科阶段的学费贷款还没还清，然而恩 — location: 1976 ^ref-52201\n恩智始终坚信，促使人生前进的不是忧愁，而是胆魄。克服恐惧最好的方式就是蔑视恐惧。她常常背诵这句咒语，尽管自己也不相信。 — location: 1977 ^ref-13743\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/book-highlights%E9%87%91%E7%88%B1%E7%83%82-%E4%BD%A0%E7%9A%84%E5%A4%8F%E5%A4%A9%E8%BF%98%E5%A5%BD%E5%90%97/","title":"【Book Highlights】金爱烂-你的夏天还好吗？"},{"content":"风声（麦家全新修订！经历过大孤独、大绝望的人，会懂得《风声》给你的大坚韧和大智慧。新增717处修订，麦家创作谈，原创插画） Metadata Author: [[麦家]] Highlights 王田香发现顾小梦对李宁玉特别好，当面和背后都在护着她：“尤其是刚才，喝醉酒后，看李宁玉的目光都含情脉脉，很暧昧的。” — location: 1255 ^ref-35621\n时间会销蚀世间所有人为的颜色，包括最深刻、最经典的爱恨情仇。 — location: 3135 ^ref-11108\n写东西就像谈恋爱，稀里糊涂时感觉最好，等你把对方身体和心灵深处的几个凹凸面都摸透，谈的恐怕就不是恋爱，而是人生了。人生的感觉无非就是咬牙：一种令人厌恶的感觉。 — location: 3220 ^ref-48273\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/book-highlights%E9%BA%A6%E5%AE%B6-%E9%A3%8E%E5%A3%B0/","title":"【Book Highlights】麦家-风声"},{"content":"想说的话 一直想了解下独立摇滚（Indie Rock）。维基百科是这么定义的：\n獨立搖滾，也稱硬地搖滾，是由搖滾樂發展出來的音樂類型，起源於八十年代的英國和美國。獨立搖滾最早用來形容獨立廠牌所製作的搖滾樂。 有別於普遍與主流唱片公司簽約的音樂人，獨立搖滾音樂人一般與獨立廠牌簽約，有的甚至根本不簽約。嚴格來講，獨立搖滾不是一種音樂類型，而是泛指某些推崇地下文化價值的搖滾音樂人或風格。\n最近可以听一波。话说，等有精力的话，蛮想开一个音乐播客。不讲话，纯放歌的那种。\n关于本周 这周状态不是很好，应该是因为没睡好。现在天气热了，被子太厚，热的我很难入睡啊！紧急下单了夏凉被。这周又有了一些奇妙的念头，想学习很多东西，但时间精力不允许。md，不付诸行动的话，想有个p用啊！工作事情都做不完，绝望的干活机器。\n本周keypoints:\n6月杨千嬅8月五月天，冲！ 配置了大麦和wemaker的rss，再也不用后知后觉了 想把kindle的高亮导入到readwise，老失败。然后就email给官方，一天后真的回复我了。说是中文还支持不了，还在改进中。OK freenbecky好像会去台湾开演唱会，但是感觉我还是没法去。唉 言论 当地时间 4 月 20 日早 9 点 33 分，SpaceX 的 Starship 太空船从得克萨斯州南部的一座发射场缓缓升空。近 4 分钟后，太空船和火箭一同炸毁。但爆炸后，SpaceX 总部大楼传出了欢呼声，还有人开了一瓶香槟。\n能让 120 米高、人类所建造的最大火箭摆脱地心引力，不在发射台上爆炸，已经是成功。而 Starship 起飞后大约一分钟，成功经历了最大气动压力点（Max Q）——火箭发射里的最重要阶段之一，意味着它承受住了冲破大气层的压力。\nSpaceX 的秘密武器：能承受一次次爆炸｜TECH TUESDAY 特别版\n想起前两天刚看到这个新闻的时候，底下的评论也是一堆叫好的。不过叫“好”的是爆炸本身。感觉有点不适。今天看到这篇文章，心里惊讶了下。先是惊讶了他们的叫好，后是对于这两种叫好的差距而感慨。\n从离耳朵很近的听觉中枢开始，我们的大脑开始逐步形成对于听觉信息的理解，从简单的声音，变成了词、句、篇章，一路向北扩散至整个大脑，研究人员将之称为蝴蝶效应。我们每一次听到的播客也好、电视剧也好、电影也好，它们都会在大脑当中掀起一片片的涟漪。这些涟漪最终会变成我们的生命经历，让每个人变得不同。\n瓶中的小人究竟何时醒来：人、人工、智能和人工智能\nThink of your life as a rainbow arcing across the horizon of this world. You appear, have a chance to blaze in the sky, then you disappear.\nby. Steve Jobs\n[产品沉思录 | 第七季（连载中） Vol.20230417](shaonan × fonter)\n本周音乐 TEAM BABY\n2023.04.22 ☁️ by.XD\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.14-hellokitty%E6%98%AF%E4%B8%80%E4%B8%AA%E6%9C%89%E8%8B%B1%E5%9B%BD%E8%A1%80%E7%BB%9F%E7%9A%84%E5%B0%8F%E5%A5%B3%E5%AD%A9/","title":"【XD的一周漫步】No.14 HelloKitty是一个有英国血统的小女孩 "},{"content":" Mysql使用load data 来进行数据导入，本文给出我在测试Mysql导入时的一些收获\nload data 官网用法 可参考： https://dev.mysql.com/doc/refman/8.0/en/load-data.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 LOAD DATA [LOW_PRIORITY | CONCURRENT] [LOCAL] INFILE \u0026#39;_file_name_\u0026#39; [REPLACE | IGNORE] INTO TABLE _tbl_name_ [PARTITION (_partition_name_ [, _partition_name_] ...)] [CHARACTER SET _charset_name_] [{FIELDS | COLUMNS} [TERMINATED BY \u0026#39;_string_\u0026#39;] [[OPTIONALLY] ENCLOSED BY \u0026#39;_char_\u0026#39;] [ESCAPED BY \u0026#39;_char_\u0026#39;] ] [LINES [STARTING BY \u0026#39;_string_\u0026#39;] [TERMINATED BY \u0026#39;_string_\u0026#39;] ] [IGNORE _number_ {LINES | ROWS}] [(_col_name_or_user_var_ [, _col_name_or_user_var_] ...)] [SET _col_name_={_expr_ | DEFAULT} [, _col_name_={_expr_ | DEFAULT}] ...] 介绍 LOAD DATA语法用于读取文件的行到表中，速度很快。它相当于是SELECT ... INTO OUTFILE 的反向过程。mysqlimport 也可以作为导入的方法，它的原理是将LOAD DATA语句发到服务端。\n本地vs非本地操作(Non-LOCAL Versus LOCAL Operation) 使用了LOCAL修饰符，会有以下影响：\n输入文件的预期位置会变成客户端（而不是服务端的文件系统路径） 更高的安全要求：因为可以直接读取客户端的文件，所以需要用户具有SUPER或FILE权限 与IGNORE修饰符有同样的错误处理效果，即遇到重复键问题，不会报错只会记录警告信息 需要注意的是，LOCAL参数必须在客户端和服务端都配置了才能生效。例如，可以在etc/mysql/my.cnf中添加： 1 2 3 4 5 [mysql] local-infile=1 [mysqld] local-infile=1 [mysql] and [mysqld]分别是客户端和服务端配置，区别主要如下：\n[mysql]部分用于配置MySQL客户端工具（例如mysql命令行客户端）的默认选项，如默认主机、端口号、用户、密码、使用的默认字符集等。 [mysqld]部分用于配置MySQL服务器的运行时选项，如监听的IP地址和端口号、数据目录位置、日志文件设置、缓存大小设置、连接数限制等。 上述方法是设置默认的local-infile=1。一般是重启mysql生效。但需要注意的是，这里的“重启生效”仅针对服务端的设置（即[mysqld]的设置）。对于客户端([mysql])的设置，无需重启，只需重新打开客户端连接到mysql服务，即可生效。\n还有以下方法可以分别进行客户端和服务端的设置，如： 1、当前客户端会话开启：\n1 mysql --local-infile=1 -u username -p 2、设置全局变量local_infile（服务端）\n1 2 3 SHOW GLOBAL VARIABLES LIKE \u0026#39;local_infile\u0026#39;; SET GLOBAL local_infile = \u0026#39;ON\u0026#39;; SHOW GLOBAL VARIABLES LIKE \u0026#39;local_infile\u0026#39;; 需要注意的是，这种服务端设置会立刻生效，无需像在my.cnf中配置需要重启生效。但是这种方法只会对当前运行的 MySQL 实例生效，并且在 MySQL 实例重启后会丢失。\n因此，如果想要长久的客户端和服务端local_infile参数的设置，需要在配置文件my.cnf中设置。如果仅需要当前客户端会话或当前服务实例生效，可采取下面的设置方法。\n输入文件字符集(Input File Character Set) ","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/mysql%E4%B9%8Bload-data%E5%AD%A6%E4%B9%A0/","title":"Mysql之“load data”学习"},{"content":"遇到的问题及收获 列表：\n时间类型datetime字段的值，当导入值为空时，默认值是什么，会报错吗 如果上述导入不会报错，那么再将此数据insert到相同表结构时，会报错吗 导入时，如果其中一行导入失败，会影响其他行的导入吗 批量insert时，如果其中一行insert失败，会影响其他行的导入吗 local_infile参数的用法 local_infile参数设置为ON后，为啥会出现自己自动变回OFF的情况 数值类型（比如decimal或integer），当导入值为空字符串时，值会转化为0。如何在导入后维持原值（null） load data replace into和load data ignore into 有什么区别吗 load data语句如何实现先清空表再导入 load data什么场景下会发生死锁 导入有哪些常见的坑，常见的导入失败场景有哪些 load data会识别哪些转义字符 my.cnf权限问题：如何设置可以使得只有管理员用户可以查看密码 load data 若不指定编码集的情况下，默认使用什么编码进行导入？在导入时编码格式需要指定成什么是由表的编码而定还是以导入文件的编码而定？ 时间类型datetime字段的值，当导入值为NULL时，默认值是什么，会报错吗 如果导入时没有指定空时的默认值时，会导入'0000-00-00 00:00:00'，并不会报错\n如果上述导入不会报错，那么再将此数据insert到相同表结构时，会报错吗 会报错。主要是因为MYSQL的严格模式，在此模式下，'0000-00-00 00:00:00'被设为无效的日期值，不能被插入到datetime字段中，会报错：\n1 Error Code: 1292. Incorrect datetime value: \u0026#39;0000-00-00 00:00:00\u0026#39; for column \u0026#39;datetime_column\u0026#39; at row 1 如果要支持此类插入，需要禁用严格模式。\n其实，在严格模式下的datetime字段，只有在导入或插入NULL时不会报错，空字符串和'0000-00-00 00:00:00'在导入和插入场景都会报错！只不过，导入NULL时会自动变成'0000-00-00 00:00:00'，插入NULL值还是维持NULL。\n因此，如果我们的场景是需要先导入到临时表，再插入到正式表。使用Mysql的默认方式时，NULL会先转换为'0000-00-00 00:00:00'导入到临时表，当从临时表insert到正式表时，就会失败。一个解决方案是，在LOAD DATA语句中额外指定：当导入到datetime格式的值为NULL，则直接导入为NULL：\n1 2 3 4 5 6 7 8 9 10 LOAD DATA INFILE \u0026#39;filename\u0026#39; INTO TABLE \u0026#39;tablename\u0026#39; FIELDS TERMINATED BY \u0026#39;,\u0026#39; LINES TERMINATED BY \u0026#39;\\n\u0026#39; IGNORE n LINES (field1, @var1, field2, @var2, ...) SET field1 = COALESCE(NULLIF(@var1, \u0026#39;\u0026#39;), NULL), field2 = COALESCE(NULLIF(@var2, \u0026#39;\u0026#39;), NULL), ...; 在上面的例子中，我们使用COALESCE函数对NULL值进行处理，将@var1的值与''进行比较，如果相等，则返回NULL，否则返回@var1的值。如果@var1为NULL，则NULLIF(@var1, '')返回NULL，而COALESCE(NULL, NULL)也会返回NULL。因此，最终将会将该字段设置为实际的NULL值。\n导入时，如果其中一行导入失败，会影响其他行的导入吗 使用load data进行导入时，默认是以事务的方式运行的。即，其中一行导入失败的话，将中止导入过程，并回滚所有行。（这点存疑，需要验证） 如何使得某行导入遇到错误时忽略该行，继续导入其他行：\n1 2 3 LOAD DATA ... IGNORE INTO TABLE \u0026#39;tablename\u0026#39; ... IGNORE INTO TABLE表示导入时忽略重复键或数据类型错误错误（导入错误情况会记录在日志中，需要关注查看）（这点存疑，需要验证）\n需要注意的是：如果数据类型不匹配，IGNORE INTO TABLE会使得忽略这类行的导入，而不会对数据进行类型转换后再导入该行。比如本来导入decimal字段时，值为空会被自动转换为0后导入，但是配置了这个IGNORE以后，就会直接不进行导入该行了。（这点存疑，需要验证）\n批量insert时，如果其中一行insert失败，会影响其他行的导入吗 会被影响。如果使用的是普通的INSERT INTO语句，而非INSERT IGNORE INTO，那么比如第3行数据插入失败后，会导致之后的行（包括第4行和第5行等）都无法插入到表中，整个插入语句都会被中止。（这点存疑，需要验证）\n可以使用INSERT IGNORE INTO在一定程度上防止影响其他行的插入，此时MySQL 会忽略一些错误，包括：\n主键重复：如果插入的行的主键值已经存在于表中，MySQL 会忽略这个插入请求而不会报错。 唯一索引重复：如果插入的行的唯一索引值已经存在于表中，MySQL 会忽略这个插入请求而不会报错。 非空字段为空：如果插入的行中某些非空字段为空，MySQL 会将这些字段设置为默认值并插入一条记录，而不会报错。 注意：此时若遇到这类错误，可能就只是忽略导入该行，不会返回任何错误或警告信息（这是个坑）（这点存疑，需要验证）\n需要注意的是，INSERT IGNORE INTO 仅会忽略部分错误，如语法错误、字段不存在等错误还是会导致插入失败。\nlocal_infile参数的用法 local_infile是MySQL的一个系统变量，用于控制是否允许客户端通过LOAD DATA LOCAL INFILE语句从本地文件系统导入数据到MySQL服务器中。开启或关闭方法：\n1 2 SET GLOBAL local_infile=1; -- 开启 SET GLOBAL local_infile=0; -- 关闭 local_infile参数设置为ON后，为啥会出现自己自动变回OFF的情况 有可能是因为该参数被设置为MySQL的默认值（比如重启后），或者是被其他配置文件覆盖了。Mysql重启后，会重置该参数为默认值。为了保持设置，可以在配置文件中进行设置，如在my.cnf中设置：\n1 2 [mysql] local-infile=1 注意：MYSQL重启后是否会重置这个参数！（这点存疑，需要验证）\n数值类型（比如decimal或integer），当导入值为空字符串时，值会转化为0。如何在导入后维持原值（null） 和之前将的datetime格式导入空会自动转换为'0000-00-00 00:00:00'类似，使用LOAD DATA导入空时，Mysql会自动转换为该字段的默认值。对于数值类型，默认值就是0。如果不想要这种效果的话，可以使用set来特殊处理。例如：\n1 2 3 4 5 6 LOAD DATA INFILE \u0026#39;data.txt\u0026#39; INTO TABLE mytable FIELDS TERMINATED BY \u0026#39;,\u0026#39; LINES TERMINATED BY \u0026#39;\\n\u0026#39; (@var1) SET mycol = NULLIF(@var1, \u0026#39;\u0026#39;); 即，若var1为空字符串时，则转换为NULL导入。\nload data replace into和load data ignore into 有什么区别吗 两者都和“导入时存在相同主键的记录”处理相关。前者会替换掉原来的记录，后者会直接忽略。\n但是，使用 REPLACE 或 IGNORE 可以在一定程度上忽略一些数据导入时的错误。（这点存疑，需要验证）\nload data语句如何实现先清空表再导入 load data本身没有提供此类参数可以指定先清空再导入。只能在导入前先执行一次清空sql，如truncate table xxx\nload data什么场景下会发生死锁 以下是charGPT的回答： 在MySQL中，LOAD DATA语句会获取一个表级锁，如果同时有其他用户对该表进行写操作，则可能发生死锁。\n以下是几种可能发生死锁的场景：\n并发导入：当多个用户同时使用LOAD DATA语句导入数据到同一个表中时，由于LOAD DATA会获取表级锁，可能会导致死锁。例如，用户A和用户B同时导入数据到表T中。\n并发插入：当多个用户同时使用INSERT INTO语句插入数据到同一个表中时，可能会与LOAD DATA语句产生竞争，导致死锁。例如，用户A使用LOAD DATA导入数据到表T中，同时用户B使用INSERT INTO语句向表T中插入数据。\n导入大量数据：当导入的数据量很大时，LOAD DATA语句可能需要较长的时间来完成，而在此期间，其他用户可能会试图对该表进行写操作，从而导致死锁。\n对于以上情况，可以通过以下几种方式来避免死锁：\n使用LOAD DATA LOCAL语句：LOAD DATA LOCAL语句不会获取表级锁，而是在客户端上读取文件并将数据发送到服务器，因此可以避免死锁。\n使用LOCK TABLES语句：在使用LOAD DATA语句之前，可以使用LOCK TABLES语句显式地锁定要导入数据的表，这样可以确保在LOAD DATA语句执行期间没有其他用户对表进行写操作。\n尽量避免并发操作：可以通过限制并发操作的数量，或者将导入操作与其他写操作分开，来降低死锁的风险。\n导入有哪些常见的坑，常见的导入失败场景有哪些 数据类型不匹配 字符编码 行终止符不一致 空值问题 文件权限问题（导入的数据文件需要有读取权限） 数据完整性（如有外键约束时） 等等 load data会识别哪些转义字符 https://dev.mysql.com/doc/refman/8.0/en/string-literals.html\n以下这些后面再整理\n转义符 escaprd by ''\ndatetime导入时为空 https://www.cnblogs.com/nayek/p/12915570.html\nNO_ZERO_IN_DATE 和 NO_ZERO_DATE 都是 MySQL 的 SQL 模式，它们的作用是限制插入的日期或时间值的格式。\nNO_ZERO_IN_DATE 的作用是禁止插入日期格式中出现 00，例如：'2023-00-20'，此时 MySQL 会抛出 ERROR 1292 (22007): Incorrect date value: '2023-00-20' for column 'my_date' at row 1 错误。这个模式不会影响时间格式的值。\nNO_ZERO_DATE 的作用是禁止插入时间格式中出现全为 0 的日期，例如：'0000-00-00 00:00:00'，此时 MySQL 会抛出 ERROR 1292 (22007): Incorrect datetime value: '0000-00-00 00:00:00' for column 'my_datetime' at row 1 错误。\n区别在于 NO_ZERO_IN_DATE 只限制日期格式，NO_ZERO_DATE 则限制时间格式，包括日期和时间。如果这两个模式都开启了，则插入的日期或时间值必须是合法的，不能包含 00 或全为 0 的日期。这些限制可以帮助保证数据库中的数据的准确性和一致性。\nhttps://dev.mysql.com/doc/refman/8.0/en/load-data.html LOAD DATA interprets an empty field value differently from a missing field:\nFor string types, the column is set to the empty string. For numeric types, the column is set to 0. For date and time types, the column is set to the appropriate “zero” value for the type. See Section 11.2, “Date and Time Data Types”. These are the same values that result if you assign an empty string explicitly to a string, numeric, or date or time type explicitly in an INSERT or UPDATE statement. Server SQL Modes https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/mysql%E5%AF%BC%E5%85%A5%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%8F%8A%E4%B8%AA%E4%BA%BA%E6%94%B6%E8%8E%B7/","title":"Mysql导入常见问题及个人收获"},{"content":"遇到的问题及收获 在脚本中的一次mysql会话中，如何实现失败回滚 设置免密登陆用到的my.cnf文件，权限应该如何设置更好 ","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/shell%E4%B8%AD%E6%89%A7%E8%A1%8Cmysql%E8%AF%AD%E5%8F%A5/","title":"shell中执行mysql语句"},{"content":"参考链接： https://zhuanlan.zhihu.com/p/367821925 https://wwsj9688.xyz/pagesv2/blog/appleid.html\n准备 国内手机号（据说可以和中国区APPLE ID用同一个不会冲突） 出生日期：设置为18+，否则后面有些应用无法下载 邮箱：建议使用一个未注册过APPLE ID的邮箱 密码：“设置密码时，密码中不要包含有名字、生日、邮箱中的信息，否则会卡在验证码那一步” 注册 访问Apple ID 官网，填写注册信息 https://appleid.apple.com/account 使用 https://wwsj9688.xyz/pagesv2/blog/appleid.html 中的生成器生成美国身份信息填入\n验证邮箱和手机号\n填写付款方式和配送地址 验证完邮箱和手机号就会使用刚注册好的账号登陆官网了。然后需要设置付款方式。本来选择付款方式，可以选择“none”，只需要填写账单寄送地址的。但是我试了下只能选择“信用卡”或“paypal”，原因可能是：\n首先说一下，大多数的同学注册之后发现需要绑定信用卡，并没有none这个选项，这里的原因很简单，就是注册账号的IP和实际选择的注册的国家的IP不一致，例如：你想注册美区的apple id就需要挂一个美国本地的代理，并开启全局模式，保证打开 ip.cn 显示为美国的地址。\nhttps://i5seo.com/apple-iphone-id-registration-in-usa-2.html\n我挂了个🪜重新登陆也没有none选项。后面在教程的评论区里找到解决方案，亲测可用：\n在设置付款方式时没有“无”这个选项，注册的时候先不要设置，把账单地址填了，后面登陆的时候会让你再填付款的地址，就可以跳过输入银行卡号\nOK.所以就只先填了配送地址。\n手机App Store登陆，测试下载 用手机的App Store登陆新账号（注意不要在“设置”中登陆），然后尝试去下载一个APP。第一次会提示：“此Apple ID尚未在iTunes商店使用过”，点击“检查”。此时就发现只需要填写账单寄送地址，不需要填写卡号啦！ 提交后就可以正常使用啦（提示：已创建Apple ID）。去下载app也成功！\nALSO 平时需要时就登陆Apple Store来下载，不用时就退出，最好不要当成主力的下载账号 地址生成器的邮编可能有误，无法通过验证。这种情况下就google一下就能找到正确的邮编 如何充值美区礼品卡 我已知的方法可以有三种：\n自己去官网买礼品卡（“因为美区 Apple ID 是无法绑定国内信用卡的，所以要买付费 App 的话，只能通过购买礼品卡的方式给美区 Apple ID 账户充值”），可参考链接： https://zhuanlan.zhihu.com/p/476434200 淘宝买礼品卡 去支付宝买 https://zhuanlan.zhihu.com/p/591446073 方法1需要准备中国发行的 VISA/Mastercard/u信用卡即可，或者银联信用卡和gmail邮箱（国内的邮箱有可能会收不到礼品卡的兑换码），门槛较高； 方法2比较简单，但是据说“有一定的封号风险”。。可能是黑卡。也比较贵些 方法3也很简单，礼品卡也是第三方，但是封号风险较小\n下面给出方法1的我的操作步骤：\n进入美国苹果官网 https://www.apple.com/ 拉到最下面, \u0026ldquo;shop and learn\u0026rdquo;-\u0026gt;\u0026ldquo;gift cards\u0026rdquo;-\u0026gt;\u0026ldquo;buy\u0026rdquo; 选择购买金额，最低支持10美元 for的姓名可以随便写，但是email要写gmail的（不一定要是appleid设置的邮箱），用于接收兑换码。from的邮箱可以随便写国内的 \u0026ldquo;add to bag\u0026rdquo; -\u0026gt; \u0026ldquo;check out\u0026rdquo; 登陆，用中国或美国区的账号都行。我用的美国区 跳转到了付款界面，选择第一个\u0026quot;credit or debit card\u0026quot; 填写账单信息，姓名用信用卡的，街道填美国的 中间有个小插曲，记录下，一般是不会出现的👇 点击付款后，提示：Your payment authorization failed on card •••5728. Please verify your information and try again, or try another payment method. 然后微信收到信用卡提示：因实体卡未激活致交易失败，可激活实体卡，并重新交易 OK。激活了。再次尝试 购买成功，check邮箱 购买完成后，邮箱会先收到第一封订单邮件。再等待1小时或n小时，才会收到礼品卡号\n后续：等了一天，收到信用卡通知”预授权撤销“，不知道是啥原因失败了。。懒得折腾了，去支付宝买了。等以后有了visa卡再在官网买吧\n如何兑换礼品卡： 收到包含礼品卡号的邮件后，app store登陆美区账号，点击“兑换礼品卡或代码”进行兑换即可。\n","date":"2023-04-22T00:00:00Z","permalink":"https://huangxindi.com/p/%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BAappleid/","title":"注册美区AppleID"},{"content":"想说的话 在阮一峰老师的本周周刊中，推荐了The 18 biggest unsolved mysteries in physics。可能是中学物理过于无聊，容易忽视物理学是门多么酷的学科。虽然宇宙深不可测，但人类从未停止找到宇宙真相的步伐。这些谜团，超乎我们现有的认知和想象，神秘且着迷。文章中列举了这些主题：\ndark energy 暗能量 dark matter 暗物质 arrow of time 时间之箭 parallel universes 平行宇宙 Why is there more matter than antimatter 为什么物质比反物质多 fate of the universe 宇宙的命运 How do measurements collapse quantum wavefunctions 测量如何使量子波函数坍缩？ Is string theory correct 弦理论 Is there order in chaos 混乱中有秩序吗 Do the universe\u0026rsquo;s forces merge into one? 宇宙的力会合而为一吗 What happens inside a black hole 黑洞内部 naked singularities 裸奇点 Violating charge-parity symmetry 违反电荷宇称对称性 When sound waves make light 声致发光 What lies beyond the Standard Model? 标准模型之外还有什么 Fundamental constants 无量纲常数 What the heck is gravity, anyway? 什么是引力 Do we live in a false vacuum? 我们生活在虚假的真空中吗 关于本周 本周比较困，具体表现为早上早起困难。没啥其他特别状态。开始用kanban插件规划每天todo事项，效果不错。软考将近，还没开始学习，要抓紧时间了。开始思考读文章和读书要如何权衡，文章读不完，所以都没有读书了。但是读书应该成效更好。虽然两者的内容不同。文章一般比较贴近近期或时事，但只读这类内容显然不够。此外，这周被种草了《小鸟文学》和《财新周刊》。都是需要付费的。\n本周keypoints:\n周日要参加公司春游 看台剧《村里来了个暴躁女外科》，略土但好笑 晚上打算去宜家搞个架子装饮料，家里饮料一直用箱子装着让收纳星人不能忍 我感觉自己是个冷漠的人 即刻上的AI讨论热情很高，惊叹但是稍微有点疲劳 在傍晚和晚上加班间隙，去江边走走或运动一小会儿，感觉不错 杨千嬅6月份要去厦门开演唱会，我不允许自己错过 言论 企业家谈成功经验，就好像在说：\u0026ldquo;我曾经用这些号码，赢得过彩票。\u0026rdquo;\n科技爱好者周刊（第 250 期）：新技术的最大风险\n李杰听过一个说法，数据标注员是“人工智能的老师”，是他和同事们日复一日的拉框，教会了人工智能理解人类世界。\n但他从没想过，当人工智能时代真正到来的那一天，取代他们的，恰恰会是自己曾经的学生。\n训练人工智能的中国县城工人\n\u0026ldquo;生活就是个缓慢受锤的过程，人一天天老下去，奢望也一天天消逝，最后变得像挨了锤的牛一样。可是我过二十一岁生日时没有预见到这一点。我觉得自己会永远生猛下去，什么也锤不了我。——《黄金时代》 @歪瓜裂枣 拍毕业照前一天，跑到图书馆翻起那本破旧的《黄金时代》，作为沉默的绝大多数，在即将接受挨锤之前念到那句话，像是在对一个时代鞠躬再见。\u0026rdquo;\n你好哇，王小波\n如今，我们回看万尼瓦尔·布什写下的那句深刻的洞见： 世界上从来不缺信息，信息之间的联系比信息本身更有价值。\n互联网前夜的微光：从布什的《如我们所想》，到泰德·尼尔森的上都计划\n本周音乐 LÜCY\n2023.04.15 🌞 by.XD\n","date":"2023-04-15T00:00:00Z","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.13-%E6%9C%AA%E8%A7%A3%E5%AE%87%E5%AE%99/","title":"【XD的一周漫步】No.13 未解宇宙 "},{"content":" 学习教程：https://www.w3cschool.cn/junit/\nJUnit 是一个 Java 编程语言的单元测试框架。Junit也就是所谓的白盒测试，能快速完成单元测试（Unit Test，又称为模块测试）。\n特点 提供注解来识别测试方法。 提供断言来测试预期结果。 提供测试运行来运行测试。 简单的示例 创建一个Demo类\n1 2 3 4 5 6 7 public class Demo { public static int add(int a, int b) { return a+b; } } 创建一个相应的Test类\n1 2 3 4 5 6 7 8 9 10 11 12 13 import org.junit.Test; import static org.junit.Assert.assertEquals; public class DemoTest { @Test public void testAdd() { assertEquals(5,Demo.add(1,4)); } } 创建Test Runner 类\n1 2 3 4 5 6 7 8 9 10 11 12 13 import org.junit.runner.JUnitCore; import org.junit.runner.Result; import org.junit.runner.notification.Failure; public class TestRunner { public static void main(String[] args) { Result result = JUnitCore.runClasses(DemoTest.class); for (Failure failure: result.getFailures()) { System.out.println(failure.toString()); } System.out.println(result.wasSuccessful()); } } 运行TestRunner的结果：\n1 2 3 4 5 6 // 验证通过 true // 故意模拟验证失败的情况，执行结果： testAdd(DemoTest): expected:\u0026lt;3\u0026gt; but was:\u0026lt;5\u0026gt; false 基本用法 Test类：\n类名以Test为待测试类名的后缀 测试方法以test为方法名的前缀 单独测试某方法，可以在该测试方法处点右键进行单独测试；如果要运行该测试类的所有测试方法，可以借助测试运行器TestRunner（如上面的示例）（或者直接右键运行该测试类） 常用注解 @Test: 表示为测试方法 @BeforeClass: static方法，会在所有方法执行前执行 @AfterClass: 和上面类似，在所有方法执行后执行 @Before: 每个测试方法执行前会执行 @After: 每个测试方法执行后会执行 @Ignore: 会被测试运行器忽略 @RunWith: 可以更改测试运行器 JUnitCore 在测试运行器中，使用JUnitCore类来执行。对于只有一次的测试运行，可以使用静态方法 runClasses(Class[])。\nJunit API JUnit 中的最重要的程序包是 ​junit.framework​ 它包含了所有的核心类。\nAssert import org.junit.Assert; 包含检验各种条件是否符合的方法，若不符合则抛错\nTestCase import junit.framework.TestCase; 定义了运行多重测试的固定装置\n1 2 3 4 5 6 7 8 9 10 11 12 import org.junit.Test; import junit.framework.TestCase; public class DemoTest extends TestCase{ @Test public void testTestCase() { System.out.println(\u0026#34;No of Test Case = \u0026#34;+ this.countTestCases()); System.out.println(\u0026#34;Test Case Name = \u0026#34;+ this.getName()); this.setName(\u0026#34;newName\u0026#34;); System.out.println(\u0026#34;Test Case Name = \u0026#34;+ this.getName()); } } 执行结果：\n1 2 3 4 No of Test Case = 1 Test Case Name = testTestCase Test Case Name = newName true TestResult import junit.framework.TestResult; 集合了执行测试样例的所有结果\nTestSuite import junit.framework.TestSuite; 表示测试的集合\n测试套件 测试套件是一种将多个测试类组合在一起执行的方式，以便对整个应用程序或系统进行更全面的测试。测试套件类似于一个集合，它将多个测试类组合在一起，每个测试类都是一个测试套件的一部分。测试套件会依次运行其中包含的所有测试类，并输出整个测试过程的结果。\n如何使用 需要编写一个特殊的测试类来定义测试套件，这个测试类需要使用@RunWith(Suite.class)注解来运行测试套件。在测试类中，你需要使用@Suite.SuiteClasses注解来指定包含在测试套件中的测试类。 例如：\n1 2 3 4 5 6 7 8 9 10 11 12 import org.junit.runner.RunWith; import org.junit.runners.Suite; @RunWith(Suite.class) @Suite.SuiteClasses({ TestEmployeeDetails.class, TestEmployeeSalary.class }) public class EmployeeTestSuite { // 这个类没有测试方法，只是用来指定包含在测试套件中的测试类 } 其中，EmployeeTestSuite是一个定义测试套件的测试类，包含两个测试类TestEmployeeDetails和TestEmployeeSalary。如果你运行EmployeeTestSuite，JUnit将依次运行TestEmployeeDetails和TestEmployeeSalary中的所有测试方法，并输出测试结果。\n注意：一定要保证测试套件之间没有循环包含关系，否则会有死循环！\n忽略测试 @Ignore ： 可以修饰测试类或测试方法，使得此测试类或测试方法不会被执行到 注意：JUnit5 中@Igonre不起作用，一个替换方案是使用@Disabled\n时间测试 一般用于测试某方法是否执行时间过长，设定timeout参数用于指定该测试方法的最大执行时间，单位为毫秒。如果测试时执行超过该时长，则会中止测试方法并标记为失败。例子如下：\n1 2 3 4 @Test(timeout = 1000) public void testTimeout() throws InterruptedException { // 等待 2 秒钟，超时时间为 1 秒钟 Thread.sleep(2000); } 异常测试 设定expected参数，用于验证待测试的方法抛的异常是否符合预期。例子如下：\n1 2 3 4 @Test(expected = ArithmeticException.class) public void testPrintMessage() { ... } 参数化测试 使用不同的值多次测试同一个方法，简化测试过程。构造特点：\n用@RunWith(Parameterized.class)通知JUnit这是一个参数化测试类 @Parameterized.Parameters 使用该注释构造公共的静态方法，返回一个对象集合作为测试数据集合 创建一个构造方法，与测试数据相匹配 例子如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 @RunWith(Parameterized.class) public class CalculatorTest { private int num1; private int num2; private int expectedResult; private Calculator calculator; @Parameterized.Parameters public static Collection\u0026lt;Object[]\u0026gt; input() { return Arrays.asList(new Object[][]{ {2, 3, 5}, {5, 7, 12}, {9, 4, 13}, {8, 1, 9}, {6, 2, 8} }); } public CalculatorTest(int num1, int num2, int expectedResult) { this.num1 = num1; this.num2 = num2; this.expectedResult = expectedResult; } @Before public void setUp() { calculator = new Calculator(); } @Test public void testAdd() { int result = calculator.add(num1, num2); assertEquals(expectedResult, result); } } 实际项目中的应用 比如在一个Springboot+mybatisPlus的项目中，要如何利用JUnit测试在ServiceImpl中实现的各种方法呢？这里我直接给出ChatGPT给我的回答吧：\n假设有一个名为UserServiceImpl的实现类，实现了UserService接口，该接口定义了数据库表user的增删改查方法，我们可以为其编写JUnit测试方法。\n这里我们为UserServiceImpl中的每一个方法编写了一个对应的测试方法，其中使用了JUnit提供的Assertions断言方法，比如Assertions.assertTrue()和Assertions.assertNotNull()，用来判断测试结果是否正确。注意，在测试方法上要加上@Test注解，以标识这是一个JUnit测试方法，同时需要使用@SpringBootTest注解来启动Spring容器，以便能够注入UserService实例。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 package com.example.demo.service.impl; import com.baomidou.mybatisplus.extension.plugins.pagination.Page; import com.example.demo.entity.User; import com.example.demo.service.UserService; import org.junit.jupiter.api.Assertions; import org.junit.jupiter.api.Test; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.boot.test.context.SpringBootTest; @SpringBootTest public class UserServiceImplTest { @Autowired private UserService userService; @Test public void testSaveUser() { User user = new User(); user.setName(\u0026#34;test\u0026#34;); user.setAge(18); boolean result = userService.save(user); Assertions.assertTrue(result); } @Test public void testUpdateUser() { User user = userService.getById(1L); user.setAge(20); boolean result = userService.updateById(user); Assertions.assertTrue(result); } @Test public void testDeleteUser() { boolean result = userService.removeById(1L); Assertions.assertTrue(result); } @Test public void testGetUserById() { User user = userService.getById(2L); Assertions.assertNotNull(user); } @Test public void testGetUserPage() { Page\u0026lt;User\u0026gt; page = new Page\u0026lt;\u0026gt;(1, 10); Page\u0026lt;User\u0026gt; userPage = userService.page(page, null); Assertions.assertNotNull(userPage); } } 测试如何不影响真实的表数据 当我们使用JUnit测试时，例如插入数据，必然会往表中插入脏数据。那么，如何在不影响真实表数据的情况下，完成测试呢？\n使用注解@Transactional实现事务回滚 在测试完成后，使用@After注解执行清空数据等操作 在测试方法中写清空数据的操作 测试时如何指定id 当我们使用JUnit测试删除或更新操作时，往往需要指定操作id。这里也给出两种常用做法：\n写死数据库中已有的某id来测 通过@Before注解，在方法中预置记录并在后续测试方法中使用此id。但注意最后要清理此脏数据。 进阶使用 使用ant运行junit，可以简化测试过程、生成测试报告等。等用到了再学习吧 测试报告生成：除了使用ant生成测试报告外，有些IDE也支持生成测试报告。比如在IDEA中执行时选择“Run xxx with Coverage”，然后就可以导出测试报告 还有其他基于JUnit的框架扩展，如JWebUnit、MockObject ","date":"2023-04-15T00:00:00Z","permalink":"https://huangxindi.com/p/junit/","title":"JUnit"},{"content":" 教程来自少数派：https://sspai.com/series/277/list\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\nsafari 标签页组 自动关闭标签页：如果没有手动关闭标签页的习惯，可以在设置的【关闭标签页】中改为自动定时删除 阅读模式：隐藏广告、导航菜单或其他干扰项，帮助营造一个沉浸式的阅读环境。再次点击「大小」按钮，支持用户修改阅读器的背景色、字体以及字体大小，字体目前支持苹方、宋体、楷体和圆体四种。但并不是所有网页都可用。 标记功能：将网页临时打开为pdf，可以在上面做标记高亮等，然后可以以pdf形式分享出去 扩展：在设置-safari-扩展中，可以前往app store安装扩展 底部栏的【大小】按钮：除了可以调整文字大小，还有比如翻译网页等实用操作 开发者模式：这在移动端比较少用。但如果需要用到的话，可以：在设置 \u0026gt; Safari 浏览器高级中打开「网页检查器」开关 隐私与安全性：可以在设置-safari中看到一系列隐私安全设置，可以根据需要开或关。“除了「阻止所有 Cookie」外其他都建议保持打开” 相机 在设置\u0026gt;相机中可以对相机偏好和参数进行设置。\n格式：高效vs兼容性最佳。前者质量更好，后者采用 JPEG / MOV 格式来存储照片和视频，更好兼容不同设别的查看 【保留设置】中给出一些更细的拍照设置 拍照时除了左右上角可以快捷选择闪光灯、实况等，可以在拍照界面向上轻扫屏幕展开快捷菜单。从左至右分别是闪光灯、实况照片、拍摄比例、曝光补偿、计时器以及滤镜。 通过调整手电筒的亮度可以影响到闪光灯的亮度 编辑实况照片：调整为循环播放的视频，再通过其他app转换为gif即可进行分享 曝光补偿 拍照时，长按快门就是视频快录。此时滑到锁的位置，就是进行录像模式，不需要手一直按着 向左（横屏时向下）滑动就会连拍 人像模式的光照： 自然光：清晰对焦到面部，并使背景变得模糊，更加适合拍摄静物。 摄影室灯光：基本等同于在影楼拍写真的效果，即主要为被拍摄人物面部补光，让皮肤更亮，照片整体干净清晰，建议拍肖像的时候使用。 轮廓光：面部高光和低光反差明显，可以凸显男士硬朗的风格。 舞台光：给人一种「聚光灯」下的感觉，背景调整为深黑色，把人物主体从背景中抠出再放入纯色背景中。\n曝光：如果对自动曝光不满意，还可以通过自动测光和手工调节曝光补偿来调节亮度。前者通过点击画面的物体控制，“点击画面中相对较暗的地方，拍摄出的照片会整体变亮；点击画面中相对较亮的地方，拍摄出的照片会整体变暗”；后者通过黄色对焦框右侧有一个「太阳」图标调节 慢动作视频拍摄后，可以在相册里随时修改视频需要慢动作播放的位置 通讯应用 【电话】的默认界面拨号盘，长按上方空白处或已输入的号码，可以快捷拷贝、保存、粘贴号码 「穿透」勿扰模式：将电话设为个人收藏后，可以在设置 \u0026gt; 勿扰模式 \u0026gt; 允许的通知 \u0026gt; 联系人 \u0026gt; 总是允许中选择「个人收藏」，这样当处于勿扰模式时，该来电也不会被静音 对于来电的操作：除了普通的接听和挂断，还有以下操作很实用： 提醒我：挂断电话并创建一个提醒事项 静音：按一下侧边锁屏按钮/从底部向上滑动，停止震动响铃 挂断：连续按两次侧边锁屏按钮（因为锁屏状态下的来电没有挂断按钮，所以可以通过这个方法来挂电话） 「添加通话」：\u0026ldquo;当从运营商处成功开通多人通话功能后，在通话中轻点「添加通话」即可邀请其他联系人加入通话。此时与第一位联系人的通话会暂时中断而得以保留，直到第二位联系人的通话接通后，可以轻点「合并通话」以将两个单独的通话合并，组成一个电话会议。\u0026rdquo; FaceTime 可以给自己的脸添加memoji表情 数码点触：iMessage应用，可以通过触摸发送不同的信息效果。一个浪漫的玩法：“在 Apple Watch 上用两根手指同时按住触摸区域则可以记录自己的心跳发送给对方，如果对方也使用 Apple Watch 查看该条消息，则可以感受到 Apple Watch 按这个心率发出的振动。” 发送协作邀请：很多原生或第三方app支持邀请协作，通过信息发送协作邀请，则会将TA自动加入该协作项目中 iMessage 相机：在imessage的左边相机按钮，可以打开相机。一个特色是可以在拍照或录像时添加脸部特效，很好玩！ iMessage 群组：类似微信，iMessage也是可以拉群的 已读回执：点开对方的头像，可以选择是否给对方发送已读回执 图书 支持epub和PDF格式\n书的标亮和书签是全平台同步的。手机端阅读更适合碎片时间，但是ipad和mac端有更好的阅读体验哦。\n播客 略\n照片 如果本机存储空间有限，建议选择「优化iPhone储存空间」选项。系统会在本地仅保存低分辨率的预览，但当你需要浏览、编辑照片时，会在后台自动下载原始版本，这一切将发生得无声无息。 共享相簿vs共享图库 共享相簿中的照片和视频并非 iCloud 原件，而是上传数据的副本，所以有可能丢失一部分质量和其他信息。 共享图库是基于 iCloud 底层的数据权限打通，让原本已经存在的照片具备了可设置访问用户的功能，做到一份数据，多人访问的效果。可作为建立家庭内部的高品质共享图库。 可以把照片隐藏到「已隐藏」相簿 自动播放：如果要在查阅相册时自动播放实况或视频，可以开启「自动播放视频和实况照片」选项 合并项目：照片会自动识别到完全相同的n张照片（可能清晰度不同），选择合并可以将重复相合一 对人像照片进行景深调节：点击了人像光效旁边那个形似字母「f」的图标就可以调节人像模式照片的景深，这实际上就是在摄影里常说的「光圈」，常常用于表示进光量的大小，该值越小景深越大，反之则越小。 音乐 ","date":"2023-04-13T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-ios%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B07%E7%94%9F%E6%B4%BB%E5%BA%94%E7%94%A8/","title":"「少数派-IOS蓝皮书」学习笔记之07生活应用"},{"content":"想说的话 看了话剧《虚无的十字架》，究竟怎样才能让坏人真正得受到惩罚？“在被害者亲人的心中，凶手被判死刑并不会给他们带去快感或解恨，只是他们在走出失去亲人的漫漫长路中的一个歇脚站。因为即使只是判了无期，凶手还活在世上的事实就会持续刺激着他们。死刑虽然无法挽回已死去的亲人，但却是给他们的一个最基本的慰藉”，但是“有些凶手对于死亡是无所谓的，死刑并不能真正惩罚到他们，这就像给他们钉上了虚无的十字架。有些凶手实际上一直在用自己的行动和痛苦的心灵在赎罪，虽然没有在监狱中，但胜似在监狱中“。没有完美的法律，没有完美的制度，人性和事实的复杂，发人深省。\n关于本周 又是忙碌的一周。但是周三因为清明放假了，有了个喘息。晚睡了两天，周六又头痛了！又犯下了晚上理智缺失熬夜到两点多的大忌。早睡就会自律，晚睡就会破罐子破摔。真是坏毛病！希望深夜的自己也能自律。工作事情真的很多，尤其是都堆在一起，很忙。这样的自己，如何学习其他东西，自我提升？虽然每天早起给自己留了时间，但总觉得啥事都没干。真是奇怪！\n本周keypoints：\n看了唐香玉的脱口秀专场，很好笑哈哈哈！ ob换了新的主题，新鲜感。get了新的插件（kanban），在工作中规划todo事项，感觉不错。 早上吃了麦记的奶咖，💓！想要每天被麦当劳早餐唤醒！但是外送蛮贵的呜呜 现在正在炖一锅排骨汤，1kg的排骨，加上脆脆的鹿茸菇，配上大米饭，期待期待！ 今天看到一篇文章讲大厂的推荐算法。决定我们每天看的内容的算法，其实带有很多公司的个人色彩。这些算法的偏好，是由他们决定的，虽然是和我们的喜好挂钩，但其中的权重、变量等因素，其实不是我们所掌控的。 midjourney有一个新功能，可以根据图片给出对应的prompt（而且效果很不错）。这又带出了很多可能性…… 言论 如果世界的发展真的非常不如人意，彼时彼地，也许我们可以回想起 Rober Frost 的诗句： 主啊，原谅我对你开的小玩笑；\n我也原谅你对我开的大玩笑。\n(Forgive, O Lord, my little jokes on Thee\nAnd I’ll forgive Thy great big one on me.)\nnewsletter 富于理性by不二\n2023.04.09 🌞 by.XD\n","date":"2023-04-09T00:00:00Z","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.12-%E5%9C%A8%E6%9C%89%E9%99%90%E7%9A%84%E6%97%B6%E9%97%B4%E7%BC%9D%E9%9A%99%E4%B8%AD%E5%85%85%E5%AE%9E%E8%87%AA%E6%88%91/","title":"【XD的一周漫步】No.12 在有限的时间缝隙中充实自我 "},{"content":" 教程来自少数派：https://sspai.com/series/277/list\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\niCloud 登陆网页版，可以更清楚地查看数据分布\n文件 操作时复制和拷贝我经常混淆：\n复制：拷贝一份到当前文件夹 拷贝：存储在剪贴板 如何找到下载项： 文件 - 我的iphone - 下载项\n解压和压缩，在文件中都能很好支持。\n想要压缩时，长按选择文件后点击压缩，或者多选文件后选择 \u0026gt; 更多 \u0026gt; 压缩，便可以轻易得到目标文件们的压缩包形式。对于绝大多社交软件而言，我们无法直接分享文件夹给他人，便可以通过「先压缩、后分享」的方式，将成批的文件分享出去。\n查找 丢失模式：\n设置丢失模式时，您可以填写联系电话和显示信息，他人捡到该设备后，屏幕上会呈现您填写的信息，方便他人与您联系。此处可以选择「接收电子邮件更新」，但请特别注意识别钓鱼邮件，防止 Apple ID 被盗。若您捡到其他人的物品，可以在物品 \u0026gt; 识别找到的物品查看它的信息。\n若要帮他人查找设备，可查找 \u0026gt; 我 \u0026gt; 协助朋友，通过网页，让他人登录Apple ID 后管理其设备。\n隔空投送、播放、打印 隔空投送很常见了，隔空播放倒是可以好好挖掘下场景：\n屏幕镜像（比如手机上一些图片，需要放大分析，可以投屏到电脑上看） 内容流化到其他显示设备（原生视频或视频平台） 同播共享、与您共享 同播共享：可以共同音乐、视频、屏幕，利用【Facetime通话】来实现 与您共享：某些原生应用（如safari或音乐），可以将通过【信息】分享的链接直接归到应用内的【与您共享】区域，省去了从【信息】跳转到应用的步骤。虽然很优雅，但经常使用微信的话就没法用了\nWatch 如果你想快速为 Apple Watch 开启静音模式，也可以打开「覆屏静音」功能，你只需要在收到提醒时，将手掌覆盖在 Apple Watch 屏幕 3 秒以上，即可为它开启静音模式。Apple Watch 会通过震动告诉你已经进入静音模式。\nApple Watch 上的截屏功能也可以在 通用 里设置，打开「启用截屏」的开关后，在 Apple Watch 上同时按下数码表冠和侧边按钮即可截屏，截屏会被存在 iPhone 的「照片」应用中。\nSOS 紧急联络中有两项设置：\n按住手表的侧边栏按钮进行拨号：长按 Apple Watch 的侧边按钮即可进行紧急呼叫。 摔倒检测：当你意外摔倒并无法做出相应时，Apple Watch 会响起提示音并向设置好的紧急联系人发起 SOS 紧急联络。 ","date":"2023-04-05T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-ios%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B06%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%80%81/","title":"「少数派-IOS蓝皮书」学习笔记之06苹果生态"},{"content":"想说的话 昨天看了《宇宙探索编辑部》，在最后的宇宙从近到远的长镜头中，感受到了宇宙的浩大和重复性。到最后，整个宇宙就是一个纠缠在一起的两条线，像极了人类的DNA。线的每一点，又可以是一个小宇宙。我不禁想到，我们是不是也是体内细胞认为的最大宇宙，每个原子是不是也是其他更微小的点的小宇宙。人类一直在寻找的答案，是不是就是本身。\n关于本周 早睡早起保持的不错，但每到周末就会晚睡，对生物钟的保持和大脑是种伤害，所以以后要尽量周末也早睡。工作状态也不错，比较忙碌的一周。周四晚上去健身房了，椭圆机20分钟，可能是身体逐渐适应了运动状态，第二天腿没有像上周一样酸痛。下周争取多运动一天。\n本周keypoints：\n周六下午去了梁厝玩。是一个历史文化古街，有一些比较旧的建筑物，比较空旷，商业气息有但不多。有个大草坪和帐篷，适合家庭露营和房车旅游。拍照景色不错。周围比较空旷，离闹市较远。 有空要好好研究下营养学，想在公司自己准备晚餐，力求营养均衡、利于瘦身。 上周在美团约的洗鞋服务，收到货了。整体来讲是满意的，省心又干净，没有一点异味。但鞋的某些材质会有一定的牺牲，比如麝皮变得很干和粗糙。 发现一个蛮不错的播客节目《声动早咖啡》，每天早上7:00推送一条15分钟的商业早新闻。 这周有学了一点JUnit的内容，还有一点IOS蓝皮书的内容。阅读流现在已很大部分切换为Readwise Reader了，体验不错。但是对墙内不友好是真的。每天的阅读时间是够的，但是收获与产出，需要加强。 AI就像是一个庞大的怪兽。 言论 年轻时的金正日是一位疯狂的电影爱好者，尤其喜欢007系列电影。根据英国《卫报》2003年的报道金正日的私人电影库存超过1.5万部。\n新闻实验室会员通讯（663）\n现在觉得自己很蠢总比10年后觉得自己很蠢要好。\n产品沉思录 | 2023 Vol.20230327\n知道自己在每天进步的话，就不怕自己蠢了\n时隔三年，美国国会再次召开关于 TikTok 的听证会、TikTok 也再次面临分拆出售或被封禁的可能。一位众议员在听证会上对接受质询的 TikTok CEO 周受资说，“我得感谢你，你做到了过去三四年难以想象的事，你让共和党和民主党联合了起来。”\n晚点-现场直击 TikTok 美国国会听证会：难以回答的问题、日渐收紧的包围圈\n这是人话吗🤦‍♀️\n2023.04.02 🌞 by.XD\n","date":"2023-04-02T00:00:00Z","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.11-%E4%B8%80%E7%B2%92%E5%B0%98%E5%9C%9F/","title":"【XD的一周漫步】No.11 一粒尘土 "},{"content":" 教程来自少数派：https://sspai.com/series/294\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\n","date":"2023-03-27T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-macos%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B00%E7%9B%AE%E5%BD%95/","title":"「少数派-macOS蓝皮书」学习笔记之00目录"},{"content":" 教程来自少数派：https://sspai.com/series/294\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\n程序坞与菜单栏 菜单栏（顶部） 在左侧有Apple菜单和App菜单，右侧是菜单栏应用。App菜单是由开发者设定的。有两点可以注意的：\n帮助菜单，可以搜索快速找到某一个功能（本应用或系统功能） 编辑菜单，可以查看快捷键 菜单栏应用的显示调整：\n设置中选定展示的应用 按住⌘Command，可直接拖动调整位置 拖到菜单栏外面，可快捷删除显示 程序坞 用分隔线分成了三块：\n常用App 已启动的App 特殊应用，如下载文件夹等 接力：如在手机上打开safari，在Mac上也有相同的设备，则会自动出现，右上角有接力图标\n应用的快捷菜单： 按住 ⌃Control 或直接用鼠标右键点击应用图标，类似于手机长按App图标\n拖放功能：\n将文件拖到应用上，可以直接用该应用打开 将文件放到程序坞的特殊应用区域，可以把这个文件固定到程序坞里 ","date":"2023-03-27T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-macos%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B01%E5%88%9D%E6%AC%A1%E8%A7%81%E9%9D%A2/","title":"「少数派-macOS蓝皮书」学习笔记之01初次见面"},{"content":" 来自网友整理 https://tieba.baidu.com/p/7181760618\ngid/2 流行 Pop sid/3076 流行 Pop\nsid/1541 国语流行 Mandarin Pop\nsid/1542 粤语流行 Cantopop\nsid/2980 电音流行 Electropop\nsid/2970 欧美流行 Western Pop\nsid/360 日本流行 J-Pop\nsid/1718 韩国流行 K-Pop\nsid/252 流行舞曲 Dance-Pop\nsid/989 梦幻流行 Dream Pop\nsid/343 成人时代 Adult Contemporary\nsid/3364 网络流行 Cyber Hit\nsid/873 独立流行 Indie Pop\nsid/2986 男孩团体 Boy Band\nsid/310 女子团体 Girl Group\nsid/265 青少年流行 Teen Pop\nsid/349 迷幻流行 Psychedelic Pop\nsid/1033 氛围流行 Ambient Pop\nsid/316 阳光流行 Sunshine Pop\nsid/767 无伴奏合唱 A cappella\nsid/2985 韩国抒情歌曲 Korean Ballad\nsid/3022 台湾民歌运动 Taiwan Folk Scene\nsid/1031 噪音流行 Noise Pop\nsid/3363 都市流行 City Pop\nsid/987 噪响流行 Jangle Pop\nsid/3017 前卫流行 Progressive Pop\nsid/1382 艺术流行 Art Pop\nsid/769 传统流行 Traditional Pop\nsid/1053 童稚流行 Twee Pop\nsid/1648 闽南语流行 Bân-lâm-gú Pop\nsid/1063 室内流行 Chamber Pop\nsid/690 当代基督 CCM / Contemporary Christian Music\nsid/1212 文雅流行 Sophisti Pop\nsid/550 凯尔特流行 Celtic Pop\nsid/3039 致幻流行 Hypnagogic Pop\nsid/357 法国流行 French Pop\nsid/3373 德国流行 German Pop\nsid/358 意大利流行 Italian Pop\nsid/529 非洲流行 Afro-Pop\nsid/2977 阿拉伯流行 Arabic Pop\nsid/9001 卧室流行 Bedroom Pop\nsid/802 弗拉明戈流行 Flamenco Pop\nsid/547 夏威夷流行 Hawaiian Pop\nsid/604 印度流行 Indian Pop\nsid/3372 俄罗斯流行 Russian Pop\nsid/1075 土耳其流行 Turkish Pop\nsid/774 人声合唱团 Vocal Group\ngid/3 摇滚 Rock sid/322 摇滚 Rock \u0026amp; Roll\nsid/835 流行摇滚 Pop Rock\nsid/884 独立摇滚 Indie Rock\nsid/1331 另类摇滚 Alternative Rock\nsid/941 英伦摇滚 Britpop\nsid/1381 迷幻摇滚 Psychedelic Rock\nsid/687 后摇 Post-Rock\nsid/275 硬摇滚 Hard Rock\nsid/956 新迷幻 Neo-Psychedelia\nsid/247 噪音摇滚 Noise Rock\nsid/1338 垃圾摇滚 Grunge\nsid/1385 低保真 Lo-Fi\nsid/245 前卫摇滚 Progressive Rock\nsid/278 华丽摇滚 Glam Rock\nsid/1088 慢核 Slowcore\nsid/2981 工业摇滚 Industrial Rock\nsid/1339 数学摇滚 Math Rock\nsid/689 后垃圾摇滚 Post-Grunge\nsid/295 说唱摇滚 Rap Rock\nsid/1062 艺术摇滚 Art Rock\nsid/368 默西之声 Merseybeat\nsid/307 基督摇滚 Christian Rock\nsid/680 喜剧摇滚 Comedy Rock\nsid/249 实验摇滚 Experimental Rock\nsid/251 先锋前卫摇滚 Avant-Prog\nsid/271 民谣摇滚 Folk Rock\nsid/1091 自赏 Shoegazing\nsid/361 日本摇滚 J-Rock\nsid/1171 视觉摇滚 Visual Rock\nsid/315 巴洛克流行 Baroque Pop\nsid/348 酸性摇滚 Acid Rock\nsid/3114 原声摇滚 Acoustic Rock\nsid/726 成人另类 Adult Alternative\nsid/323 布鲁斯摇滚 Blues Rock\nsid/286 布吉摇滚 Boogie Rock\nsid/796 凯尔特摇滚 Celtic Rock\nsid/3269 中国摇滚 Chinese Rock\nsid/685 学院摇滚 College Rock\nsid/867 暗潮 Dark Wave\nsid/3236 仙音 Ethereal Wave\nsid/347 车库摇滚 Garage Rock\nsid/959 车库摇滚复兴 Garage Rock Revival\nsid/325 器乐摇滚 Instrumental Rock\nsid/164 爵士摇滚 Jazz Rock\nsid/246 德国前卫摇滚 Krautrock\nsid/3367 曼彻斯特音乐 Madchester\nsid/1351 新浪漫 New Romantic\nsid/3034 钢琴摇滚 Piano Rock\nsid/3368 后英伦 Post-Britpop\nsid/1096 电力流行 Power Pop\nsid/326 山区乡村摇滚 Rockabilly\nsid/327 根源摇滚 Roots Rock\nsid/1089 悲核 Sadcore\nsid/344 轻摇滚 Soft Rock\nsid/1200 太空摇滚 Space Rock\nsid/2070 石人摇滚 Stoner Rock\nsid/328 冲浪摇滚 Surf Rock\nsid/333 沼泽摇滚 Swamp Pop\ngid/16民谣 Folk sid/849民谣 Folk\nsid/828 当代民谣 Contemporary Folk\nsid/1389 独立民谣 Indie Folk\nsid/823 城市民谣 Urban Folk\nsid/269 民谣流行 Folk Pop\nsid/3026 校园民谣 Campus Folk\nsid/809 传统民谣 Traditional Folk\nsid/1606 新民谣 Neofolk\nsid/352 迷幻民谣 Psychedelic Folk\nsid/829 前卫民谣 Progressive Folk\nsid/3006 室内民谣 Chamber Folk\nsid/3007 先锋民谣 Avant-Folk\nsid/830 反民谣 Anti-Folk\nsid/780 凯尔特民谣 Celtic Folk\nsid/815 爱尔兰民谣 Irish Folk\nsid/792 苏格兰民谣 Scottish Folk\nsid/3294 黑暗民谣 Dark Folk\nsid/3005 奇幻民谣 Freak Folk\nsid/3272 中世纪民谣 Medieval Folk\nsid/631 中东民谣 Middle Eastern Folk\nsid/822 新传统主义民谣 Neo-Traditional Folk\nsid/633 瑞典民谣 Swedish Folk\ngid/9电子 Electronic sid/8 电子舞曲 EDM / Electronic Dance Music\nsid/3348 未来贝斯 Future Bass\nsid/2 浩室舞曲 House\nsid/1010 合成器流行 Synthpop\nsid/947 独立电子乐 Indietronica\nsid/878 回响贝斯 Dubstep\nsid/1527 陷阱舞曲 Trap\nsid/25 出神舞曲 Trance\nsid/44 前卫浩室 Progressive House\nsid/3355 热带浩室 Tropical House\nsid/3357 未来浩室 Future House\nsid/2139 电气浩室 Electro House\nsid/2141 蒙巴顿舞曲 Moombahton\nsid/21 科技舞曲 Techno\nsid/730 氛围音乐 Ambient\nsid/1459 弛放 Chillout\nsid/3358 复合电气 Complextro\nsid/24 鼓打贝斯 Drum \u0026amp; Bass\nsid/261 英国车库舞曲 UK Garage\nsid/3362 泡泡糖贝斯 Bubblegum Bass\nsid/52 缓拍 Downtempo\nsid/66 碎拍 Breakbeat\nsid/3349 蒸汽波 Vaporwave\nsid/3 迪斯科 Disco\nsid/1825 电子民谣 Folktronica\nsid/3047 后回响重拍 Brostep\nsid/59 深浩室舞曲 Deep House\nsid/65 智能舞曲 IDM\nsid/31 氛围科技舞曲 Ambient Techno\nsid/26 神游舞曲 Trip Hop\nsid/3043 脉冲流行 Glitch Hop\nsid/3035 未来车库舞曲 Future Garage\nsid/3038 恍惚嘻哈舞曲 Wonky\nsid/32 黑暗氛围 Dark Ambient\nsid/30 氛围回响 Ambient Dub\nsid/48 大节拍 Big Beat\nsid/3049 芝加哥浩室舞曲\nsid/46 氛围浩室舞曲 Ambient House\nsid/2764 寒潮 Chillwave\nsid/263 另类舞曲 Alternative Dance\nsid/63 脉冲 Glitch\nsid/3356 硬派舞曲 Hardstyle\nsid/5 高能量迪斯科 Hi-NRG\nsid/70 微声 Microsound\nsid/61 极简科技舞曲 Minimal Techno\nsid/3018 极简潮 Minimal Wave\nsid/57 前卫迷幻舞曲 Progressive Trance\nsid/51 科技浩室 Tech House\nsid/3041 女巫浩室 Witch House\nsid/47 二步舞曲 2-Step\nsid/19 酸性浩室舞曲 Acid House\nsid/29 迷幻科技舞曲 Acid Techno\nsid/3361 贝斯浩室 Bass House\nsid/3045 柏林学派 Berlin School\nsid/3360 炸房浩室 Big Room House\nsid/71 芯片音乐 Chiptune\nsid/3378 解构俱乐部舞曲 Deconstructed Club\nsid/33 底特律科技舞曲 Detroit Techno\nsid/1 迪斯科 Disco\nsid/58 钻击贝斯 Drill ‘n’ Bass\nsid/60 回响科技舞曲 Dub Techno\nsid/2404 电子行为舞曲 EBM\nsid/27 放克电子 Electro (Electro-Funk)\nsid/3046 电子迪斯科 Electro-Disco\nsid/1077 电工业舞曲 Electro-Industrial\nsid/34 电科技舞曲 Electro-Techno\nsid/842 电子 Electronic\nsid/39 电子乐 Electronica\nsid/7 欧陆舞曲 Euro-Dance\nsid/3290 实验回响 Experimental Dub\u0026quot;\nsid/3031 步法舞曲 Footwork\nsid/262 即兴舞曲 Freestyle\nsid/42 放克打击乐 Funky Breaks\nsid/3048 未来流行 Futurepop\nsid/43 极端科技舞曲 Gabber\nsid/50 果阿迷幻舞曲 Goa Trance\nsid/69 污垢舞曲 Grime\nsid/45 快乐硬核 Happy Hardcore\nsid/23 硬核科技舞曲 Hardcore Techno\nsid/62 病态氛围 Illbient\nsid/1051 工业舞曲 Industrial Dance\nsid/3040 工业科技舞曲 Industrial Techno\nsid/1076 工业音乐 Industrial music\nsid/3359 旋律回响贝斯 Melodic Dubstep\nsid/68 微浩室舞曲 Microhouse\nsid/3289 极简合成器 Minimal Synth\nsid/20 新拍 New Beat\nsid/2400 新迪斯科 Nu-Disco\nsid/401 后迪斯科 Post-Disco\nsid/3248 后回响贝斯 Post-Dubstep\nsid/3112 能量电子 Power Electronics\nsid/728 前卫电子 Progressive Electronic\nsid/2501 迷幻氛围 Psybient\nsid/9 锐舞音乐 Rave Music\nsid/3299 合成器潮 Synthwave\nsid/28 部族浩室舞曲 Tribal House\nsid/3037 英国贝斯舞曲 UK Bass\nsid/3036 英国放克舞曲 UK Funky\ngid/10 节奏布鲁斯 R\u0026amp;B\nsid/843 节奏布鲁斯 R\u0026amp;B\nsid/234 当代节奏布鲁斯 Contemporary R\u0026amp;B\nsid/405 放克 Funk\nsid/404 灵魂乐 Soul\nsid/421 流行灵魂乐 Pop Soul\nsid/431 新灵魂乐 Neo-Soul\nsid/3303 另类节奏布鲁斯 Alternative R\u0026amp;B\nsid/3188 非洲放克 Afro-Funk\nsid/415 白人灵魂乐 Blue Eyed Soul\nsid/3079 摇摆舞 Boogie\nsid/427 芝加哥灵魂乐 Chicago Soul\nsid/418 乡村灵魂乐 Country Soul\nsid/433 深度放克 Deep Funk\nsid/434 深度放克复兴 Deep Funk Revival\nsid/425 深度灵魂乐 Deep Soul\nsid/411 嘟喔普 Doo Wop\nsid/416 走走放克 Go-Go\nsid/426 孟菲斯灵魂乐 Memphis Soul\nsid/412 摩城 Motown\nsid/377 新杰克摇摆乐 New Jack Swing\nsid/413 新奥尔良R\u0026amp;B New Orleans R\u0026amp;B\nsid/420 北方灵魂乐 Northern Soul\nsid/3081 P放克 P-Funk\nsid/414 费城灵魂乐 Philly Soul\nsid/432 迷幻灵魂乐 Psychedelic Soul\nsid/386 平静风暴 Quiet Storm\nsid/428 柔顺灵魂乐 Smooth Soul\nsid/424 南方灵魂乐 Southern Soul\nsid/3080 合成器放克 Synth Funk\nsid/408 都市音乐 Urban\ngid/5 爵士 Jazz sid/838 爵士 Jazz\nsid/1155 巴萨诺瓦 Bossa Nova\nsid/160 爵士流行 Jazz Pop\nsid/136 摇摆乐 Swing\nsid/165 柔顺爵士 Smooth Jazz\nsid/159 融合爵士 Jazz Fusion\nsid/188 爵士放克 Jazz Funk\nsid/257 酸性爵士 Acid Jazz\nsid/197 非洲爵士 African Jazz\nsid/193 非洲古巴爵士 Afro-Cuban Jazz\nsid/158 先锋爵士 Avant-Garde Jazz\nsid/134 大乐队 Big Band\nsid/147 波普 Bop\nsid/149 室内爵士 Chamber Jazz\nsid/161 当代爵士 Contemporary Jazz\nsid/150 冷爵士 Cool Jazz\nsid/179 迪克西兰爵士 Dixieland\nsid/143 实验大乐队 Experimental Big Band\nsid/155 自由爵士 Free Jazz\nsid/3197 吉普赛爵士 Gypsy Jazz\nsid/190 硬波普 Hard Bop\nsid/183 主流爵士 Mainstream Jazz\nsid/168 调式爵士 Modal Jazz\nsid/182 新奥尔良爵士 New Orleans Jazz\nsid/36 电爵士 Nu Jazz\nsid/166 后波普 Post-Bop\nsid/178 拉格泰姆 Ragtime\nsid/810 噪音爵士 Skiffle\nsid/189 灵魂爵士 Soul Jazz\nsid/180 爵士钢琴 Stride Piano\nsid/156 第三流派 Third Stream\nsid/773 人声爵士 Vocal Jazz\ngid/12 轻音乐 Easy Listening\nsid/845 轻音乐 Easy Listening\nsid/723 沙发音乐 Lounge\nsid/721 异域 Exotica\nsid/722 太空时代流行 Space Age Pop\nsid/715 器乐流行 Instrumental Pop\nsid/719 轻音乐流行 Light Pop\nsid/714 管弦乐流行 Orchestral Pop\nsid/725 器乐独奏 Solo Instrumental\ngid/1 嘻哈(说唱) Hip Hop sid/1353 嘻哈 Hip-Hop\nsid/231 流行说唱 Pop Rap\nsid/3285 陷阱说唱 Trap Rap\nsid/224 硬核说唱 Hardcore Hip Hop\nsid/229 西岸说唱 West Coast Hip Hop\nsid/223 东岸说唱 East Coast Hip Hop\nsid/226 老派说唱 Old-school Hip Hop\nsid/3347 爵士嘻哈 Jazz Hip Hop\nsid/228 南方说唱 Southern Hip Hop\nsid/243 中西部说唱 Midwest Hip Hop\nsid/232 英伦说唱 British Hip Hop\nsid/225 爵士说唱 Jazz Rap\nsid/233 喜剧说唱 Comedy Hip Hop\nsid/237 地下说唱 Underground Hip Hop\nsid/3341 中国地下说唱 Chinese Underground Hip Hop\nsid/2930 意识说唱 Conscious Hip Hop\nsid/221 另类说唱 Alternative Hip Hop\nsid/2931 实验说唱 Experimental Hip Hop\nsid/1264 法国说唱 French Hip Hop\nsid/216 基督教说唱 Christian Hip Hop\nsid/2932 说唱浩室 Hip House\nsid/3232 蹦啪说唱 Boom Bap\nsid/10001 弛放节拍 Chill Beats\nsid/3286 云雾说唱 Cloud Rap\nsid/2933 器乐嘻哈 Instrumental Hip Hop\nsid/3296 拉丁说唱 Latin Rap\ngid/24 动漫 ACG sid/3344 日本动漫游戏 Japanese ACG\nsid/1098 同人音乐 DouJin\ngid/4 布鲁斯 Blues\nsid/837 布鲁斯 Blues\nsid/117 电声布鲁斯 Electric Blues\nsid/87 三角洲布鲁斯 Delta Blues\nsid/130 钢琴布鲁斯 Piano Blues\nsid/75 原声布鲁斯 Acoustic Blues\nsid/132 爵士布鲁斯 Jazz Blues\nsid/115 灵魂布鲁斯 Soul Blues\nsid/73 芝加哥布鲁斯 Chicago Blues\nsid/84 乡村布鲁斯 Country Blues\nsid/79 原声芝加哥布鲁斯 Acoustic Chicago Blues\nsid/81 原声得克萨斯布鲁斯 Acoustic Texas Blues\nsid/3090 非洲布鲁斯 African Blues\nsid/369 英国布鲁斯 British Blues\nsid/110 当代布鲁斯 Contemporary Blues\nsid/101 东海岸布鲁斯 East Coast Blues\nsid/118 电声德克萨斯布鲁斯 Electric Texas Blues\nsid/113 德克萨斯布鲁斯 Texas Blues\ngid/18 金属 Metal sid/2973 金属 Metal\nsid/280 重金属 Heavy Metal\nsid/1358 激流金属 Thrash Metal\nsid/284 另类金属 Alternative Metal\nsid/277 死亡金属 Death Metal\nsid/290 前卫金属 Progressive Metal\nsid/300 石人金属 Stoner Metal\nsid/875 黑金属 Black Metal\nsid/1457 民谣金属 Folk Metal\nsid/288 说唱金属 Rap Metal\nsid/303 厄运金属 Doom Metal\nsid/865 新金属 Nu Metal\nsid/1115 放克金属 Funk Metal\nsid/3138 氛围黑金属 Atmospheric Black Metal\nsid/3159 氛围泥浆金属 Atmospheric Sludge Metal\nsid/3163 先锋金属 Avant-Garde Metal\nsid/3277 自赏黑 Blackgaze\nsid/3142 残忍死亡金属 Brutal Death Metal\nsid/3152 凯尔特金属 Celtic Metal\nsid/274 基督金属 Christian Metal\nsid/3157 电子金属 / 科幻金属 Cyber Metal\nsid/3155 电子碾 Cybergrind\nsid/3148 死亡厄运金属 Death Doom Metal\nsid/3144 死亡摇滚 Death n’Roll\nsid/1889 死核 Deathcore\nsid/3145 死碾 Deathgrind\nsid/3139 自杀黑金属 Depressive Black Metal\nsid/2763 数学金属 Djent / Math Metal\nsid/3149 蜂鸣金属 Drone Metal\nsid/3150 葬礼厄运金属 Funeral Doom Metal\nsid/294 华丽金属 Glam Metal\nsid/3154 血碾 Goregrind\nsid/302 哥特金属 Gothic Metal\nsid/279 碾核 Grindcore\nsid/3156 律动金属 Groove Metal\nsid/287 工业金属 Industrial Metal\nsid/3153 中世纪民谣金属 Medieval Folk Metal\nsid/3140 旋律黑金 Melodic Black Metal\nsid/3117 旋律死亡金属 Melodic Death Metal\nsid/296 不列颠金属新浪潮 NWOBHM / New Wave Of British Heavy Metal\nsid/291 新古典金属 Neo-Classical Metal\nsid/306 能量金属 Power Metal\nsid/299 朋克金属 Punk Metal\nsid/305 泥浆金属 Sludge Metal\nsid/281 速度金属 Speed Metal\nsid/1359 交响金属 Symphonic Metal\nsid/3147 技术死亡金属 Technical Death Metal\nsid/3162 维京金属 Viking Metal\ngid/25 朋克 Pun****k sid/681 朋克 Punk Rock\nsid/964 流行朋克 Pop Punk\nsid/686 后朋克 Post-Punk\nsid/1094 新浪潮 New Wave\nsid/2989 后朋复兴 Post-Punk Revival\nsid/1116 车库朋克 Garage Punk\nsid/914 后硬核 Post-Hardcore\nsid/892 情绪硬核 Emo\nsid/3302 电子核 Electronicore\nsid/913 硬核朋克 Hardcore Punk\nsid/1711 金属核 Metalcore\nsid/893 情绪核 Screamo\nsid/3042 合成器朋克 Synth Punk\nsid/2988 冷潮 Coldwave\nsid/3226 舞曲朋克 Dance-Punk\nsid/1057 哥特摇滚 Gothic Rock\nsid/1350 现代主义复兴 Mod Revival\nsid/1352 无浪潮 No Wave\nsid/1148 原型朋克 Proto-Punk\nsid/2984 朋克俱乐部 Psychobilly\nsid/1268 滑板朋克 Skate Punk\ngid/7 世界音乐 World Music sid/3087 世界音乐 World Music\nsid/858 韩国 | 演歌 Korea Trot\nsid/860 韩国传统音乐 Korean Traditional Music\nsid/854 日本 | 岛呗 Shima Uta\nsid/856 日本 | 演歌 Enka\nsid/857 日本 | 邦乐 Japanese Traditional Music\nsid/530 非洲打击乐 Afrobeat\nsid/599 印度 | 邦拉 Bhangra\nsid/642 美国 | 凯金 Cajun\nsid/446 加勒比 | 卡吕普索 Calypso\nsid/996 法国 | 香颂 Chanson\nsid/805 葡萄牙 | 法朵 Fado\nsid/635 西班牙 | 弗拉门戈 Flamenco\nsid/3178 日本 | 雅乐 Gagaku\nsid/677 福音 Gospel\nsid/610 格里高利圣咏 Gregorian chant\nsid/629 犹太音乐 Jewish Music\nsid/611 犹太 | 克莱兹梅尔 Klezmer\nsid/923 巴西 | 全域音乐 MPB\nsid/210 多米尼加 | 默朗格 Merengue\nsid/597 巴基斯坦 | 卡瓦里 Qawwali\nsid/598 印度 | 拉格 Raga\nsid/3253 墨西哥音乐 Regional Mexican\nsid/211 古巴 | 伦巴 Rumba\nsid/3174 巴西 | 桑巴 Samba\nsid/1102 古巴 | 颂乐 Son\nsid/605 蒙古 | 呼麦 Throat Singing\nsid/506 世界融合 World Fusion\nsid/513 世界节拍 Worldbeat\nsid/644 美国 | 柴迪科舞曲 Zydeco\ngid/13 新世纪 New Age\nsid/846 新世纪音乐 New Age\nsid/741 自然新世纪 Nature New Age\nsid/743 精神新世纪 Spiritual New Age\nsid/729 民族融合新世纪 Ethnic Fusion New Age\nsid/3164 宗教新世纪 Religionary New Age\nsid/739 太空新世纪 Space New Age\nsid/736 放松新世纪 Relaxation New Age\nsid/745 凯尔特新世纪 Celtic New Age\nsid/3166 日本新世纪 Japanese New Age\nsid/7001 疗愈音乐 Healing\ngid/20 乡村 Country sid/836 乡村 Country\nsid/469 当代乡村 Contemporary Country\nsid/473 乡村流行 Country Pop\nsid/495 蓝草 Bluegrass\nsid/466 另类乡村 Alt-Country\nsid/1284 乡村摇滚 Country Rock\nsid/487 乡村民谣 Country Folk\nsid/486 前卫乡村 Progressive Country\nsid/467 美式乡村 Americana\nsid/493 牛仔 Cowboy\nsid/1285 传统乡村 Traditional Country\nsid/490 传统蓝草 Traditional Bluegrass\nsid/497 乡村福音 Country Gospel\nsid/474 纳什维尔之声 Nashville Sound\nsid/472 当代蓝草 Contemporary Bluegrass\nsid/499 乡村布吉 Country Boogie\nsid/498 器乐乡村 Instrumental Country\nsid/734 新原音 New Acoustic\nsid/488 叛道乡村 Outlaw Country\nsid/485 前卫蓝草 Progressive Bluegrass\nsid/496 弦乐团 String Band\nsid/475 都市牛仔 Urban Cowboy\nsid/504 西部摇摆 Western Swing\ngid/6 雷鬼 Reggae sid/839 雷鬼 Reggae\nsid/454 回响 Dub\nsid/438 斯卡 Ska\nsid/456 雷鬼流行 Reggae Pop\nsid/455 雷嘎 Ragga\nsid/442 舞厅 Dancehall\nsid/459 根源雷鬼 Roots Reggae\nsid/453 迪杰 Deejay / Toasting\nsid/461 当代雷鬼 Contemporary Reggae\nsid/440 洛克斯代迪 Rocksteady\nsid/6001 雷吉顿 Reggaeton\ngid/21 古典 Classical sid/2799 西方古典 Western Classical Music\nsid/3375 浪漫主义 Romanticism\nsid/3376 古典主义 Classical period\nsid/3374 巴洛克音乐 Baroque Music\nsid/696 现代古典 Modern Classical\nsid/1376 声乐 Vocal Music\nsid/1373 管弦乐 Orchestral\nsid/1372 歌剧 Opera\nsid/2236 教堂音乐 Church Music\nsid/2237 艺术歌曲 Lied\nsid/1364 合唱团 Choral\nsid/1375 交响乐 Symphonic Music\nsid/3113 交响曲 Symphony\nsid/1366 协奏曲 Concerto\nsid/2239 芭蕾 Ballet\nsid/2238 独奏 Recital\nsid/1363 室内乐 / 重奏 Chamber Music\nsid/720 古典跨界 Classical Crossover\nsid/3278 康塔塔 Cantata\nsid/1369 键盘音乐 Keyboard\nsid/695 极简主义 Minimalism\nsid/3274 新古典主义音乐 Neoclassicism Music\nsid/3279 清唱剧 Oratorio\nsid/711 后极简主义 Post-Minimalism\nsid/3224 奏鸣曲 Sonata\ngid/15 唱作人 Singer-Songwriter sid/270 根源唱作人 Singer-Songwriter\nsid/831 当代唱作人 Contemporary Singer-Songwriter\nsid/874 另类唱作人 Alternative Singer-Songwriter\nsid/3092 华语唱作人 Chinese Singer-Songwriter\ngid/8 拉丁 Latin sid/841 拉美音乐 Latin American Music\nsid/889 拉丁流行 Latin Pop\nsid/171 拉丁爵士 Latin Jazz\nsid/410 拉丁灵魂乐 Latin Soul\nsid/340 拉丁摇滚 Latin Rock\nsid/230 拉丁说唱 Latin Hip Hop\nsid/664 巴恰塔 Bachata\nsid/3194 拉丁另类摇滚 Latin Alternative\nsid/198 萨尔萨 Salsa\nsid/2148 探戈 Tango\nsid/212 热带 Tropical\ngid/19 中国特色 Chinese Characteristic sid/853 中国戏曲 Chinese Opera\nsid/3237 京剧 Beijing Opera\nsid/3242 昆曲 Kunqu Opera\nsid/3239 越剧 Shaoxing Opera\nsid/3243 粤剧 Cantonese Opera\nsid/852 中国曲艺 Chinese Quyi\nsid/851 中国民乐 Chinese Folk Music\nsid/850 中国传统民歌 Chinese Traditional Folk\nsid/3346 古风 GuFeng Music\nsid/3019 中国风 China-Wave\nsid/3027 红歌 Red Song\nsid/3025 军旅歌曲 Military Songs\nsid/3012 台湾原住民音乐 Taiwan Aboriginal\nsid/2190 时代曲 Shidaiqu\nsid/3350 佛教音乐 Buddhist Music\nsid/3351 喊麦 MC\u0026quot;\nsid/3353 评书 Story Telling\nsid/936 西藏传统乐 Tibetan Traditional Music\ngid/11 实验 Experimenta sid/697 实验音乐 Experimental\nsid/700 自由即兴 Free Improvisation\nsid/699 噪音 Noise\nsid/818 自然采样 Field Recordings\nsid/707 声效拼贴 Sound Collage\nsid/3030 蜂鸣 Drone\nsid/3111 诵读音乐 Spoken Word\nsid/693 实验电子 Experimental Electronic\ngid/22 儿童 Children sid/3281 儿歌 Nursery Rhyme\nsid/3249 儿童音乐 Children’s Music\nsid/3280 童声合唱团 Children’s Chorus\nsid/3282 胎教音乐 Prenatal Music\ngid/23 有声书 Audio Book\nsid/3223 有声书 Audio Book\nsid/3244 广播剧 Radio Drama\ngid/14 舞台 / 银幕 / 娱乐 Stage \u0026amp; Screen \u0026amp; Entertainment sid/746 原声 Soundtrack\nsid/747 电影原声 Film Score\nsid/752 电视原声 Television Music\nsid/755 卡通配乐 Cartoon Music\nsid/754 游戏配乐 Video Game Music\nsid/759 音乐剧 Musical theatre\u0026quot;\nsid/765 歌舞剧 Cabaret\nsid/761 演出金曲 Show Tunes\nsid/3106 圣诞歌曲 Christmas Music\nsid/3168 宝莱坞电影配乐 Bollywood\nsid/3276 史诗片配乐 Epic Score\nsid/3266 节日音乐 Holiday\n","date":"2023-03-26T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%99%BE%E7%B1%B3%E6%9B%B2%E9%A3%8E%E6%B5%81%E6%B4%BE%E6%80%BB/","title":"虾米曲风流派（总）"},{"content":"gid/2 流行 Pop\nsid/3076 流行 Pop\nsid/1541 国语流行 Mandarin Pop\nsid/1542 粤语流行 Cantopop\nsid/2980 电音流行 Electropop https://en.wikipedia.org/wiki/Electropop\nElectropop是一种混合音乐流派，结合了电子和流行流派的元素。作家霍林·琼斯将其描述为合成器流行音乐的变体，非常强调其电子声音。\nhttps://open.spotify.com/playlist/1BYospE2cLB28m3i84dcTV\nsid/2970 欧美流行 Western Pop\nsid/360 日本流行 J-Pop\nsid/1718 韩国流行 K-Pop\nsid/252 流行舞曲 Dance-Pop\nsid/989 梦幻流行 Dream Pop\nsid/343 成人时代 Adult Contemporary\nsid/3364 网络流行 Cyber Hit\nsid/873 独立流行 Indie Pop\nsid/2986 男孩团体 Boy Band\nsid/310 女子团体 Girl Group\nsid/265 青少年流行 Teen Pop\nsid/349 迷幻流行 Psychedelic Pop\nsid/1033 氛围流行 Ambient Pop\nsid/316 阳光流行 Sunshine Pop\nsid/767 无伴奏合唱 A cappella\nsid/2985 韩国抒情歌曲 Korean Ballad\nsid/3022 台湾民歌运动 Taiwan Folk Scene\nsid/1031 噪音流行 Noise Pop\nsid/3363 都市流行 City Pop\nsid/987 噪响流行 Jangle Pop\nsid/3017 前卫流行 Progressive Pop\nsid/1382 艺术流行 Art Pop\nsid/769 传统流行 Traditional Pop\nsid/1053 童稚流行 Twee Pop\nsid/1648 闽南语流行 Bân-lâm-gú Pop\nsid/1063 室内流行 Chamber Pop\nsid/690 当代基督 CCM / Contemporary Christian Music\nsid/1212 文雅流行 Sophisti Pop\nsid/550 凯尔特流行 Celtic Pop\nsid/3039 致幻流行 Hypnagogic Pop\nsid/357 法国流行 French Pop\nsid/3373 德国流行 German Pop\nsid/358 意大利流行 Italian Pop\nsid/529 非洲流行 Afro-Pop\nsid/2977 阿拉伯流行 Arabic Pop\nsid/9001 卧室流行 Bedroom Pop\nsid/802 弗拉明戈流行 Flamenco Pop\nsid/547 夏威夷流行 Hawaiian Pop\nsid/604 印度流行 Indian Pop\nsid/3372 俄罗斯流行 Russian Pop\nsid/1075 土耳其流行 Turkish Pop\nsid/774 人声合唱团 Vocal Group\n","date":"2023-03-26T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%99%BE%E7%B1%B3%E6%9B%B2%E9%A3%8E%E6%B5%81%E6%B4%BE%E6%B5%81%E8%A1%8C/","title":"虾米曲风流派（流行）"},{"content":" 学习视频资源：紫依\n历年分值分布 ","date":"2023-03-26T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E5%B8%88-00-%E8%80%83%E8%AF%95%E4%BB%8B%E7%BB%8D/","title":"软考-中级数据库系统分析师-00 考试介绍"},{"content":" 教程来自少数派：https://sspai.com/series/277/list\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\n通知 被动通知：并不需要及时关注的通知，例如淘宝商家给用户发送的定期商品折扣信息 主动通知（默认）：用户可能想知道的，例如最喜欢的体育比赛的最新比分 即时通知：需要人们立刻注意的通知，例如账户安全问题或最新快递动态 重要警告：直接影响用户并需要他们立即关注的关于健康和安全的紧急信息 这里的四种通知描述并不对等 iOS 有四种通知类型，严格来说 iOS 中只有两种通知类型，一种是重要警告，其他三种类型在 iOS 上的通知设置没有区别，都可以理解为普通通知。 重要警告上文未提及，但也是最容易理解的通知类型，这类通知极其罕见，一般是来自政府和公共机构或健康应用程序，比如极端天气预警和地震警告等，即使用户的设备静音也应该由系统通过声音强制提醒到用户以规避危险。 「即时通知」是比较容易让用户混淆的，即时通知跟重要警告都可以绕过用户的定时摘要和专注模式做到始终立即通知的效果，但区别在于重要警告可以绕过静音设置发出通知声音\n屏幕使用时间 内容与隐私访问限制模式： 可以限制应用的安装和删除、系统应用的使用、定位和蓝牙功能的权限等等，在把手机交给老人小孩时可用 为屏幕使用时间设置密码： 给屏幕使用时间功能设置密码，可以控制自己修改或是控制家人修改屏幕使用时间，达到自律或安全的效果 家人共享：\n与你设备上的「屏幕使用时间」功能一样，你可以查看你孩子的设备使用情况，或者为 Ta 设置 「app 限额」「停用时间」和「限定通信」等限制，孩子设备发出的屏幕使用时间申请会显示在信息 app 中，方便你准许或拒绝。\n聚焦 在聚焦的搜索输入框中，不仅可以实现搜索app或文件的需求，还能快捷完成一些操作。如：\n快捷设置计时器时间 打开专注模式 Shazam 查找歌名 简单计算 币种换算，如地区设置为中国大陆，则输入100美元，可以自动换算出折合人民币的价格。 查询单词 单位换算：比如键入「30C」或是「100F」，你可以实时得到摄氏度和华氏度之间的换算结果；同理，输入「100 厘米」则可以获得厘米与英寸的换算、输入「10 公斤」则可以获得公斤与磅之间的换算结果 对于不想在聚焦搜索中搜索的应用内容，可以在设置 \u0026gt; Siri 与搜索中关闭该应用的在搜索中显示内容的设置。\n此外，部分应用诸如 1Password、欧陆词典等出于安全性或易用性考虑，也会在其应用内部的设置当中提供「是否开启聚焦搜索」的开关。\n账户与密码 检测可能被泄露的密码： 「检测已泄漏的密码」功能会监控在网络上泄漏的密码库并且与你的密码比对。如果发现你的密码有泄漏的可能，iCloud 钥匙串会提醒你尽快更改密码，防止账号被盗。\nApple Pay 与钱包 钱包Wallet ：通过钱包中管理的 Apple Pay 或者凭证，你可以使用银行卡进行无接触支付、使用交通卡乘坐地铁或公交、甚至是解锁门禁和汽车、查看预定的电影票。\n所在的城市暂时没出交通卡咋办？ 使用交通联合卡！\n只要你的城市支持交通联合卡，你就可以开通其他城市的交通卡，并在当地使用。你可以在下图或者微信公众号「交通联合官方服务号」的「城市名单」菜单中查看受支持的城市列表。\n设置快捷交通卡：\n你可以在设置 \u0026gt; 钱包与 Apple Pay \u0026gt; 快捷交通卡里设置你常用的交通卡为「快捷交通卡」。设置好快捷交通卡，在通过闸机或读卡器时，无需进入点亮屏幕或打开钱包，只需要将手机顶部靠近读卡器即可进行支付。\n手机没电后，甚至可以在最多5小时内，借助手机的备用电量刷卡\n隐私与定位权限 安全检查：\niOS 16 新增的「安全检查」隐私设置可帮助遭受家庭暴力或亲密关系暴力的人们快速重设之前授予他人的权限，还能帮你管理已授予过权限的人和 App。我们希望所有人用不到此类功能，但如果感知到任何危险可以借助此功能快速规避隐私风险，保护自身安全。\n1、紧急重设：\n用户与 App：确保 iPhone 不再与任何人或应用程序共享任何位置数据、照片库等，确保认可的设备才能登录您的 Apple ID，支持远程注销的任何设备并从中删除 Apple ID。 账户安全性：确保帐户已设置（或删除）受信任的电话号码，用以接收关键的验证信息等。 紧急联系人：确保紧急联系人可信任，如果使用 iPhone 的紧急 SOS 功能，这些联系人将收到通知。 2、管理共享与访问权限\n辅助功能 打开白噪音\n进入 设置 \u0026gt; 辅助功能 \u0026gt; 音频 / 视觉 \u0026gt; 背景音 打开开关，就能得到一段白噪音了。如果想要更方面地启用，还可以在 设置 \u0026gt; 控制中心 把「听觉」加入到控制中心。\n键盘与文本编辑 选择文件：双击选择词，三击选择段落\n跨应用拖放：比如长按图片或文字，另一只手切换到另一个app（如备忘录），放手即放置\n连续输入大写字母：点击⬆️图标，只能输入一个大写字母。双击⬆️图标，则会进入固定输入大写字母的模式。\n关于自动补句号的功能：连续输入两个空格会自动转化句号，但是如果大部分场景不需要这种功能的话，反而还得手动删除句号。可以通过设置 \u0026gt; 通用 \u0026gt; 键盘关闭此功能。\n","date":"2023-03-25T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-ios%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B05%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/","title":"「少数派-IOS蓝皮书」学习笔记之05系统功能"},{"content":"想说的话 又开始写每周漫步了。昨晚刚给网站换了主题（hugo-stack），蛮喜欢的。最近打算继续输出了。\n关于本周 因为最近开始实行早睡早起（22:00-6:00），感觉属于自己的有效时间多了。但是这周入睡比较困难，早上起的也比较晚。工作状态还不错，但是感觉比上周累。周二去健身房跑了半小时，洗头后再去加班，然后就特别疲倦，头越来越痛。谨记：以后这种情况有洗头的话，要吹干！\n本周keypoints：\n渐渐把阅读中心转移到Readwise reader 报名了软考中级数据库 凹凸电波都要七周年了，上次六周年的直播还历历在目 发现了两个好用的谷歌插件，一个是reader的插件，可以快速将文章添加到reader并可以在原文章中高亮；一个是rsshub的插件，检测当前界面的rss source 被文心一言的图片生成笑死 日渐被AI震撼，开始感觉再不入场就out了。即刻真是讨论AIGC的好地方 去达明街吃了岭南牛杂，很满意，加的泡面很香。尝试了烤苕皮，充满了香菜味 公司食堂太难吃了，流泪 周二晚跑步半小时，腿酸需要三天来治愈 下周争取学习些技术相关，挤出时间学习 在看《他是谁》，据说质量有以前的犯罪片那味儿。但是我的观看进度缓慢，最近观影或剧几乎为零，叹气 在即刻看到的：把微信读书当搜索引擎用，会定位到书中的位置，然后可以有选择的阅读，内容有时比网上靠谱多了，小技巧get b站的稍后看真是个好功能，把想看的短视频积到不用动脑的时间看 学习生活技能，学习专业知识。现在多了一项，学习AI的使用 在少数派发现有意思的地图标记APP：exping，于我而言一个不错的使用场景是标记探店点 言论 自由 = 能力 - 欲望\nnewsletter 事不过三\n倦怠状态下，我们的行为普遍都是比较碎片化的，很难花整块的时间去很认真地做一件事。长此以往，我们的心理效能会越来越少，做事动力和能力越来越低，因此感到越来越累。\nnewsletter 事不过三\n现代人经常会感到浮躁，缺少一颗沉下去做事的心。我也是，常常在自问，时间都跑哪去了，怎么什么正事都干不了。碎片时间何去何从，还在摸索中。要时刻知道自己目前在做啥，是否在度过无意义的垃圾信息喂养时间，比如千篇一律的短视频。\n他们想找到这样一种粪便：大小、形状与红薯相近，表面闪着绿色的光泽，轻轻掰开，能闻到一股竹叶的清香。如果幸运，遇到还冒着热气的，他们会激动得扑上去！\nmp.weixin.qq.com\n第一次看粪便看饿了哈哈哈\n行动是绝望的解药。（Action is the antidote to despair.） \u0026ndash; 琼·贝兹，美国音乐家\nhttp://www.ruanyifeng.com/blog/2023/03/weekly-issue-246.html\n读到这样一段文字，让我联想起，今天的年轻人第一次使用 AI 的感受。这种情绪是类似的吗？感到惊讶？神秘？还是隐隐的担心和恐惧？我不知道。在 25 年前，Kottke 第一次接触互联网，并由此找到了自己一生的工作，这个瞬间是神圣的，我相信 AI 也会启发某些人做出这样重要的决定。\nnewsletter Platform Thinking +\n互联网和AI的出现，一大共性是产生了更多的“可能性”，这个更多是巨大的，待发掘的，无法预期的。\n2023.03.25 🌧️ by.XD\n","date":"2023-03-25T00:00:00Z","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.10-%E5%8E%BB%E5%81%9A%E6%83%B3%E5%81%9A%E7%9A%84%E4%BA%8B%E5%90%A7/","title":"【XD的一周漫步】No.10 去做想做的事吧 "},{"content":" 教程来自少数派：https://sspai.com/series/277/list\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\n目录：\n拒绝骚扰信息 巧用实况文本 规划旅途（地图App） 照片回忆 睡眠模式 共享 拒绝骚扰信息 主要讲的就是设置拦截条件。比较有启发的是，对方是可以通过apple id直接给你发骚扰信息的（比如在共享相簿中），由于apple id是邮箱地址注册的，所以如果实在骚扰信息太多，可以直接换个没在其他地方用过的邮箱号（需要参考更换apple id的教程）。\n巧用实况文本 使用场景：\n碎片信息提取（如楼下的通知等），拍照完实况本文复制到别处存放 备忘录-实况文本 实现拍照ocr直接记录在备忘录 实况文本后续支持的操作也很实用，如翻译、创建提醒事项 视频暂停实况文本 翻译app实况文本，翻译书等 规划旅途（地图App） 地图App有个功能是“我的指南”，类似收藏夹。可以建立多个指南，每个指南中收纳若干地点。比如要去某处旅游，可以把计划目的地都添加到一个指南中。或者可以把日常想去的地方添加到一个指南，周末可以有规划地安排出行。\n多途经点路线规划功能:\n如果有多个想去的地方，可以利用新版地图 App 提供的多途经点路线规划功能（中区暂未上线），就是在路线规划的页面追加其他的目的地，地图 App 提供更优化途经点的导航方案。\n驾车途中寻找停靠点： 可在中途“添加停靠点”，后面也可直接点击“恢复路线”继续出发\n照片回忆 苹果的照片App，会不定期生成回忆视频，对一段时间内或同一主题的照片或视频进行剪辑、配乐、滤镜生成一段回忆视频。有时候打开看看，很不错。喜欢的话可以收藏起来，或分享给好友。\n睡眠模式 关于睡眠，有几点可以做到优化：\n手机设定睡眠模式，设定上床和起床时间 带手表入睡，可以生成睡眠报告 设定睡眠模式通知的白名单，只允许必要的通知 通过屏幕使用时间改善自己的电子设备使用习惯 共享 同播共享（视频、音乐、屏幕），同播共享可以理解为加强版的「视频通话 + 实时影音同步」功能 共享相簿、共享图库 共享健康信息 共享备忘录，共同编辑 共享提醒事项，共同柴米油盐 ","date":"2023-03-18T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-ios%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B03%E7%94%9F%E6%B4%BB%E7%AF%87/","title":"「少数派-IOS蓝皮书」学习笔记之03生活篇"},{"content":" 教程来自少数派：https://sspai.com/series/277/list\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\n主屏幕 今日视图（负一屏）无需解锁即可查看，直接在锁屏处右划即可查看\n硬件按钮与手势 按住 ①，直至出现 Apple Logo，设备就进入开机状态。至于关机，需要同时按住 ② 或 ③ 和 ①，或者先按一下②，再按一下③，最后长按①，都能弹出关机滑块。这两种方式的区别是：第一种会出现「滑动来关机」「医疗急救卡」和「SOS紧急联络」三种选项，第二种则只有「滑动来关机」。 在「相机」应用中，②、③ 也可以充当快门，按下任一按钮即可拍照。 截屏也是我们经常进行的操作，在全面屏设备上，同时按下 ① 和 ②；在非全面屏设备上，同时按下 ① 和 ⑤ 即可截屏。(注意，目前只有safari可以选择长截图)。 强制重启、恢复模式、清除运行内容功能不常用，等用到了再查\n控制区 通话效果提示。在没有语音通话或视频通话的情况下，这个模块并不会出现在控制中心。而如果在进行语音通话或视频通话，会显示此处视频效果和麦克风模式选项。长按视频效果可以开启人像，以虚化你的背景；长按麦克风模式可以在标准、语音突显、宽频三种模式中选择。其中语音突显会对麦克风采集到的环境噪音进行过滤，使得通话对方更容易听清你的声音，宽频不会过滤声音，可以让对方听到你这里的噪音或音乐。\nsiri 没啥特殊的用法，主要有两点特别的：\n可以通过设置使用打字来和siri沟通 打电话手不方便挂电话时，可以召唤siri来挂电话 Apple watch解锁 通过手表解锁后，如果这时候手机并不在自己手上，而是在其他人手上，而 iPhone 又通过 Apple Watch 被解锁了，可以立即点击 Apple Watch 上的「锁定 iPhone」按钮再次锁定 iPhone 屏幕。而且在这次锁定之后，Face ID 和 Apple Watch 两种解锁方式将被禁用，只允许通过输入密码进行解锁，防止再次误解锁。\n网络功能设置 控制中心可以直接关闭wifi。但是此处的「断开」并非关闭无线局域网功能，而是暂时不连接 Wi-Fi。一般来说，它会在第二天之前保持断开状态，到第了第二天则会自动加入附近连接过的 Wi-Fi。如果需要完全关闭 Wi-Fi 功能，则需要前往「设置 \u0026gt; 无线局域网」中关闭「无线局域网」开关。（蓝牙同理）\n私有地址设置：\nMAC 地址可以用于标识设备，并在互联网上追踪当前设备的访问情况，在「设置 \u0026gt; 通用 \u0026gt; 关于本机」里的「无线局域网地址」就是当前设备的 MAC 地址。 从 iOS 8 开始，苹果便为 iOS 加入了「私有地址」功能来保护用户的 MAC 地址。在 设置 \u0026gt; 无线局域网 中，点击 Wi-Fi 右侧 ⓘ 按钮进入详情页，即可看到「私有地址」的开关。打开「私有地址」后，设备会为每个 Wi-Fi 网络随机生成一个 MAC 地址，用于保护真实的 MAC 地址。\n配置代理：\n在 设置 \u0026gt; 无线局域网 中，点击 Wi-Fi 右侧的 ⓘ 进入详情页面，随后点击「配置代理」即可进入配置页面。将代理选项修改为「手动」，并按照需求填写服务器和端口即可。 以网络抓包为例，在同个网络中有一台 MacBook 开放了 8888 端口用于连接。这时，只需要将该 MacBook 的局域网 IP 和 8888 端口填入对应的输入框并保存，即可连接至 MacBook 作为代理服务器。在 MacBook 上，通过抓包软件就可以看到 iOS 设备上的数据流量。 在完成网络代理的任务后，请记得将代理配置恢复为「关闭」。否则在代理服务器关闭后，iOS 设备可能会出现无法上网的情况。\nWAPI功能\nWAPI 是中国制定的一套无线局域网标准，由于它使用了双向认证，相较于传统的 Wi-Fi 技术会更加安全。不过这套协议暂未被广泛支持，日常生活中支持 WAPI 功能的路由器也不多。\n个人热点的三种连接方式：\n无线局域网 蓝牙 USB 飞行模式： 需要注意的是，打开飞行模式后，iOS 只会关闭掉蜂窝网络相关的功能，已经连接的 Wi-Fi 和蓝牙设备不会受到影响。\n显示与个性化 夜览模式（iOS 9 开始引入） 夜晚除了深色模式，可以通过设置夜览模式的时间，在夜晚屏幕会呈现暖光效果。 原彩显示 通过摄像头检测不同环境下的色温，通过算法动态调整 iPhone 屏幕的色温。 夜览、深色、原彩模式可以在控制中心快捷切换。 铃声音量调节\n需要注意「用按钮调整」开关。在 iPhone 上音量键可以控制两种音量：铃声音量和媒体音量。打开该开关后，在没有播放媒体的情况下，音量键控制的是铃声音量。在调整铃声音量的时候，会在状态栏区域显示铃声大小。\n","date":"2023-03-18T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-ios%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B04%E8%AE%A4%E8%AF%86ios/","title":"「少数派-IOS蓝皮书」学习笔记之04认识iOS"},{"content":"官网： mybatis： https://mybatis.org/mybatis-3/zh/index.html mybatis-spring：http://mybatis.org/spring/zh/\n由于Mybatis的很多操作在springboot+mybatisplus中都大大简化了，所以只需要浅学一下，打个基础吧。\n概念 MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。\n入门 安装 将Mybatis的路径导入pom.xml中即可，例如：\n1 2 3 4 5 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.mybatis\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mybatis\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.5.7\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; 构建SqlSessionFactory 使用XML XML文件配置了数据库连接信息等，官网给出的简单例子：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; ?\u0026gt; \u0026lt;!DOCTYPE configuration PUBLIC \u0026#34;-//mybatis.org//DTD Config 3.0//EN\u0026#34; \u0026#34;https://mybatis.org/dtd/mybatis-3-config.dtd\u0026#34;\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;environments default=\u0026#34;development\u0026#34;\u0026gt; \u0026lt;environment id=\u0026#34;development\u0026#34;\u0026gt; \u0026lt;transactionManager type=\u0026#34;JDBC\u0026#34;/\u0026gt; \u0026lt;dataSource type=\u0026#34;POOLED\u0026#34;\u0026gt; \u0026lt;property name=\u0026#34;driver\u0026#34; value=\u0026#34;${driver}\u0026#34;/\u0026gt; \u0026lt;property name=\u0026#34;url\u0026#34; value=\u0026#34;${url}\u0026#34;/\u0026gt; \u0026lt;property name=\u0026#34;username\u0026#34; value=\u0026#34;${username}\u0026#34;/\u0026gt; \u0026lt;property name=\u0026#34;password\u0026#34; value=\u0026#34;${password}\u0026#34;/\u0026gt; \u0026lt;/dataSource\u0026gt; \u0026lt;/environment\u0026gt; \u0026lt;/environments\u0026gt; \u0026lt;mappers\u0026gt; \u0026lt;mapper resource=\u0026#34;org/mybatis/example/BlogMapper.xml\u0026#34;/\u0026gt; \u0026lt;/mappers\u0026gt; \u0026lt;/configuration\u0026gt; 不使用XML ","date":"2023-03-09T00:00:00Z","permalink":"https://huangxindi.com/p/mybatis%E5%85%A5%E9%97%A8/","title":"Mybatis入门"},{"content":"专业学习 计算机学习 CS自学指南 https://csdiy.wiki/ 计算机科学速成课（视频） https://github.com/1c7/crash-course-computer-science-chinese 网道（一些语言的文档） https://wangdoc.com/ JAVA HOW2J（java学习网站） https://how2j.cn/ javaGuide（github上的java面试指南） https://github.com/Snailclimb/JavaGuide Java 工程师进阶知识完全扫盲 https://github.com/doocs/advanced-java#/ java常用技术介绍 https://github.com/aalansehaiyang/technology-talk#/ 专业工具 gitexplorer（选择git实现需求，获取git命令） https://gitexplorer.com/ quick reference（开发人员用的速查表） https://wangchujiang.com/reference 墨天轮数据库在线学习平台（付费使用部署好的线上环境） https://www.modb.pro/marketlist?type=1 myCompiler（支持多语言的在线IDE） https://www.mycompiler.io/ 奔跑中的奶酪免费API整理 https://www.runningcheese.com/api explainshell（解释你给的shell） https://www.explainshell.com/ linux手册（更易读） https://dashdash.io/ 其他 Jetbrains 正版授权账号购买 weixin.qq.com ","date":"2023-03-02T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/","title":"学习资源"},{"content":" 阿里云盘TV https://aliyunpantv.gitlab.io/download.html 插件 CSDNGreener https://github.com/adlered/CSDNGreener ","date":"2023-03-02T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%BD%AF%E4%BB%B6%E8%B5%84%E6%BA%90/","title":"软件资源"},{"content":"AI资源汇总网站 FUTUREPEDIA https://www.futurepedia.io/ FutureTools https://www.futuretools.io/ 17yongai（资源汇总、咨询、使用教程） https://17yongai.com/ Saas AI Tools https://saasaitools.com/ AI工具汇总 https://www.aiyjs.com/ 文本生成或简化 总结提炼（输入文章、pdf、视频等） https://labs.kagi.com/ai/sum 周报生成器 https://weeklyreport.avemaria.fun/zh 聊天简化器（输入群聊聊天记录，输出概括后的大纲或段落） 文本润色 DeepL Write（润色你的英文写作） https://www.deepl.com/write 聊天机器人 chatgpt（无需介绍） https://chat.openai.com/chat teach-anything（无法上下文关联，简单的给出一个问题，输出答案。 OpenAI GPT-3 API） https://www.teach-anything.com/ 国内的\u0026quot;chatgpt\u0026quot;（优点是快） https://freegpt.one/ openprompt (给定一些常用的使用场景聊天框，免梯子，\u0026gt;10问题需开会员) https://openprompt.co/ 图像 6pen（从文本描述生成绘画艺术作品） https://6pen.art/ 文心作画大模型 （给出描述文本可生成艺术作品、工业设计、游戏动漫、文章插画等不同种类图像） https://wenxin.baidu.com/ernie-vilg#/ image2description https://scenex.jinaai.cn/scenes 让简笔画动起来 https://sketch.metademolab.com/ 音频 输入音频，总结成文字 https://plaud.ai/transcribe 根据描述生成spotify歌单 https://www.playlistgeniusai.com/ PDF chatpdf https://www.chatpdf.com/ pandagpt https://app.pandagpt.io chat support txt,pdf,epub,markdown\u0026hellip; https://chatfiles-ui.fly.dev/zh DOC chatDOC https://chatdoc.com/ 第二大脑plus AI-Powered Note Connections for Obsidian https://github.com/brianpetro/obsidian-smart-connections Prompt Engineering 免费的 Prompt Engineering 教程 https://learningprompt.wiki/ MidJourney提示词工具 https://aijiaolian.chat/midjourney platform for Prompt Engineers https://promptmakr.com/ chargpt prompt模版 https://www.aishort.top/\n其他 做菜视频2菜谱 https://video2recipe.com/ 医疗xAI https://glass.health/ai/\n优化体验 一键部署私人chatgpt网页 https://github.com/Yidadaa/ChatGPT-Next-Web 移动和电脑端防止chatgpt频繁报错 https://github.com/xcanwin/KeepChatGPT/\n有偿快捷使用途径 https://ideachat.top ","date":"2023-03-01T00:00:00Z","permalink":"https://huangxindi.com/p/ai%E8%B5%84%E6%BA%90/","title":"AI资源"},{"content":" 雀乐（原落网，等待回归） https://www.indie.cn/ bandcamp https://bandcamp.com/ ","date":"2023-03-01T00:00:00Z","permalink":"https://huangxindi.com/p/all-about-music/","title":"all about music"},{"content":"live 演唱会时间表\n","date":"2023-03-01T00:00:00Z","permalink":"https://huangxindi.com/p/music%E8%B5%84%E6%BA%90/","title":"music资源"},{"content":" 除了正文列举的资源网站，也可以通过以下途径找资源：\n微信网页搜索 带资源等关键字 贴吧 闲鱼 书 Z-Library Pro助手（实时更新可用地址） https://zlib.pro/ 鸠摩搜书 https://www.jiumodiary.com/ 电子书资源网站合集 github 书易（同样是电子书网站合集） https://shuyi.shenmezhidedu.com/#/ Z-Library 入口 https://singlelogin.me/ 电影/剧 奈斯搜索（阿里云盘） https://www.niceso.fun/ 磁力熊（磁力链接，极少有网盘资源，在线看） https://www.cilixiong.com/ 来搜一下 （网盘） https://www.laisoyixia.com/ 麦克周（网盘，资源质量可以） https://mkzhou.com/ 音乐 麦克周 https://mkzhou.com/ 多站合一下载器（很好很强大，基本用这个就够了） http://music.wandhi.com/ hifini https://www.hifini.com 专辑封面图片下载（需要🪜） http://coverbox.henry-hu.com 无版权音乐下载 https://incompetech.com/music/royalty-free/music.html https://dova-s.jp/EN/ https://ncs.io/ https://openverse.org/ https://pixabay.com/music/ 歌词搜索 https://mojim.com/cnznew.htm 图像 pixabay https://pixabay.com/ pexels https://www.pexels.com/zh-cn/#/ publicdomainarchive https://publicdomainarchive.com/index.html#/ mixkit（做视频的免费素材） https://mixkit.co/ backiee（壁纸资源） https://backiee.com/ wallheaven（壁纸资源） https://wallhaven.cc/ wallpapers（壁纸资源） https://wallpapershome.com/ 必应壁纸 https://www.bingimg.cn/ 阿里堆友（3D在线编辑器） https://d.design/ ","date":"2023-03-01T00:00:00Z","permalink":"https://huangxindi.com/p/%E4%B9%A6%E5%BD%B1%E9%9F%B3%E5%9B%BE%E5%83%8F%E8%B5%84%E6%BA%90/","title":"书影音图像资源"},{"content":"各种资源汇总网站 阿虚同学（书影音资源、软件、实用网站等资源，很好很强大） https://axutongxue.com/ 快吧软件 （各种资源） http://www.fast8.cc/ 奔跑中的奶酪 https://www.runningcheese.com imyshare（各种资源和在线工具） https://imyshare.com/ 67tool（在线小工具合集） https://www.67tool.com/ 开源灵感数据库（在github上记录的工具汇总） https://github.com/zhaoolee/ins 小工具 33台词（通过台词找影片素材） https://33.agilestudio.cn/ 在线文件格式转换 https://cn.office-converter.com/ 挑战答题搜索 http://www.syiban.com/search/index/init.html?modelid=1\u0026q=%E6%B5%8B%E8%AF%95 简搜题（包括技术笔试问题） https://www.jiansouti.com/ kindle2flomo https://tit1e.github.io/kindle2Flomo/#/ emoji搜索 https://www.emojidaquan.com/ https://emojipedia.org/ 网络测速网站 https://test.ustc.edu.cn/ 亲戚关系计算器 https://passer-by.com/relationship/ iconbolt（免费vector图标） https://www.iconbolt.com/ iA Presenter（markdown2ppt） https://ia.net/presenter slidev（markdown2ppt） https://cn.sli.dev/#/ diffchecker（在线比对text） https://www.diffchecker.com/ excalidraw（在线画布工具） https://excalidraw.com markdown速查 https://markdown.com.cn/cheat-sheet.html#%E6%80%BB%E8%A7%88 搜索电影台词 https://www.kexiaoguo.com/ 查找电影剧照 https://beta.flim.ai/ 根据文字搜索播客 https://www.podfind.xyz/ rss rss.app (复制链接生成rss链接) https://rss.app rsshub https://docs.rsshub.app 建站相关网站 宝塔 https://www.bt.cn/new/index.html#/ 七牛云 https://sso.qiniu.com/ 域名备案 https://www.beian.gov.cn/portal/index.do#/ ","date":"2023-03-01T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B7%A5%E5%85%B7%E8%B5%84%E6%BA%90/","title":"工具资源"},{"content":" 现在日常的阅读几乎就是rss+newsletter，但有些网站不提供这类资源，或网站本身维护得很棒，于是记录如下。\n合集 newsletter推荐 https://alleyread.com/ 中文newsletter导航 https://www.notion.so/kfang/Newsletter-68ee46c0a4574f659fb8a873ead438c6 外国个人博客收集 https://ooh.directory/ 中文独立博客列表 https://github.com/timqian/chinese-independent-blogs 轻技术 老郭种树 https://guozh.net/ garss （一个在github上的rss源，每日更新） https://github.com/zhaoolee/garss 阮一峰的网络日志（每周必看） http://www.ruanyifeng.com/blog/ 谷粒-Chrome插件英雄榜 https://github.com/zhaoolee/ChromeAppHeroes 少数派 https://sspai.com/ 有知有行（投资学习） https://youzhiyouxing.cn/materials 奇客（各种新闻等，化身好奇宝宝） https://www.solidot.org/ 湾区日报（英文） https://www.wanqu.co/ 技术文章 linux爱好者网站（网站技术文章偏日常，有空可翻翻） https://www.myfreax.com/ hellogithub（技术类论坛） https://hellogithub.com V2EX（技术类论坛，🪜） https://www.v2ex.com/ see,record,voice tsb2blog（值得一读） https://tsb2blog.com/publish openmind（英文） https://www.openmindmag.org 晚点（由团队和中国权威财经媒体《财经》杂志联合创办，目前聚焦在互联网领域） https://www.latepost.com/site/index#/ sixthtone（国内的新闻，英文） https://www.sixthtone.com 中国数字时代404文库（内容如其名，🪜） https://chinadigitaltimes.net/chinese/404-articles-archive 有趣 十年之约（展示一些独立博客及上面的文章） https://www.foreverblog.cn/feeds.html#/ Pairagraph（英文，关于各种议题的辩论文章） https://pairagraph.com/ 喷嚏网 http://www.dapenti.com/blog/index.asp ","date":"2023-03-01T00:00:00Z","permalink":"https://huangxindi.com/p/%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95/","title":"阅读清单"},{"content":" 教程来自少数派：https://sspai.com/series/277/list\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\n教程目录：\n内容 9 月 7 日 技巧胶囊·创作篇 9 月 15 日 技巧胶囊·效率篇 9 月 22 日 技巧胶囊·生活篇 10 月 系统指南·认识 iOS 10 月 系统指南·系统功能 11 月 系统指南·苹果生态 12 月 系统指南·生活应用 1 月 系统指南·效率工具 不定期更新 「功能追踪」将依据 iOS 系统更新时间而定 ","date":"2023-02-15T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-ios%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B00%E7%9B%AE%E5%BD%95/","title":"「少数派-IOS蓝皮书」学习笔记之00目录"},{"content":" 教程来自少数派：https://sspai.com/series/277/list\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\n目录\n人像模式 风光 \u0026amp; 街拍 人像 \u0026amp; 静物 后期技巧：美食 \u0026amp; 人物 \u0026amp; 环境 视频拍摄 iMovie 快速完成剪辑 人像模式 打开“人像”，点击右上角的f，可调整“光圈大小”（景深）\n光圈（光圈大小影响进光量）的影响：\n曝光度 景深 分辨率 f值越小，光圈越大，景深越小，虚化程度越高。\n如果是单反摄影，调节光圈不仅可以调整景深，还可以控制曝光和成像效果。但在 iPhone 中，由于镜头光圈都是固定的，因此我们在下文提到的「光圈」指的只是算法所生成的虚化效果。\n大小光圈使用特点：\n大光圈倾向于需要虚化的，不止是人，宠物食物也很适合 小光圈更自然，“提供了更加丰富的后期空间“，”支持 iOS 16 锁屏壁纸的遮罩功能“ 技巧：\n用人像模式拍摄的照片，可以在照片中编辑，重新调整“光圈值” 闪光灯的妙用：闪光灯+胶片效果，不一样的效果 证件照临时救急：人像，开”舞台光“效果，再利用一键更新背景颜色的app替换即可得到一张80分的证件照 ”摄影室灯光“效果，相当于一次智能补光 风光 \u0026amp; 街拍 夜间模式：\n本质上就是增加曝光时间。在相机左上角月亮标志可以开启/关闭。如果手机型号不支持，可利用第三方app增加曝光时间。\n网格线：\n便于横竖对齐，或是辅助构图拍摄。\n超广角：\n开启方式是相机下方的\u0026quot;0.5X\u0026quot;，可以容纳更多东西，拍风景或租房照片时好用。\n人像 \u0026amp; 静物 滤镜：\napple提供的9种原装滤镜，是支持拍摄中/完（在照片中）添加或去掉的。\n教程中提供了经典使用场景：\n鲜明 / 鲜暖色 / 鲜冷色：此系列滤镜能够提供更加饱满的色调，使画面更加鲜艳明亮。其中，鲜暖色本身会给人一种温暖的感觉，特别适合美食照片。而鲜冷色会给人冷静、小清新的感觉，适合用来拍摄建筑或清爽的饮食等照片。\n反差色 / 反差暖色 / 反差冷色：反差色系列是一种以明暗和对比度反差闻名的滤镜，以低饱和度和高对比度呈现复古的效果。其中，反差暖色由于加入黄色色调，显得更加「古早」一些，适合拍摄古建筑等。反差冷色适合拍摄发光物，可以降低外部环境色调的影响，增加拍摄物和环境的对比度。\n单色 / 银色调 / 黑白：黑白系列滤镜可以降低色彩对照片主旨的影响，通过减少色彩进一步增加照片的质感。其中银色调会给人以复古老照片的感觉，适合拍摄古镇小巷，纯净质朴。相比于单色，黑白的对比度更高，画面也更加简洁，也会令照片更加耐看。\n善用闪光灯：\n除了相机自动识别的开/关闪光灯，我们可以根据需要手工开/关闪光灯以获得更好的效果：\n手工开：逆光拍摄时，使画面明暗更均匀；拍摄细节丰富的东西时 手工关：想更加还原场景时，比如夜晚拍照时关闭闪光灯或使用夜间模式拍照 长焦：\n与超广角相反，开启方式是相机下方的比如\u0026quot;2X\u0026quot;。前者是做加法，后者是做减法，适用于突出主体。\n镜像反转：\n原始前置摄像头：和照镜子一样效果 翻转后：和后置摄像头相当的拍摄效果（即左右不相反），也就是他人眼中的自己 「利用对焦和曝光，拍出艺术感」：\n点击画面，获得对焦点。上下可调节曝光度。\n逆光拍摄人像剪影技巧：逆光+焦点对准人+降低曝光\n后期技巧：美食 \u0026amp; 人物 \u0026amp; 环境 魔棒：傻瓜式一键修图 饱和度：增加饱和度一般可以让东西看起来更好吃！值得注意的是，编辑中包括「饱和度」和「自然饱和度」两种方式，后者更加自然，推荐！ 色温：营造事物氛围。暖色调适合夜宵火锅等，冷色调适合冰凉、高级感等。 人物美颜\n如果我们想要肤色显得更白净，可以通过调整「色温」来为图片增加一些冷色调，同时弱化暖色在画面的组成部分，使得肤色更加白皙。\n我们经常会在拍照时遇到「人物肤色泛红」的情况。对于这种情况，我们可以微调「色调」，利用互补色原理为画面加入一些绿色调，削弱红色在画面中的表现力。\n但在一些光线较弱或是环境光源复杂的场景下，使用色温和色调不仅会改变人物的肤色，还可能导致画面中的其他颜色失真。在这种情况下，我们可以选择使用「曝光」「亮度」或是「鲜明度」整体提高画面中的亮度，弱化色彩的表现力，一定程度可以改善肤色的表现。\n拯救随手拍的“烂片”：\n矫正工具（如照片歪了一点）+裁切工具（有时候裁成正方形更有感觉）\n挽救噪点图：\n1、照片编辑中的消除噪点；2、对于消除噪点还是效果不佳的情况，可以尝试转为黑白滤镜\n视频拍摄 📽️电影效果 可以在保持视频主体清晰的同时，营造美观的模糊前景和背景。\n更妙的是，可以在拍摄完在视频成品上调整对焦对象。\n我们还可以在多人场景使用电影效果拍摄，例如喧闹的餐厅、拥挤的旅游景区，甚至只是家楼下的超市，在这些场景拍摄时，我们都可以使用电影效果，将焦点对准我们需要拍摄的人物主体，通过背景虚化来烘托出我们的主角。\n🏃‍♀️运动模式 开启方式：视频上方的有个奔跑小人的图标\n可以获得更加平稳的视频\n启用运动模式以后 iPhone 录制视频的分辨率会从最高的 4K 变为 2.8K，1080P 则不受影响；还有一点同样值得注意，为了获得更好的录制效果录制时的环境光最好不要太暗，必要的时候可以额外采购一盏棒灯再使用运动模式可能是一个更好的选择。\n🦥慢动作 使用场景就不赘诉了。注意点如下：\n使用 iPhone 录制慢动作视频只会录制画面，声音并不会一同录制，毕竟慢速处理过的声音会失真，往往也不太可用。\n而使用 iPhone 默认设置拍摄的慢动作视频，一般是头和尾是常速，中间一段是慢动作。\n如果想要后期调整慢动作区间，可以在拍摄完成之后进入编辑界面，通过滑动底部的竖状条来选择想要「慢速」的区间。\n室内慢动作拍摄的画面闪烁：\n可尝试把视频格式调整为1080p HD/120 fps\n⏳延时摄影 延时摄影是通过间歇拍摄照片/视频，通过后期串联把一段较长的一段时间压缩在很短的视频里，让我们通过短短几十秒的视频就能看到几十分钟甚至数日的时光。\n⏩快录视频 如果突然有个精彩瞬间，照相模式如何更快速切换到视频模式？\n在照相界面，长按快门按钮即可。如果此时需要直接切换到视频模式，可以往右划，就不用一直长按。\n🔢视频录制的两个重要参数 分辨率 帧速率（FPS）：每秒钟刷新的图片的帧数 可以在【设置】中进行更改。更妙的是，在最近的机型中，可以在视频界面直接点击右上角的参数值来切换这两个参数。\niMovie 快速完成剪辑 「照片」中原生的视频剪辑可完成初修，但还不够。如果有更复杂的视频剪辑需求，可以使用apple的原生app：iMovie。\n“魔幻影片“功能：\n懒人出片神器。导入若干素材，可以自动完成影片的拼接，转场，bgm等。可以在此基础上进行视频的进一步编辑（如字幕、裁剪等）。\n“故事板”功能：\n相当于一位编导，我们只要指定主题，它就会提供各个阶段我们所需导入的影片类型。我们只要选取合适的影片，按照它指示的位置导入，再自己进行细调，出来的就是“大片”。\n","date":"2023-02-15T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-ios%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B01%E5%88%9B%E4%BD%9C%E7%AF%87/","title":"「少数派-IOS蓝皮书」学习笔记之01创作篇"},{"content":" 教程来自少数派：https://sspai.com/series/277/list\n本学习笔记仅用于个人回溯参考，教程中的很多细节和图像没有体现。\n目录\n更高效的 iOS 文字输入 更优雅的拷贝粘贴 分享网页 快捷指令更「快捷」 优化游戏体验 专注模式的使用 标签的使用 强大的备忘录 All in One 的邮件收件箱 善用日历 更高效的 iOS 文字输入 自定义短语：\n通过设置key-value形式的自定义短语来快捷输入常用语句，如手机号、地址等\n（有个局限性是，key不能是中文）\n更方便的输入：\n语音转文字（键盘右小角）：只要按一下，就开始实时语音转文字。再次按下，即可停止。（比微信的长按好用）\n滑行输入：也就是手指不离开键盘，滑动按键，手机会自动根据手指停留的时间来识别（亲测比想象中的准确度更好，适合单手打字时）\n单手键盘模式：长按左下角的地球仪，可以选择偏向左/右的键盘模式，配合上滑行输入，很适合单手打字！\n长按的力量：\n1、长按空格键，可以精确的左右滑动定位到想编辑的文字位置\n2、长按字母、数字、符号可以调出对应的变种选择，在特殊字符输入时很实用\n更优雅的拷贝粘贴 主要介绍了ipad的三种方式：「长按」「三指捏合」以及「拖拽 Drag \u0026amp; Drop」\n跨设备拷贝粘贴（只要一台设备进行拷贝，则所有设备都会共享该次复制）：在 设置 \u0026gt; 通用 \u0026gt; 隔空播放与接力 中打开接力功能。\niPad \u0026amp; Mac ：iPadOS 15 的更新中引入了「通用控制」功能，能够让一套键鼠控制不同设备，让你在 iPad 和 Mac 中随意穿梭，你可以将 iPad 上的文字、图片、文件等内容直接拖拽到电脑屏幕上完成粘贴复制，反之亦然。\n分享网页 除了最常见的分享网页，下面给出几种不同的分享方式：\n分享 - 选项 - pdf形式分享 共享标签页组（这个我不行，不知道是不是因为开启了无痕模式） 在 Safari 浏览器中点击右下角「标签页组」进入到标签页栏，在底栏中间选择标签页组，长按标签页组便可以通过 iMessage 发送给好友。好友接受共享邀请后，便会在 Safari 浏览器中看到共享的标签页组，所有新增的网页和网页的浏览进度都会实时同步。\n快捷指令更「快捷」 主要介绍了快捷打开快捷指令的方式：\n桌面小组件、共享菜单（通过共享调用快捷指令）、siri、apple watch、自动化（if\u0026hellip;then\u0026hellip;）\n优化游戏体验 专注模式：防止被无用的消息打扰，可设置当前的桌面仅包含游戏\n防误触\n在 设置 \u0026gt; 辅助功能 \u0026gt; 引导式访问 中可以打开该功能后，在要使用的 App 中连按三次侧边按钮就可以激活该模式。激活后界面底部的 HomeBar 器便会自动隐藏，同时音量键和开关键都会被禁用，这样你就不用担心任何的误触了。\n省电模式：运行低性能游戏时，可以打开省电模式。\n可以通过开启省电模式来降低功率，减少手机发热，在王者荣耀这类游戏里十分适用\n自动化：设置打开游戏时，音量和屏幕亮度等自动调整至合适的参数\n专注模式的使用 主要介绍了如何利用专注模式把工作和生活分开化，可以定制消息通知拦截、app显示、锁屏展示等。\n标签的使用 可以使用标签来管理文件或文件夹。备忘录，也可以用标签进行更好的属性说明。\n强大的备忘录 利用备忘录的【扫描文稿】功能，扫描发票账单后进行分类收纳 分享给好友一起协作：如购物清单、待办事项等 加密功能：可存档密钥等机密信息，利用加锁功能进行保密 ps.备忘录的搜索功能也很强大，总之满足笔记系统的刚需。\nAll in One 的邮件收件箱 简单来说，就是可以在邮件APP上绑定多个邮箱，实现all in one的邮件体验。\n绝大多数邮箱都可以加入到「邮箱」应用中，按照登录的方式可以分为以下三类：\n账户密码登录 特殊授权码登录 POP3/SMTP/IMAP配置 善用日历 用日历APP实现每日时间规划，有点掺杂todolist的感觉，但又能更加细致的安排。\n有三个要点：「拷贝粘贴」「快速调整时间」和「重复」。\n","date":"2023-02-15T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%91%E6%95%B0%E6%B4%BE-ios%E8%93%9D%E7%9A%AE%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B02%E6%95%88%E7%8E%87%E7%AF%87/","title":"「少数派-IOS蓝皮书」学习笔记之02效率篇"},{"content":" 此笔记为《少数派-生产力超频：Windows 命令行实用手册》l栏目的个人学习笔记，供个人回溯\n一些概念 Command Line Interface (CLI) 命令行界面 Console App \u0026amp; Terminal App 控制台应用：没有图形界面，需要在命令提示符中使用。直接双击会闪退。\n包管理器： Windows 平台三大包管理器（Chocolatey、Scoop、winget）。它们可以帮助你批量安装、卸载、升级 PC 中的应用，无需再去官网获得安装包。\n内核（kernel）：直接和硬件打交道； 壳（shell）：运行命令的东西；可以将cd等命令翻译成计算机能听懂的语言\nWindows 上的 cmd、PowerShell 是 shell 的一种。此外，Linux 和 macOS 上有各种各样以 sh 结尾的应用，例如 bash、zsh、fish 以及 csh，其中的 sh 就是 shell 的缩写。 壳的窗口：Windows 控制台（conhost.exe），也称为终端仿真器（terminal emulator），简称终端。\n外部命令和shell命令：外部命令不依赖shell存在，shell命令是shell自带的命令\n基本操作 执行特定应用（在cmd中输入某应用的路径） cd到所在目录，访问 右键文件（Windows 10 需要按住 Shift 再右键），选择「复制文件地址」 直接拖动图标到cmd中 cmd中的复制粘贴 选中文本按右键是复制功能，不选中文本按右键是粘贴功能\n","date":"2023-02-14T00:00:00Z","permalink":"https://huangxindi.com/p/windows%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%8B%E5%86%8C/","title":"Windows命令行手册"},{"content":"概念 字符集 vs. 编码方式：编码方式就是将字符集里的字符映射成可以被计算机识别的若干位二进制来表示。\n对于一个字符集来说要正确编码转码一个字符需要三个关键元素：字库表（character repertoire）、编码字符集（coded character set）、字符编码（character encoding form）。 其中：字库表是一个相当于所有可读或者可显示字符的数据库，字库表决定了整个字符集能够展现表示的所有字符的范围。编码字符集，即用一个编码值code point来表示一个字符在字库中的位置。字符编码，将编码字符集和实际存储数值之间的转换关系。一般来说都会直接将code point的值作为编码后的值直接存储。例如在ASCII中A在表中排第65位，而编码后A的数值是0100 0001也即十进制的65的二进制转换结果。\nhttps://www.cnblogs.com/faetbwac/p/16355273.html\n字符(Character) 是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等。 字符集(Character set) 是一个系统支持的所有抽象字符的集合。通常以二维表的形式存在，二维表的内容和大小是由使用者的语言而定。如ASCII,GBxxx,Unicode等。 字符编码(Character encoding) 是把字符集中的字符编码为特定的二进制数，以便在计算机中存储。每个字符集中的字符都对应一个唯一的二进制编码。 字符集和字符编码一般都是成对出现的，如ASCII、IOS-8859-1、GB2312、GBK，都是即表示了字符集又表示了对应的字符编码。Unicode比较特殊，有多种字符编码（UTF-8,UTF-16等）\nhttps://www.cnblogs.com/chiguozi/p/5860364.html\n字符集对比 字符集名称 字符集范围 编码格式 备注 ASCII 英文或其他西欧语言 单字节 GB2312 汉字 双字节 GBK 更多汉字（21886个汉字和图形符号） 双字节 完全向下兼容GB2312 GB18030 支持简体中文、繁体中文 藏文、蒙文、维吾尔文等主要的少数民族文字 可变多字节（1、2、4字节） 完全兼容GB2312，基本兼容GBK 常见的支持中文的字符集的对比 常用的支持中文的字符集有：\nGB2312 GBK GB18030 BIG5 HZ Unicode 其中，GB2312、GBK、GB18030是中国国家标准，主要用于简体中文的编码，其中GB2312最早发布于1981年，GBK在GB2312的基础上扩展了更多的中文字符，GB18030则是GB2312和GBK的超集，包含更多的汉字和非汉字字符。可以理解为：GB18030\u0026gt; GBK\u0026gt; GB2312。\nBIG5是中国台湾的中文字符集，主要用于繁体中文的编码。\nHZ是中华人民共和国邮电部于1995年发布的一种编码规范，主要用于在邮件中传输中文字符。\nUnicode是一种国际化字符集，支持世界上几乎所有的字符，其中包括中文字符。在Unicode中，中文字符主要有两种编码方式，分别是UTF-8和UTF-16。其中，UTF-8是一种可变长度的编码方式，可以根据字符的不同选择1到4个字节编码，是现在互联网应用中最常用的字符集之一。\nASCII American Standard Code for Information Interchange，美国标准信息交换代码\n主要用来表示英文或其他西欧语言（在扩展版中）\n编码格式 使用7位（1字节，高位是0）表示128种字符：标准（基础）ASCII 码 使用8位表示256种字符：扩展ASCII 码（EASCII），多的一位表示附加的128 个特殊符号字符、外来语字母和图形符号 GB2312 GB2312（或称GB2312-80，80表示1980年发布）为了支持中文的表示，国人发明的。它是中华人民共和国国家标准简体中文字符集。基本满足汉字的使用，但是对于人名、古汉语等方面出现的罕用字和繁体字，GB 2312不能处理，因此后来GBK及GB 18030汉字字符集相继出现以解决这些问题。\n分区表示：GB 2312中对所收汉字进行了“分区”处理，每区含有94个汉字／符号。这种表示方式也称为区位码。\n01–09区为特殊符号。 16–55区为一级汉字，按拼音排序。 56–87区为二级汉字，按部首／笔画排序。 举例来说，“啊”字是GB 2312之中的第一个汉字，它的区位码就是1601。 10–15区及88–94区则未有编码。\nhttps://www.cnblogs.com/chiguozi/p/5860364.html\n编码格式 每个汉字及符号以两个字节来表示。第一个字节称为“高位字节”，第二个字节称为“低位字节”。 “高位字节”使用了0xA1–0xF7（把01–87区的区号加上0xA0），“低位字节”使用了0xA1–0xFE（把01–94加上0xA0）。 由于一级汉字从16区起始，汉字区的“高位字节”的范围是0xB0–0xF7，“低位字节”的范围是0xA1–0xFE。\nGBK GBK（Chinese Internal Code Extension Specification），汉字内码扩展规范\nK：Kuo Zhan（扩展）的K\nGB 2312-80只收录6763个汉字，有不少汉字，如部分在GB 2312-80推出以后才简化的汉字（如“啰”），部分人名用字（如中国前总理朱镕的“镕”字），台湾及香港使用的繁体字，日语及朝鲜语汉字等，并未有收录在内。GBK对GB 2312-80进行扩展, 总计拥有 23940 个码位，共收录21886个汉字和图形符号，其中汉字（包括部首和构件）21003 个，图形符号883 个。\n编码格式 GBK 亦采用双字节表示，总体编码范围为8140-FEFE，首字节在81-FE 之间，尾字节在40-FE 之间。GBK向下完全兼容GB2312-80编码。支持GB2312-80编码不支持的部分中文姓，中文繁体，日文假名，还包括希腊字母以及俄语字母等字母。不过这种编码支持韩国字，也是其在实际使用中与unicode编码相比欠缺的部分。\nGB18030 全称《信息技术 中文编码字符集》，是中华人民共和国国家标准所规定的变长多字节字符集。其对GB 2312-1980完全向后兼容，与GBK基本向后兼容，并支持Unicode（GB 13000）的所有码位。GB 18030-2005共收录汉字70,244个。\n特点：\nhttps://www.cnblogs.com/chiguozi/p/5860364.html\nGB 18030主要有以下特点：\n和UTF-8一样都采用多字节编码，每个字可以由1个、2个或4个字节组成。 编码空间庞大，最多可定义161万个字元。 支持中国国内少数民族的文字，不需要动用造字区。 汉字收录范围包含繁体汉字以及日韩汉字。 编码格式 单字节，其值从0x00到0x7F。 双字节，第一个字节的值从0x81到0xFE，第二个字节的值从0x40到0xFE（不包括0x7F）。 四字节，第一个字节的值从0x81到0xFE，第二个字节的值从0x30到0x39，第三个字节从0x81到0xFE，第四个字节从0x30到0x39。 Unicode 称为万国码、国际码、统一码、单一码。为了解决使用不同国家的编码格式所造成的乱码问题，国际编码格式Unicode应运而生。\n编码格式 UCS-2版本：双字节编码；UCS-4版本：4字节编码\n但是，有个问题：如果都是按照统一长度的编码，那么英文本身只需用1字节表示，却要统一用2/4字节表示，很浪费传输和存储空间。于是，一些基于Unicode的编码方式就应运而生。Unicode是一个字符集，给所有的字符分配一个码值。这里面只是分配码值，而不是最后的编码实现，编码的实现有很多不同的方式如utf-8、utf-16、utf-32。简单来说，Unicode只是业界标准，但是具体一个字符占多少字节，要取决于如UTF-8等的编码方式。\n关于utf-8、utf-16、utf-32三者的优劣势，也参考文章：\nhttps://www.cnblogs.com/wpcockroach/p/3907324.html\nUTF-8最适合用来作为字符串网络传输的编码格式。UTF-16最适合当作本地字符串编码格式。如果定义好了网络传输协议，那么UTF-16也非常合适当作网络字符串传输的编码格式，特别是中文等远东地区字符集。比起UTF-8来说，节省一点点流量。UTF-32没什么特殊癖好或者需求的话，暂时还用不上。\nUTF-8 UTF，Unicode Transformation Format。在表示纯英文时，Unicode比ASCII码多了一倍，很不划算。于是有了变长表示的UTF-8。背景介绍可参考： http://utf8everywhere.org/zh-cn#。\nUTF-8编码将Unicode字符按数字大小编码为1-6个字节，英文字母被编码成一个字节，常用汉字被编码成三个字节，如果你编译的文本是纯英文的，那么用UTF-8就会非常节省空间。\nUTF-16 也是变长编码，每个字符编码为2或4字节。\nUTF-32 固定长度的编码，始终占用 4 个字节。\n因此，只有 UTF-8 兼容 ASCII，UTF-32 和 UTF-16 都不兼容 ASCII，因为它们没有单字节编码。\n宽字符和窄字符（多字节字符） 有的编码方式采用 1~n 个字节存储，是变长的，例如 UTF-8、GB2312、GBK 等；如果一个字符使用了这种编码方式，我们就将它称为多字节字符，或者窄字符。\n有的编码方式是固定长度的，不管字符编号大小，始终采用 n 个字节存储，例如 UTF-32、UTF-16 等；如果一个字符使用了这种编码方式，我们就将它称为宽字符。\nUnicode 字符集可以使用窄字符的方式存储，也可以使用宽字符的方式存储；GB2312、GBK、Shift-JIS 等国家编码一般都使用窄字符的方式存储；ASCII 只有一个字节，无所谓窄字符和宽字符。\n原文链接：https://blog.csdn.net/guxiaonuan/article/details/78678043\n数据库中的编码知识 以ORACLE和MYSQL为例\n查看数据库设置的字符集 oralce：\n1 2 3 4 5 SELECT * FROM nls_database_parameters WHERE parameter LIKE \u0026#39;%CHARACTERSET\u0026#39;; -- 查看字符长度 SELECT LENGTH(\u0026#39;字符串\u0026#39;) FROM dual; -- 查看字节长度 SELECT LENGTHB(\u0026#39;字符串\u0026#39;) FROM dual; mysql:\n1 2 3 4 5 SHOW VARIABLES LIKE \u0026#39;%character%\u0026#39;; -- 查看字符长度 SELECT CHAR_LENGTH(\u0026#39;字符串\u0026#39;); -- 返回2 -- 查看字节长度 SELECT LENGTH(\u0026#39;字符串\u0026#39;); -- 返回6 编码的应用 getBytes方法对比 String.getBytes(\u0026quot;xxx\u0026quot;)方法是将字符串编码为字节数组，根据编码方式的不同，生成的字节数组也是不同的。以下对比GBK和UTF-8的编码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 public static void main(String[] args) throws UnsupportedEncodingException { String str1 = \u0026#34;测试\u0026#34;; String str2 = \u0026#34;abc\u0026#34;; byte[] str1gbk = str1.getBytes(\u0026#34;GBK\u0026#34;); byte[] str1uft8 = str1.getBytes(\u0026#34;UTF-8\u0026#34;); byte[] str2gbk = str2.getBytes(\u0026#34;GBK\u0026#34;); byte[] str2uft8 = str2.getBytes(\u0026#34;UTF-8\u0026#34;); // print System.out.println(\u0026#34;str1gbk=\u0026#34;+ Arrays.toString(str1gbk)); System.out.println(\u0026#34;str1uft8=\u0026#34;+ Arrays.toString(str1uft8)); System.out.println(\u0026#34;str2gbk=\u0026#34;+ Arrays.toString(str2gbk)); System.out.println(\u0026#34;str2uft8=\u0026#34;+ Arrays.toString(str2uft8)); } 输出结果：\n1 2 3 4 str1gbk=[-78, -30, -54, -44] str1uft8=[-26, -75, -117, -24, -81, -107] str2gbk=[97, 98, 99] str2uft8=[97, 98, 99] 实例2:\n1 2 3 4 5 6 7 8 9 10 11 12 13 ublic static void test2() throws UnsupportedEncodingException { String str = \u0026#34;测试\u0026#34;; // string -\u0026gt; byte[] GBK encoding byte[] gbkBytes = str.getBytes(\u0026#34;GBK\u0026#34;); // byte[] -\u0026gt; string -\u0026gt; byte[] -\u0026gt; string // 由于最外层的new String没有指定编码方式，故使用的是默认的编码方式。但是此编码方式非GBK，所以结果是乱码 String strgbk = new String(new String(gbkBytes, \u0026#34;GBK\u0026#34;).getBytes(\u0026#34;GBK\u0026#34;)); System.out.println(strgbk); // byte[] -\u0026gt; string -\u0026gt; byte[] -\u0026gt; string // 当最后的getBytes()和最外层的new String都没有指定编码方式，即都是使用默认的编码方式。故抵消后获取的字符串是正常的 String strgbk1 = new String(new String(gbkBytes, \u0026#34;GBK\u0026#34;).getBytes()); System.out.println(strgbk1); } 输出结果：\n1 2 ���� 测试 参考链接 https://www.cnblogs.com/klb561/p/12064095.html#/\nhttps://www.cnblogs.com/klb561/p/12064095.html#/\nhttps://www.cnblogs.com/chiguozi/p/5860364.html\nhttps://baike.baidu.com/item/gb18030/3204518?fr=aladdin\nhttps://www.cnblogs.com/strive-sun/p/15211950.html\nhttps://www.cnblogs.com/yougoo/p/11958649.html\nhttps://blog.csdn.net/guxiaonuan/article/details/78678043\n","date":"2022-12-19T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%AE%A4%E8%AF%86%E7%BC%96%E7%A0%81/","title":"认识编码"},{"content":"Linux-文本处理三剑客 awk、grep、sed是linux操作文本的三大利器,合称文本三剑客。\n但是三者有所侧重点：\nawk：功能最强，也是最复杂的。更适合格式化文本，对文本作复杂格式处理 grep：更适合查找、匹配 sed：更适合编辑匹配到的文本 grep grep命令已经在 linux-管道篇 学习过了，这里就略过。\nsed sed是一种流编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为**“模式空间”，接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。然后读入下一行，执行下一个循环。如果没有使用诸如“D”的特殊命令，那会在两个循环之间清空模式空间，但不会清空保留空间**。这样不断重复，直到文件末尾。文件内容并没有改变，除非使用重定向存储输出或-i。\n参数说明 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 sed --help Usage: sed [OPTION]... {script-only-if-no-other-script} [input-file]... -n, --quiet, --silent # 只打印匹配的行 suppress automatic printing of pattern space -e script, --expression=script add the script to the commands to be executed -f script-file, --file=script-file # 写入文档中，后接文件名 add the contents of script-file to the commands to be executed --follow-symlinks follow symlinks when processing in place -i[SUFFIX], --in-place[=SUFFIX] # 直接将处理结果写入文件 edit files in place (makes backup if SUFFIX supplied) -c, --copy use copy instead of rename when shuffling files in -i mode -b, --binary does nothing; for compatibility with WIN32/CYGWIN/MSDOS/EMX ( open files in binary mode (CR+LFs are not treated specially)) -l N, --line-length=N specify the desired line-wrap length for the `l\u0026#39; command --posix disable all GNU extensions. -r, --regexp-extended # 支持扩展的正则表达式 use extended regular expressions in the script. -s, --separate consider files as separate rather than as a single continuous long stream. -u, --unbuffered load minimal amounts of data from the input files and flush the output buffers more often -z, --null-data separate lines by NUL characters --help display this help and exit --version output version information and exit If no -e, --expression, -f, or --file option is given, then the first non-option argument is taken as the sed script to interpret. All remaining arguments are names of input files; if no input files are specified, then the standard input is read. sed命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 a\\\\ 在当前行下面插入文本。 i\\\\ 在当前行上面插入文本。 c\\\\ 把选定的行改为新的文本。 d 删除，删除选择的行。 D 删除模板块的第一行。 s 替换指定字符 h 拷贝模板块的内容到内存中的缓冲区。 H 追加模板块的内容到内存中的缓冲区。 g 获得内存缓冲区的内容，并替代当前模板块中的文本。 G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。 l 列表不能打印字符的清单。 n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。 N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。 p 打印模板块的行。 P(大写) 打印模板块的第一行。 q 退出Sed。 b lable 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。 r file 从file中读行。 t label if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。 T label 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。 w file 写并追加模板块到file末尾。 W file 写并追加模板块的第一行到file末尾。 ! 表示后面的命令对所有没有被选定的行发生作用。 = 打印当前行号码。 # 把注释扩展到下一个换行符以前。 sed替换标记 1 2 3 4 5 6 7 8 sed替换标记 g 表示行内全面替换。 p 表示打印行。 w 表示把行写入一个文件。 x 表示互换模板块中的文本和缓冲区中的文本。 y 表示把一个字符翻译为另外的字符（但是不用于正则表达式） \\\\1 子串匹配标记 \u0026amp; 已匹配字符串标记 sed元字符集 1 2 3 4 5 6 7 8 9 10 11 12 13 sed元字符集 ^ 匹配行开始，如：/^sed/匹配所有以sed开头的行。 $ 匹配行结束，如：/sed$/匹配所有以sed结尾的行。 . 匹配一个非换行符的任意字符，如：/s.d/匹配s后接一个任意字符，最后是d。 * 匹配0个或多个字符，如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。 [] 匹配一个指定范围内的字符，如/[sS]ed/匹配sed和Sed。 [^] 匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。 \\\\(..\\\\) 匹配子串，保存匹配的字符，如s/\\\\(love\\\\)able/\\\\1rs，loveable被替换成lovers。 \u0026amp; 保存搜索字符用来替换其他字符，如s/love/**\u0026amp;**/，love这成**love**。 \\\\\u0026lt; 匹配单词的开始，如:/\\\\\\\\\u0026gt; 匹配单词的结束，如/love\\\\\u0026gt;/匹配包含以love结尾的单词的行。 x\\\\{m\\\\} 重复字符x，m次，如：/0\\\\{5\\\\}/匹配包含5个0的行。 x\\\\{m,\\\\} 重复字符x，至少m次，如：/0\\\\{5,\\\\}/匹配至少有5个0的行。 x\\\\{m,n\\\\} 重复字符x，至少m次，不多于n次，如：/0\\\\{5,10\\\\}/匹配5~10个0的行。 常见用法 1、替换（s） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 # 1. sed \u0026#39;s/xxx/yyy/\u0026#39; 打印替换后的结果 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt abcdefg 123456 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;s/cde/111/\u0026#39; 1.txt # 打印替换后的结果 ab111fg 123456 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt # 不改变原文件 abcdefg 123456 # 2. sed -n \u0026#39;s/xxx/yyy/p\u0026#39; 只打印发生替换的行 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -n \u0026#39;s/cde/111/p\u0026#39; 1.txt # 只打印发生替换的行 ab111fg [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt abcdefg 123456 # 3. sed -i \u0026#39;s/xxx/yyy/g\u0026#39; 直接在原文件中替换，替换每一个匹配行的所有匹配字段 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt abcdefg 123456 abcdefg [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -i \u0026#39;s/cde/111/g\u0026#39; 1.txt # 直接在原文件中替换，替换每一个匹配行 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt ab111fg 123456 ab111fg # 4. sed \u0026#39;s/xxx/yyy/\u0026#39; 没有/g只有替换每一行的第一个匹配 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt abcabc abc [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -i \u0026#39;s/abc/123/\u0026#39; 2.txt [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt # 只替换了第一个匹配 123abc 123 # 5. sed \u0026#39;s/xxx/yyy/g\u0026#39; 有/g会替换每一行的所有匹配 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt abcabc abc [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;s/abc/123/g\u0026#39; 2.txt # 和例4形成对比 123123 123 # 6. sed \u0026#39;s/xxx/yyy/Ng\u0026#39; 从第N个xxx开始匹配成yyy [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;123123123\u0026#34; | sed \u0026#39;s/123/456/2g\u0026#39; 123456456 2、使用规范 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # 1、定界符 # 以上例子是使用/作为定界符，也可以使用其他任意字符作为定界符，如: [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;abab\u0026#34; | sed \u0026#39;s:ab:12:g\u0026#39; 1212 # 值得注意的是，若定界符出现在语句内部，则需要转移 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;1/2/3/\u0026#34; | sed \u0026#39;s/\\/2/\\/5/\u0026#39; 1/5/3/ # 2、组合使用(以下三种方法等价) [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;abc\u0026#34; | sed \u0026#39;s/a/1/\u0026#39; | sed \u0026#39;s/b/2/\u0026#39; 12c [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;abc\u0026#34; | sed \u0026#39;s/a/1/; s/b/2/\u0026#39; 12c [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;abc\u0026#34; | sed -e \u0026#39;s/a/1/\u0026#39; -e \u0026#39;s/1/2/\u0026#39; 2bc # 3、sed中使用引用变量（注意：此时应该用双引号包围） [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.sh var=good echo \u0026#34;good morning\u0026#34; | sed \u0026#34;s/$var/bad/\u0026#34; [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sh 1.sh bad morning 3、删除操作（d） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 # ^表示开始，$表示最后 # 1. sed \u0026#39;/^$/d\u0026#39; 删除空白行 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 3.txt 1 2 3 4 5 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;/^$/d\u0026#39; 3.txt 1 2 3 4 5 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 3.txt # 不改变原文件 1 2 3 4 5 # 2. sed \u0026#39;2d\u0026#39; 删除第2行 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;2d\u0026#39; 3.txt 1 3 4 5 # 3. sed \u0026#39;2,$d\u0026#39; 删除第2-末尾行 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;2,$d\u0026#39; 3.txt 1 # 4. sed \u0026#39;$d\u0026#39; 删除末尾行 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;$d\u0026#39; 3.txt 1 2 3 4 # 5. sed \u0026#39;/^ab/d\u0026#39; 删除以ab开头的行 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 4.txt ab ccc ab ddd a eee [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;/^ab/d\u0026#39; 4.txt a eee 4、匹配标记（\u0026amp;,\\N） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # 1. 已匹配字符串标记\u0026amp; [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;abab\u0026#34; | sed \u0026#39;s/ab/[\u0026amp;]/g\u0026#39; [ab][ab] [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;this is good\u0026#34; | sed \u0026#39;s/\\w\\+/*\u0026amp;*/g\u0026#39; *this* *is* *good* # 2. 子串匹配标记\\N [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;aaa bbb\u0026#34; | sed \u0026#39;s/\\([a-z]\\+\\) \\([a-z]\\+\\)/\\2 \\1/\u0026#39; bbb aaa [cindy@iZbp15qc4wmx335c268l5mZ sed]$ echo \u0026#34;aaa 123 bbb\u0026#34; | sed \u0026#39;s/\\([a-z]\\+\\) \\([0-9]\\+\\) \\([a-z]\\+\\)/\\2 \\1/\u0026#39; 123 aaa # 上个例子中，\\1=aaa,\\2=123,\\3=bbb [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;s/\\(bad\\)/\\1?/\u0026#39; 4.txt i am bad? i am bad? [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 4.txt i am bad i am bad 5、选定行范围（,） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 # 1. sed -n \u0026#39;/bad/,/good/p\u0026#39; 打印匹配bad和good之间的行 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 4.txt i am bad i am bad i am good i am nobody [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -n \u0026#39;/bad/,/good/p\u0026#39; 4.txt i am bad i am bad i am good # 2. sed -n \u0026#39;2,/good$/p\u0026#39; 打印 第2行-匹配该行最后是good 的行 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ vi 4.txt [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 4.txt i am bad i am bad i am good i am nobody i am good [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -n \u0026#39;2,/good$/p\u0026#39; 4.txt i am bad i am good # 3. sed \u0026#39;/bad/,/nobody/s/$/.../\u0026#39; 在模版bad和good之间的行，在每行的最后添加... [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;/bad/,/nobody/s/$/.../\u0026#39; 4.txt i am bad... i am bad... i am good... i am nobody... i am good 6、读写追加等命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 # 1. 读(r) sed \u0026#39;/good/r 2.txt\u0026#39; 1.txt 打印1.txt匹配的模版good行，在下面打印2.txt [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt abcabc abc [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt i am good test1 test2 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;/good/r 2.txt\u0026#39; 1.txt i am good abcabc abc test1 test2 # 2. 写(w) sed \u0026#39;/good/w 2.txt\u0026#39; 1.txt 将1.txt中匹配模版good的行（真正）写入2.txt [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt i am good test1 test2 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt abcabc abc [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;/good/w 2.txt\u0026#39; 1.txt i am good test1 test2 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt # 实际被改变了 i am good # 3. 行下追加(a) # sed \u0026#39;/am/a\\haha\u0026#39; 2.txt 在匹配am的行下面插入haha # sed -i \u0026#39;2a\\oh haha\u0026#39; 2.txt 在第2行下面插入oh haha [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt i am good [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;/am/a\\haha\u0026#39; 2.txt i am good haha [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt oh no i am good [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -i \u0026#39;2a\\oh haha\u0026#39; 2.txt [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt oh no i am good oh haha # 4. 行上追加(i) 类似行下追加，只是变成了行上 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt i am good [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -i \u0026#39;1i\\oh no\u0026#39; 2.txt [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt oh no i am good [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;/am/i\\oh yes\u0026#39; 2.txt oh no oh yes i am good 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # 5、下一行处理(n) sed \u0026#39;/test/{ n; s/aa/bb/;}\u0026#39; 在匹配test模式的下一行，进行/aa/bb/替换（然后继续） [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt i am good test1 1aa test2 1aa 1aa [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;/test/{ n; s/aa/bb/;}\u0026#39; 1.txt i am good test1 1bb test2 1bb 1aa # 因为上面不是test模式，所以不会被替换为1bb [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt i am good test1aa 1aa test2 1aa 1aa [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;/test/{ n; s/aa/bb/;}\u0026#39; 1.txt i am good test1aa # 本身的test匹配行的aa，不会被替换为bb 1bb test2 1bb 1aa # 6、变形/按字符替换(y) sed \u0026#39;1,2y/abc/ABC/\u0026#39; 将第1-2行的abc替换为ABC # y和s的区别： # 1. y一般是行级别的替换，s一般是列级别替换（当然也可以转换成行级）； # 2.s替换的是整体，y替换的是每一字母对应的单个字母（见下面的例子） [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 2.txt abc 1abc1 abc [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;1,2y/abc/ABC/\u0026#39; 2.txt ABC 1ABC1 abc [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;1,2s/and/123/\u0026#39; 2.txt abc 1abc1 abc [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;1,2y/abc/12/\u0026#39; 2.txt # 如果不是逐字母替换的话，y会报错，但是s不会 sed: -e expression #1, char 12: strings for `y\u0026#39; command are different lengths [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed \u0026#39;1,2s/abc/12/\u0026#39; 2.txt 12 1121 abc 7、打印奇数/偶数行 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # 命令见例子 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt 1 2 3 4 5 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -n \u0026#39;p;n\u0026#39; 1.txt 1 3 5 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -n \u0026#39;n;p\u0026#39; 1.txt 2 4 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -n \u0026#39;1~2p\u0026#39; 1.txt 1 3 5 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -n \u0026#39;2~2p\u0026#39; 1.txt 2 4 8、打印匹配字符串的下一行 1 2 3 4 5 6 7 8 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ cat 1.txt 1 2 3 4 5 [cindy@iZbp15qc4wmx335c268l5mZ sed]$ sed -n \u0026#39;/1/{n;p}\u0026#39; 1.txt # 打印匹配模式1的下一行 2 9、sed高级处理 sed之所以能以行为单位的编辑或修改文本，其原因在于它使用了两个空间：一个是活动的“模式空间（pattern space）”，另一个是起辅助作用的“保持空间（hold space）这2个空间的使用。\n模式空间：可以想成工程里面的流水线，数据之间在它上面进行处理。 保持空间：可以想象成仓库，我们在进行数据处理的时候，作为数据的暂存区域。\nsed在正常情况下，将处理的行读入模式空间，脚本中的“sed command（sed命令）”就一条接着一条进行处理，直到脚本执行完毕。然后该行被输出，模式被清空；接着，在重复执行刚才的动作，文件中的新的一行被读入，直到文件处理完毕。\n一般情况下，数据的处理只使用模式空间（pattern space），按照如上的逻辑即可完成主要任务。正常情况下，如果不显示使用某些高级命令，保持空间不会使用到！但是某些时候，通过使用保持空间（hold space），还可以带来意想不到的效果。\n1 2 3 4 5 6 7 + g：[address[,address]]g 将hold space中的内容拷贝到pattern space中，原来pattern space里的内容清除。 + G：[address[,address]]G 将hold space中的内容append到pattern space\\n后。 + h：[address[,address]]h 将pattern space中的内容拷贝到hold space中，原来的hold space里的内容被清除。 + H：[address[,address]]H 将pattern space中的内容append到hold space\\n后。 + d：[address[,address]]d 删除pattern中的所有行，并读入下一新行到pattern中。 + D：[address[,address]]D 删除multiline pattern中的第一行，不读入下一行。 + x：交换保持空间和模式空间的内容。 高级用法后续再学习\nawk wk其名称得自于它的创始人 Alfred Aho 、Peter Weinberger 和 Brian Kernighan 姓氏的首个字母。实际上 AWK 的确拥有自己的语言： AWK 程序设计语言 ， 三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。\nawk 是一种很棒的语言，它适合文本处理和报表生成，其语法较为常见，借鉴了某些语言的一些精华，如 C 语言等。在 linux 系统日常处理工作中，发挥很重要的作用，掌握了 awk将会使你的工作变的高大上。 awk 是三剑客的老大，利剑出鞘，必会不同凡响。\nhttps://www.cnblogs.com/ginvip/p/6352157.html\nsed偏向于字符串处理，awk可支持更广泛的类型处理，例如可以在awk中执行整数运算等，但是在sed中就不行。在sed中，万物皆字符串。\nawk不是命令，是一门语言。又叫做GNU awk，gawk。\n1 2 3 4 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ which awk /usr/bin/awk [cindy@iZbp15qc4wmx335c268l5mZ awk]$ ls -l /usr/bin/awk lrwxrwxrwx. 1 root root 4 Sep 14 2020 /usr/bin/awk -\u0026gt; gawk # 一般Linux默认为Gawk，Gawk是 AWK的GNU开源免费版本。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ awk -h awk: option requires an argument -- h Usage: awk [POSIX or GNU style options] -f progfile [--] file ... Usage: awk [POSIX or GNU style options] [--] \u0026#39;program\u0026#39; file ... POSIX options: GNU long options: (standard) -f progfile --file=progfile -F fs --field-separator=fs # 指定分隔符 -v var=val --assign=var=val # 指定变量 Short options: GNU long options: (extensions) -b --characters-as-bytes -c --traditional -C --copyright -d[file] --dump-variables[=file] -e \u0026#39;program-text\u0026#39; --source=\u0026#39;program-text\u0026#39; -E file --exec=file -g --gen-pot -h --help -L [fatal] --lint[=fatal] -n --non-decimal-data -N --use-lc-numeric -O --optimize -p[file] --profile[=file] -P --posix -r --re-interval -S --sandbox -t --lint-old -V --version To report bugs, see node `Bugs\u0026#39; in `gawk.info\u0026#39;, which is section `Reporting Problems and Bugs\u0026#39; in the printed version. gawk is a pattern scanning and processing language. By default it reads standard input and writes standard output. Examples: gawk \u0026#39;{ sum += $1 }; END { print sum }\u0026#39; file gawk -F: \u0026#39;{ print $1 }\u0026#39; /etc/passwd 基本使用方法：\n1 awk \u0026#39;{pattern + action}\u0026#39; {filenames} awk内置变量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # NR: number of record 行号 # RS: record separator 行分隔符（\\n） # FS: field separator 列分隔符（空格） # NF: number of field 每行的列数 # $0: 当前记录 # $1~$n: 当前记录的1～n个记录 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat text1 1 2 3 4 5 6 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{print NR}\u0026#39; text1 1 2 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{print RS}\u0026#39; text1 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{print FS}\u0026#39; text1 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{print NF}\u0026#39; text1 3 3 # 但是通常不是这么直白的用，需要配合一些语句一起使用 awk选项（指定） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # -F 指定分隔符 # -v 指定变量 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat test2 a:bb:c 1:2:100 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{print $1}\u0026#39; test2 # 默认以空格为分隔符，所以$1就是全部的 a:bb:c 1:2:100 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk -F\u0026#34;:\u0026#34; \u0026#39;{print $1}\u0026#39; test2 # 以:为分隔符，打印出第一个 a 1 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk -v var=\u0026#34;hello\u0026#34; -F\u0026#34;:\u0026#34; \u0026#39;{print var, $2}\u0026#39; test2 # 指定变量var的值，然后可以直接在语句中用（不需要加$号）。print的内容用逗号分隔，打印时用空格隔开 hello bb hello 2 awk内置函数 算数函数 字符串函数 时间函数：systime和strftime 其他函数 下面重点看下字符串函数：\n替换函数gsub和sub 先说下gsub和sub的区别：gsub会替换所在范围内所有满足条件的字符串，而sub只会替换第一个满足条件的。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # gsub(r,s,t) 在每行的t范围中，将r替换为s；sub类似。如没有t参数，则表示查找范围为整行。 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat text3 hello how are you hi i am happy [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{gsub(\u0026#34;h\u0026#34;,\u0026#34;H\u0026#34;)}\u0026#39; text3 # 替换操作不包含打印，所以没法看到结果 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{gsub(\u0026#34;h\u0026#34;,\u0026#34;H\u0026#34;); print $0}\u0026#39; text3 # 替换并打印所有h-\u0026gt;H Hello How are you Hi i am Happy [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{sub(\u0026#34;h\u0026#34;,\u0026#34;H\u0026#34;); print $0}\u0026#39; text3 # sub只替换第一个匹配的h Hello how are you Hi i am happy [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{gsub(\u0026#34;h\u0026#34;,\u0026#34;H\u0026#34;,$1); print $0}\u0026#39; text3 # 指定在$1中进行匹配 HHHHH how are you HHHH i am happy [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{sub(\u0026#34;h\u0026#34;,\u0026#34;H\u0026#34;,$1); print $0}\u0026#39; text3 Hhhhh how are you Hhhh i am happy [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat test2 a:bb:c 1:2:100 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{gsub(\u0026#34;[0-9]+\u0026#34;,\u0026#34;x\u0026#34;); print $0}\u0026#39; test2 # 使用正则表达式进行匹配，将所有的数字替换为x a:bb:c x:x:x 字符串长度length 1 2 3 4 5 6 7 8 9 10 11 12 13 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat test2 a:bb:c 1:2:100 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk -F\u0026#34;:\u0026#34; \u0026#39;{ for(i=1;i\u0026lt;=NF;i++){print $i, length($i)} }\u0026#39; test2 a 1 bb 2 c 1 1 1 2 1 100 3 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{print length()}\u0026#39; test2 # 如果length里面不输入参数，则使用的是默认参数$0 6 7 返回字符所在位置index 1 2 3 4 5 6 7 # index(s,t) 返回s中字符串t所在的位置 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat test2 apple is good i like apple [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{print index($0,\u0026#34;apple\u0026#34;)}\u0026#39; test2 1 8 动态创建数组split 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # split(r,s,t) 以t为分隔符，切割r为数组t [cindy@iZbp15qc4wmx335c268l5mZ awk]$ echo \u0026#34;a:bb:ccc\u0026#34; | awk -F\u0026#34;:\u0026#34; \u0026#39;{split($0,arr,\u0026#34;:\u0026#34;);for(i in arr){print i,arr[i]}}\u0026#39; # 注意看哦，awk的split下标，是从1开始的 1 a 2 bb 3 ccc # 也可以切割传进来的变量 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk -v var=\u0026#34;h1 h2 h3\u0026#34; \u0026#39;BEGIN{split(var,arr,\u0026#34; \u0026#34;); for(i in arr){print i,arr[i]}}\u0026#39; 1 h1 2 h2 3 h3 # split方法的返回值为数组长度 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk -v var=\u0026#34;h1 h2 h3\u0026#34; \u0026#39;BEGIN{print split(var,arr,\u0026#34; \u0026#34;)}\u0026#39; 3 # 需要注意，采用for(i in arr)可能不会按照下标顺序遍历输出，如果需要按顺序的话，需要采用以下方法 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk -v var=\u0026#34;h1 h2 h3\u0026#34; \u0026#39;BEGIN{ arrlen=split(var,arr,\u0026#34; \u0026#34;); for(i=1;i\u0026lt;=arrlen;i++){print i, arr[i]}}\u0026#39; 1 h1 2 h2 3 h3 匹配函数match 后续再学习\n子串函数substr https://www.cnblogs.com/irockcode/p/6880597.html\nsubstr(对象,index) 从对象的第index字符开始到设定的分隔符结束\nsubstr(对象,index1,length) 从对象的第index1字符截取length个字符\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat test2 apple is good i like apple [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{ print substr($0,1) }\u0026#39; test2 # $0没有分隔符，默认截取到行末 apple is good i like apple [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{ print substr($0,3) }\u0026#39; test2 ple is good like apple [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{ print substr($1,3) }\u0026#39; test2 # 如第2行没法截取指定的长度，则输出空 ple [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;{ print substr($3,1,2) }\u0026#39; test2 go ap awk执行流程 1 awk -参数 \u0026#39;BEGIN{动作} (模式){动作} END{动作} }\u0026#39; 文件名 BEGIN：读取数据之前的动作，只能执行一次 PATTERN：按行执行的正常动作 END：和BEGIN相反，是在读取所有数据之后的动作，只能执行一次 例子：\n1 2 3 4 5 6 7 8 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat text1 1 2 3 4 5 6 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ awk \u0026#39;BEGIN{print \u0026#34;开始awk\u0026#34;} {print $2} END{print \u0026#34;结束awk\u0026#34;}\u0026#39; text1 开始awk 2 5 结束awk awk流程控制语句 https://blog.51cto.com/linux2023/5016231\nawk的流程控制语句包括：\n1 2 3 4 5 6 7 8 9 if-else 语句 for 语句 while 语句 do-while 语句 break 语句 continue 语句 next 语句 nextfile 语句 exit 语句 if-else 1 2 3 4 5 6 7 8 9 if (条件 1){ 动作 1 } else if (条件 2){ 动作 2 } else{ 动作 3 } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat text1 1 2 3 4 5 6 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ cat 1.sh awk \u0026#39;{ if ( $2 == 2 ){ print \u0026#34;$1 is \u0026#34;,$1; } else { print \u0026#34;$3 is \u0026#34;,$3; } }\u0026#39; ./text1 [cindy@iZbp15qc4wmx335c268l5mZ awk]$ sh 1.sh $1 is 1 $3 is 6 for 例如：\nfor (i=0;i\u0026lt;=n;i++) {动作}\n其他控制语句略，需要用时再查 参考链接 https://www.cnblogs.com/Torres-tao/p/16055239.html\nhttp://linux.51yip.com/search/sed/\nhttps://www.cnblogs.com/zakun/p/linux-cmd-sed.html\nhttps://blog.51cto.com/yolynn/1890548\nhttps://blog.51cto.com/u_3078781/3287449\nhttps://www.cnblogs.com/ginvip/p/6352157.html\nhttps://www.cnblogs.com/wangchengww/p/16540731.html\nhttps://www.cnblogs.com/csxy-py/p/16778102.html\nhttps://www.cnblogs.com/minseo/p/13690129.html\nhttps://www.cnblogs.com/jmbt/p/16640626.html\nhttps://www.cnblogs.com/codelogs/p/16060082.html\nhttp://bbs.chinaunix.net/thread-2312439-1-1.html\nhttps://www.cnblogs.com/joyware/p/16612120.html\n","date":"2022-12-07T00:00:00Z","permalink":"https://huangxindi.com/p/linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E4%B8%89%E5%89%91%E5%AE%A2/","title":"Linux-文本处理三剑客"},{"content":"Mysql修改root密码 背景：linux系统，忘记mysql的root密码，该怎么修改root密码？\n复制阿里云的在线服务中提出的解决方案👇。亲测ok\n如果忘记了MySQL数据库root用户的密码，可以通过修改配置文件，登录时跳过密码，然后在数据库里面修改密码。一般数据库默认的用户为root。\n执行如下命令，编辑MySQL数据库的my.cnf配置文件。\n1 vim /etc/my.cnf 说明：my.cnf配置文件的路径以实际环境为准。\n在[mysqld]字段下新增如下内容，然后保存退出。\n1 skip-grant-tables 执行如下命令，重启MySQL服务。\n1 /etc/init.d/mysqld restart 说明：MySQL启动脚本路径以实际环境为准。\n执行如下命令，登录数据库。\n1 /usr/bin/mysql 说明：MySQL命令路径以实际环境为准。\n依次执行如下SQL语句，更新密码。\n1 2 3 4 USE mysql; UPDATE user SET authentication_string = password (\u0026#39;[$Password]\u0026#39;) WHERE User = \u0026#39;root\u0026#39;; flush privileges; quit 说明：[$Password]为新密码，不建议新密码为“123456”，此密码太简单，密码需要满足密码复杂性要求，需要大小写字母和数字组合，最小长度为8位，根据此密码策略，设置密码。\n再次编辑/etc/my.cnf配置文件，删除或者注释第2步添加的skip-grant-tables。 执行如下命令，重启MySQL服务。\n1 /etc/init.d/mysqld restart 使用新密码登录数据库，确认能正常登录。\n这里有个注意点：\nuser表中，可能有两个字段表示用户密码的（Password和authentication_string）。根据mysql的版本不同，可能用前者或是后者来存储登陆密码。比如我的mysql版本是：\n1 2 3 4 5 6 7 mysql\u0026gt; select version(); +------------+ | version() | +------------+ | 5.6.50-log | +------------+ 1 row in set (0.00 sec) 最开始我是用上述解决方案中的语句设置authentication_string字段：\n1 UPDATE user SET authentication_string = password (\u0026#39;[$Password]\u0026#39;) WHERE User = \u0026#39;root\u0026#39;; 发现设置完还是登陆不了。后面就试着把Password字段也设置下，才可以使用新密码登陆：\n1 UPDATE user SET Password = password (\u0026#39;[$Password]\u0026#39;) WHERE User = \u0026#39;root\u0026#39;; ","date":"2022-12-04T00:00:00Z","permalink":"https://huangxindi.com/p/mysql%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81/","title":"Mysql修改root密码"},{"content":"oracle-\u0026gt;mysql数据迁移数据事项 概述 从oracle数据迁移到mysql前，需要特别关注两者的区别，才能做好相应的转换及评估。\nORACLE\u0026amp;MYSQL主要差异 图片来源： https://www.infoq.cn/article/rc7urvfsmv94jcaw3z2a\nMySQL 不支持的功能项 MySQL 没有并行的概念，不支持并行； MySQL 优化器较弱，复杂 SQL 建议拆分简单 SQL； MySQL 对于子查询优化不是很好； MySQL 不支持物化视图、存储过程改造、同义词改造、dblink 需要改造。 迁移原则 参考： https://www.infoq.cn/article/rc7urvfsmv94jcaw3z2a\n迁移数据时，请遵循以下准则，其中大部分准则同时适用于一次性加载方法和实时复制方法：\n字符集：确保源 Oracle 数据库与目标 MySQL 数据库之间的字符集兼容； 外键：要提升提取速度，请暂时停用目标 MySQL 数据库上的外键限制条件。加载完成后再启用外键限制条件； 索引：与外键类似，目标 MySQL 数据库上的索引可能会显著降低初始加载的速度。确保在初始加载完成之前，在目标数据库上未创建索引； Oracle 序列：MySQL 支持 AUTO_INCREMENT 而不是序列。确保在初始加载期间停用 AUTO_INCREMENT 特性，以避免覆盖 Oracle 的序列生成的值。在初始加载完成后，将 AUTO_INCREMENT 特性添加到主键列； 网络连接：如果您使用的是 GoldenGate TDM，请确保来源环境和目标环境都可以与 GoldenGate TDM 产品建立网络连接，以允许在 Oracle 端捕获数据并在 MySQL 端加载数据。 迁移难点 参考：\nhttps://www.infoq.cn/article/rc7urvfsmv94jcaw3z2a\n字符集 对于字符集，需要考虑的问题为迁移过程字段长度匹配情况，迁移后数据是否乱码，以及迁移后字符集转换后空间的问题。\n字段长度匹配，空间估算 NULL和空串处理 使用文件导入到 MySQL 时字段中的空值 null 需要使用\\N 表示，如果用空字符串表示，那么根据不同的数据类型，MySQL 处理也各异。\n数据库字段如果是字符串类型，插入空时，load data 默认导入 空字符串 数据库字段如果是数字类型，插入空时，load data 默认导入 0.00000000 数据库字段如果是日期和时间类型，插入空时，load data 默认导入 0000-00-00 00:00:00 Oracle 导出到文本文件，null 会变为空字符串，插入到 MySQL 后会被认为是空字符串插入，破坏了数据一致性，以下提供了三种方式进行规避：\n1、可以在 Oracle 迁移之前将所有业务表的 null 值变更为无意义的值，等到迁移到 MySQL 后统一数据修复调整回来，例如：\n1 UPDATE SUPPLIERS_TBL SET SUPPLIER_ID=NVL(null,‘N/A’) where SUPPLIER_ID is null; 2、使用 spool 导出的时候对 null 值进行转换，需要针对表和列进行修改\n1 SelectNVL(TO_CHAR(id),\u0026#39;N/A\u0026#39;)||\u0026#39;,\u0026#39;||NVL(name,\u0026#39;N/A\u0026#39;)||\u0026#39;,\u0026#39;||NVL(SEX,\u0026#39;N/A\u0026#39;)||\u0026#39;,\u0026#39;||NVL(ADDRESS,\u0026#39;N/A\u0026#39;)||\u0026#39;,\u0026#39;||NVL(TO_CHAR(BIRTHDAY),\u0026#39;N/A\u0026#39;) from user1; 日期格式处理 LOB 字段迁移 大小写敏感差异 数据类型转换 https://www.cnblogs.com/priestess-zhao/p/14308959.html\n参考链接 https://www.infoq.cn/article/rc7urvfsmv94jcaw3z2a\nhttps://zhuanlan.zhihu.com/p/94254106\nhttps://blog.csdn.net/weixin_39713763/article/details/114906285\nhttps://juejin.cn/post/6943857884006449183\nhttps://developer.aliyun.com/article/184151\nhttps://blog.csdn.net/xiazaixm/article/details/78081611\nhttps://www.cnblogs.com/priestess-zhao/p/14308959.html\n","date":"2022-12-04T00:00:00Z","permalink":"https://huangxindi.com/p/oracle-mysql%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E4%BA%8B%E9%A1%B9/","title":"oracle-\u003emysql数据迁移数据事项"},{"content":"Mysql导入导出 导出 mysqldump (1) 导出完整数据：\nmysqldump -u用户名 -p 数据库名 \u0026gt; 数据库名.sql\n例如：# /usr/local/mysql/bin/mysqldump -uroot -p abc \u0026gt; abc.sql\n(2) 只导出表结构（使用 -d 选项）：\nmysqldump -u用户名 -p -d 数据库名 \u0026gt; 数据库名.sql\nINTO OUTFILE https://www.modb.pro/db/98539\n1 2 3 4 5 6 SELECT * FROM data_tbl --查找数据源，如果是全表所有字段也可以用 TABLE \u0026lt;talbe\u0026gt; INTO OUTFILE \u0026#34;/tmp/data.txt\u0026#34; --数据输出文件 FIELDS TERMINATED BY \u0026#39;,\u0026#39; --字段分隔符 OPTIONALLY ENCLOSED BY \u0026#39;\u0026#34;\u0026#39; --字段引用符 LINES TERMINATED BY \u0026#39;\\n\u0026#39; --整条记录分割符 ; 导入 \u0026lt;.sql mysql -u用户名 -p 数据库名 \u0026lt; 数据库名.sql\n例如：\n# mysql -uroot -p123456 \u0026lt; abc.sql\nsource (1) 连接数据库：mysql -u {用户名} -p 回车 再输入密码 mysql -u root -p 回车\n(2) 指定目标数据库名：use {库名} use eva 回车\n(3) 导入文件 source {路径} source C:\\Users\\chengh\\Desktop\\user.sql 需要注意的是 你得有这个文件，如果没有则会报异常\nload data 使用场景和语法参见：https://blog.csdn.net/u012815136/article/details/88953289\n1 2 3 4 5 6 7 load data local infile \u0026#39;D:/my_user_info.txt\u0026#39; into table user_info CHARACTER SET utf8 -- 可选，指定导入文件的编码，避免中文乱码问题。假如这里文件 my_user_info.txt 的编码为 gbk，那么这里编码就应该设为 gbk 了 FIELDS TERMINATED BY \u0026#39;||\u0026#39; -- 字段分隔符，每个字段(列)以什么字符分隔，默认是 \\t OPTIONALLY ENCLOSED BY \u0026#39;\u0026#39; -- 文本限定符，每个字段被什么字符包围，默认是空字符 ESCAPED BY \u0026#39;\\\\\u0026#39; -- 转义符，默认是 \\ LINES TERMINATED BY \u0026#39;\\n\u0026#39; -- 记录分隔符，如字段本身也含\\n，那么应先去除，否则load data 会误将其视作另一行记录进行导入 (id, name, age, address, create_date) -- 每一行文本按顺序对应的表字段，建议不要省略 注意事项：\nLOAD DATA INFILE和 SELECT INTO OUTFILE是相互依赖的，即：如果你导出方式使用了 SELECT INTO OUTFILE，那么导入的时候就需要使用 LOAD DATA INFILE进行导入。需要格外注意，该方式会锁全表。\nLOAD DATA格式\nhttps://dev.mysql.com/doc/refman/8.0/en/load-data.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 LOAD DATA [LOW_PRIORITY | CONCURRENT] [LOCAL] INFILE \u0026#39;file_name\u0026#39; [REPLACE | IGNORE] INTO TABLE tbl_name [PARTITION (partition_name [, partition_name] ...)] [CHARACTER SET charset_name] [{FIELDS | COLUMNS} [TERMINATED BY \u0026#39;string\u0026#39;] [[OPTIONALLY] ENCLOSED BY \u0026#39;char\u0026#39;] [ESCAPED BY \u0026#39;char\u0026#39;] ] [LINES [STARTING BY \u0026#39;string\u0026#39;] [TERMINATED BY \u0026#39;string\u0026#39;] ] [IGNORE number {LINES | ROWS}] [(col_name_or_user_var [, col_name_or_user_var] ...)] [SET col_name={expr | DEFAULT} [, col_name={expr | DEFAULT}] ...] shell脚本实现导入导出 select into outfile \u0026amp; load data infile https://blog.csdn.net/u013946356/article/details/84960273\n如何使用导入定长文件（fixed-width records ） 定长文件：不同于用分隔符（如逗号或空格）来分割每行记录的各字段，定长数据文件是根据约定好的各字段长度来组织数据文件的。如：\n1 2 3 4 5 6 7 8 9 10 11 12 slideNum, startTime, endTime 1 75175.18 95128.46 1 790890.89 795829.16 1 875975.98 880914.25 8 2137704.37 2162195.53 8 2167267.27 2375275.28 10 2375408.74 2763997.33 14 2764264.26 2804437.77 15 2804504.50 2881981.98 16 2882048.72 2887921.25 16 2993093.09 2998031.36 19 3004104.10 3008041.37 LOAD DATA虽然很好地支持了分隔符格式的数据文件导入，但是这类型的数据文件，需要进行特殊的处理。\n可参考：https://stackoverflow.com/questions/11461790/loading-fixed-width-space-delimited-txt-file-into-mysql\n针对上面的例子，解决方案可以是（with user variables (@row)）：\n1 2 3 4 5 6 7 8 LOAD DATA LOCAL INFILE \u0026#39;/some/Path/segmentation.txt\u0026#39; INTO TABLE clip (@row) SET slideNum = TRIM(SUBSTR(@row,1,4)), startTime = TRIM(SUBSTR(@row,5,13)), endTime = TRIM(SUBSTR(@row,18,13)) ; 使用LOAD DATA来处理定长文件的注意事项：\nFixed-size format does not work if you are using a multibyte character set. With fixed-row format (which is used when FIELDS TERMINATED BY and FIELDS ENCLOSED BY are both empty), NULL is written as an empty string. This causes both NULL values and empty strings in the table to be indistinguishable when written to the file because both are written as empty strings. If you need to be able to tell the two apart when reading the file back in, you should not use fixed-row format. 此类场景的解决方案，参考链接：\nhttps://stackoverflow.com/questions/11461790/loading-fixed-width-space-delimited-txt-file-into-mysql\nhttps://docs.singlestore.com/managed-service/en/reference/sql-reference/data-manipulation-language-dml/load-data.html\nhttps://dev.mysql.com/doc/refman/8.0/en/load-data.html\n导入实践 建表 1 2 3 4 create table t1 ( id int, name VARCHAR(25) ) 准备infile文件数据 1 2 3 [root@iZbp15qc4wmx335c268l5mZ cindy]# cat data.txt 3 Alice 4 bob 尝试导入 脚本内容：\n1 2 3 4 5 6 LOAD DATA INFILE \u0026#39;/home/cindy/data.txt\u0026#39; INTO TABLE t1 (@row) SET id = TRIM(SUBSTR(@row,1,2)), name = TRIM(SUBSTR(@row,3,7)) ; 1 2 3 4 5 6 7 mysql\u0026gt; LOAD DATA INFILE \u0026#39;/home/cindy/data.txt\u0026#39; -\u0026gt; INTO TABLE t1 -\u0026gt; (@row) -\u0026gt; SET id = TRIM(SUBSTR(@row,1,2)), -\u0026gt; name = TRIM(SUBSTR(@row,3,7)) -\u0026gt; ; ERROR 1045 (28000): Access denied for user \u0026#39;cindy\u0026#39;@\u0026#39;%\u0026#39; (using password: YES) 授予FILE权限 搜索了下，使用 load data语句导入数据需要有处理文件的权限。\n参考：\nhttps://blog.csdn.net/qq_37189082/article/details/121249966\nhttps://www.cnblogs.com/darange/p/10508714.html\n1 2 3 4 5 mysql\u0026gt; grant file on *.* to \u0026#39;cindy\u0026#39;@\u0026#39;%\u0026#39;; ERROR 1045 (28000): Access denied for user \u0026#39;cindy\u0026#39;@\u0026#39;%\u0026#39; (using password: YES) -- 用cindy用户执行报错，原来需要用root用户授权 mysql\u0026gt; grant file on *.* to \u0026#39;cindy\u0026#39;@\u0026#39;%\u0026#39;; Query OK, 0 rows affected (0.01 sec) 再次尝试导入 1 2 3 4 5 6 7 mysql\u0026gt; LOAD DATA INFILE \u0026#39;/home/cindy/data.txt\u0026#39; -\u0026gt; INTO TABLE t1 -\u0026gt; (@row) -\u0026gt; SET id = TRIM(SUBSTR(@row,1,2)), -\u0026gt; name = TRIM(SUBSTR(@row,3,7)) -\u0026gt; ; ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement secure_file_priv参数修改 上述报错的解决方案参考：https://blog.csdn.net/lz6363/article/details/115805495\n1 2 3 4 5 6 7 8 9 10 11 12 mysql\u0026gt; show global variables like \u0026#39;%secure_file_priv%\u0026#39;; +------------------+-------+ | Variable_name | Value | +------------------+-------+ | secure_file_priv | NULL | +------------------+-------+ 1 row in set (0.12 sec) -- 查看官方文档，secure_file_priv参数用于限制LOAD DATA, SELECT …OUTFILE, LOAD_FILE()传到哪个指定目录。 -- secure_file_priv 为 NULL 时，表示限制mysqld不允许导入或导出。 -- secure_file_priv 为 /tmp 时，表示限制mysqld只能在/tmp目录中执行导入导出，其他目录不能执行。 -- secure_file_priv 没有值时，表示不限制mysqld在任意目录的导入导出。 -- 解决方案：1、将允许的文档路径secure-file-priv改为所需的路径；2、干脆设置secure_file_priv=\u0026#39;\u0026#39;，表示任意目录。我采取后者. 1 2 3 4 5 vim /etc/my.cnf # 加上以下这行： secure_file_priv=\u0026#39;\u0026#39; # 允许导入导出任何路径的文件 # 重启数据库 /etc/init.d/mysqld restart 1 2 3 4 5 6 7 8 -- 再次查询，修改成功 mysql\u0026gt; show global variables like \u0026#39;%secure_file_priv%\u0026#39;; +------------------+-------+ | Variable_name | Value | +------------------+-------+ | secure_file_priv | | +------------------+-------+ 1 row in set (0.00 sec) 再次尝试导入 1 2 3 4 5 6 7 mysql\u0026gt; LOAD DATA INFILE \u0026#39;/home/cindy/data.txt\u0026#39; -\u0026gt; INTO TABLE t1 -\u0026gt; (@row) -\u0026gt; SET id = TRIM(SUBSTR(@row,1,2)), -\u0026gt; name = TRIM(SUBSTR(@row,3,7)) -\u0026gt; ; ERROR 13 (HY000): Can\u0026#39;t get stat of \u0026#39;/home/cindy/data.txt\u0026#39; (Errcode: 13 - Permission denied) 解决方法参考： https://blog.csdn.net/weixin_39722921/article/details/113156666\n将LOAD DATA INFILE\n换成\nLOAD DATA LOCAL INFILE\n原因分析：\n源自Mysql中文手册：\n出于安全原因，当读取位于服务器中的文本文件时， 文件必须位于数据库目录中，或者是全体可读的。另外，要对服务器文件使用LOAD DATA INFILE，您必须拥有FILE权限。\n如果指定了LOCAL，则文件会被客户主机上的客户端读取，并被发送到服务器。文件会被给予一个完整的路径名称，以指定确切的位置。\n因此把脚本内容改为：(即，加上LOCAL)\n1 2 3 4 5 6 LOAD DATA LOCAL INFILE \u0026#39;/home/cindy/data.txt\u0026#39; INTO TABLE t1 (@row) SET id = TRIM(SUBSTR(@row,1,2)), name = TRIM(SUBSTR(@row,3,7)) ; 再次尝试导入 1 2 3 4 5 6 7 8 mysql\u0026gt; LOAD DATA LOCAL INFILE \u0026#39;/home/cindy/data.txt\u0026#39; -\u0026gt; INTO TABLE t1 -\u0026gt; (@row) -\u0026gt; SET id = TRIM(SUBSTR(@row,1,2)), -\u0026gt; name = TRIM(SUBSTR(@row,3,7)) -\u0026gt; ; Query OK, 3 rows affected, 1 warning (0.02 sec) Records: 3 Deleted: 0 Skipped: 0 Warnings: 1 看起来有戏，看看现在的表结果：\n1 2 3 4 5 6 7 8 9 10 11 mysql\u0026gt; select * from t1; +------+-------+ | id | name | +------+-------+ | 1 | cindy | | 2 | kexin | | 3 | Alice | | 4 | bob | | 0 | | +------+-------+ 5 rows in set (0.00 sec) 成功了！！\nid为3,4,0的记录是刚insert的，其中0的那一条应该是从空白行得来的。。（这样不合适的数据，当然也是有waring的⬇️）\n1 2 3 4 5 6 7 mysql\u0026gt; show warnings; +---------+------+------------------------------------------------------+ | Level | Code | Message | +---------+------+------------------------------------------------------+ | Warning | 1366 | Incorrect integer value: \u0026#39;\u0026#39; for column \u0026#39;id\u0026#39; at row 3 | +---------+------+------------------------------------------------------+ 1 row in set (0.07 sec) 将insert脚本作为sql脚本执行 1 2 3 4 5 6 7 8 [root@iZbp15qc4wmx335c268l5mZ cindy]# cat insert.sql use test_db; LOAD DATA LOCAL INFILE \u0026#39;/home/cindy/data.txt\u0026#39; INTO TABLE t1 (@row) SET id = TRIM(SUBSTR(@row,1,2)), name = TRIM(SUBSTR(@row,3,7)) ; 1 2 3 4 mysql\u0026gt; source /home/cindy/insert.sql; Database changed Query OK, 3 rows affected, 1 warning (0.09 sec) Records: 3 Deleted: 0 Skipped: 0 Warnings: 1 参考链接 https://www.runoob.com/w3cnote/linux-mysql-import-export-data.html\nhttps://juejin.cn/post/6992489420188286983\nhttps://juejin.cn/post/7039542872051302436\nhttps://www.modb.pro/db/98539\n","date":"2022-11-27T00:00:00Z","permalink":"https://huangxindi.com/p/mysql%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/","title":"Mysql导入导出"},{"content":"Linux-磁盘管理 参考 https://blog.csdn.net/weixin_52122271/article/details/126242445 的分类法：\n磁盘管理命令：\n查看使用量：df, du 查看磁盘分区：fdisk, lsblk 磁盘格式化，挂载/卸载 df df(disk free)：查询文件系统的磁盘占用情况。可显示Linux文件系统上的设备名称、总块数、总磁盘空间、已用磁盘空间、可用磁盘空间和挂载点信息。\n1 2 3 4 5 6 7 8 [root@iZbp15qc4wmx335c268l5mZ home]# df Filesystem 1K-blocks Used Available Use% Mounted on devtmpfs 471568 0 471568 0% /dev tmpfs 482068 8 482060 1% /dev/shm tmpfs 482068 516 481552 1% /run tmpfs 482068 0 482068 0% /sys/fs/cgroup /dev/vda1 41152812 21695184 17553920 56% / # 默认情况下，磁盘空间将以1KB为单位进行显示 后接支持的参数，可通过df --help获取\n常见用法： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # 与df相比，还显示虚拟文件系统的信息以及所有文件系统磁盘使用情况及其内存使用情况。 [root@iZbp15qc4wmx335c268l5mZ home]# df -a Filesystem 1K-blocks Used Available Use% Mounted on sysfs 0 0 0 - /sys proc 0 0 0 - /proc devtmpfs 471568 0 471568 0% /dev securityfs 0 0 0 - /sys/kernel/security tmpfs 482068 8 482060 1% /dev/shm devpts 0 0 0 - /dev/pts tmpfs 482068 516 481552 1% /run tmpfs 482068 0 482068 0% /sys/fs/cgroup cgroup 0 0 0 - /sys/fs/cgroup/systemd pstore 0 0 0 - /sys/fs/pstore cgroup 0 0 0 - /sys/fs/cgroup/devices cgroup 0 0 0 - /sys/fs/cgroup/cpu,cpuacct cgroup 0 0 0 - /sys/fs/cgroup/net_cls,net_prio cgroup 0 0 0 - /sys/fs/cgroup/memory cgroup 0 0 0 - /sys/fs/cgroup/cpuset cgroup 0 0 0 - /sys/fs/cgroup/blkio cgroup 0 0 0 - /sys/fs/cgroup/pids cgroup 0 0 0 - /sys/fs/cgroup/perf_event cgroup 0 0 0 - /sys/fs/cgroup/freezer cgroup 0 0 0 - /sys/fs/cgroup/hugetlb configfs 0 0 0 - /sys/kernel/config /dev/vda1 41152812 21695332 17553772 56% / systemd-1 - - - - /proc/sys/fs/binfmt_misc mqueue 0 0 0 - /dev/mqueue hugetlbfs 0 0 0 - /dev/hugepages debugfs 0 0 0 - /sys/kernel/debug binfmt_misc 0 0 0 - /proc/sys/fs/binfmt_misc tmpfs 96416 0 96416 0% /run/user/0 1 2 3 4 5 6 7 8 9 # 可读形式展现 [root@iZbp15qc4wmx335c268l5mZ home]# df -h Filesystem Size Used Avail Use% Mounted on devtmpfs 461M 0 461M 0% /dev tmpfs 471M 8.0K 471M 1% /dev/shm tmpfs 471M 516K 471M 1% /run tmpfs 471M 0 471M 0% /sys/fs/cgroup /dev/vda1 40G 21G 17G 56% / tmpfs 95M 0 95M 0% /run/user/0 1 2 3 4 5 6 7 8 # 查看具体某文件夹上的文件系统信息 [root@iZbp15qc4wmx335c268l5mZ ~]# df -h /home Filesystem Size Used Avail Use% Mounted on /dev/vda1 40G 21G 17G 56% / # 查看具体磁盘空间的信息 [root@iZbp15qc4wmx335c268l5mZ ~]# df -h /dev/vda1 Filesystem Size Used Avail Use% Mounted on /dev/vda1 40G 21G 17G 56% / 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # 指定单位的查询，如-k(=1024byte), -m(MB), -BG(GB) [root@iZbp15qc4wmx335c268l5mZ ~]# df -BG Filesystem 1G-blocks Used Available Use% Mounted on devtmpfs 1G 0G 1G 0% /dev tmpfs 1G 1G 1G 1% /dev/shm tmpfs 1G 1G 1G 1% /run tmpfs 1G 0G 1G 0% /sys/fs/cgroup /dev/vda1 40G 21G 17G 56% / tmpfs 1G 0G 1G 0% /run/user/0 # 值得注意的是：您可以使用-B或–block size=size选项来提供大小的自定义格式。大小可以是KB（1000）或K（1024）中的一个（或者可以是一个整数，可选后跟）。 # 1. 以K（即1024）为单位显示磁盘空间使用情况： # df -k 或 df -BK # 2. 以KB（即1000）为单位显示磁盘空间使用情况: # df -BKB # 其他单位类似 1 2 3 4 5 6 7 8 9 # 显示inode信息 [root@iZbp15qc4wmx335c268l5mZ ~]# df -i Filesystem Inodes IUsed IFree IUse% Mounted on devtmpfs 117892 329 117563 1% /dev tmpfs 120517 4 120513 1% /dev/shm tmpfs 120517 439 120078 1% /run tmpfs 120517 16 120501 1% /sys/fs/cgroup /dev/vda1 2621440 153635 2467805 6% / tmpfs 120517 1 120516 1% /run/user/0 1 2 3 4 5 6 7 8 9 # 显示文件系统类型 [root@iZbp15qc4wmx335c268l5mZ ~]# df -T Filesystem Type 1K-blocks Used Available Use% Mounted on devtmpfs devtmpfs 471568 0 471568 0% /dev tmpfs tmpfs 482068 8 482060 1% /dev/shm tmpfs tmpfs 482068 516 481552 1% /run tmpfs tmpfs 482068 0 482068 0% /sys/fs/cgroup /dev/vda1 ext4 41152812 21920632 17328472 56% / tmpfs tmpfs 96416 0 96416 0% /run/user/0 1 2 3 4 5 6 7 8 9 10 # 最后一行显示总的size大小 [root@iZbp15qc4wmx335c268l5mZ ~]# df --total -h Filesystem Size Used Avail Use% Mounted on devtmpfs 461M 0 461M 0% /dev tmpfs 471M 8.0K 471M 1% /dev/shm tmpfs 471M 516K 471M 1% /run tmpfs 471M 0 471M 0% /sys/fs/cgroup /dev/vda1 40G 21G 17G 56% / tmpfs 95M 0 95M 0% /run/user/0 total 42G 21G 19G 54% - du 同样是查看磁盘使用量，与df相比，du主要用于对文件和目录磁盘使用的空间的查看。同样可以使用du --help查看基本用法。\n常见用法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # 查看本目录下所有的目录大小（包含子、子子目录等） [root@iZbp15qc4wmx335c268l5mZ cindy]# du 16 ./.ssh 4 ./1111 104 . [root@iZbp15qc4wmx335c268l5mZ cindy]# ls -l total 56 drwxr-xr-x 2 root root 4096 Nov 29 08:11 1111 -rw-r--r-- 1 root root 0 Apr 5 2022 1.txt -rw-r--r-- 1 root root 529 Apr 5 2022 2.txt -rw-rw-r-- 1 cindy cindy 127 Jul 18 20:55 dump.rdb -rw-rw-r-- 1 cindy cindy 5 Aug 22 20:31 good.txt -rw-r--r-- 1 root root 7 Apr 17 2022 new1.xlsx -rw-r--r-- 1 root root 8 Apr 17 2022 new.word -rw-rw-r-- 1 cindy cindy 49 Aug 22 20:32 out -rw-rw-r-- 1 cindy cindy 3 Aug 22 19:01 tee1.txt -rw-rw-r-- 1 cindy cindy 3 Aug 22 19:01 tee2.txt -rw-rw-r-- 1 cindy cindy 12 Aug 22 19:00 tee.txt -rw-rw-r-- 1 cindy cindy 49 Jul 16 12:07 testCut.txt -rw-rw-r-- 1 cindy cindy 21 Aug 2 18:47 testSort.txt -rw-rw-r-- 1 cindy cindy 16 Aug 6 10:07 testUniq.txt -rw-rw-r-- 1 cindy cindy 10 Jul 31 18:47 testWc.txt 1 2 3 4 5 6 7 # 显示某文件所占磁盘空间 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ du data.txt 4 data.txt # 显示某文件所占磁盘空间 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ du dir 4 dir 1 2 3 4 5 6 7 8 9 10 11 12 # -h增加可读性 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ du -h dir 4.0K dir/dir1 4.0K dir/dir2 12K dir # -a统计该目录下的所有目录+文件（最后一行是总的目录大小） [cindy@iZbp15qc4wmx335c268l5mZ ~]$ du -ah dir 4.0K dir/dir1 4.0K dir/dir2 0 dir/123 12K dir 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # -s仅统计此目录的大小 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ du -s dir 12 dir # -c统计多文件/目录的各自大小和总大小 [cindy@iZbp15qc4wmx335c268l5mZ dir]$ du -c 123 234 4 123 4 234 8 total [cindy@iZbp15qc4wmx335c268l5mZ dir]$ ls -l total 16 -rw-rw-r-- 1 cindy cindy 6 Dec 5 07:49 123 -rw-rw-r-- 1 cindy cindy 6 Dec 5 07:49 234 drwxrwxr-x 2 cindy cindy 4096 Dec 5 07:44 dir1 drwxrwxr-x 2 cindy cindy 4096 Dec 5 07:44 dir2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 # 获取目录下所有的目录/文件，并按空间大小排序展示 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ du -ah | sort -nr 132K . 20K ./dir 16K ./.ssh 8.0K ./.bash_history 4.0K ./.viminfo 4.0K ./testWc.txt 4.0K ./testUniq.txt 4.0K ./testSort.txt 4.0K ./testCut.txt 4.0K ./tee.txt 4.0K ./tee2.txt 4.0K ./tee1.txt 4.0K ./.ssh/id_rsa.pub 4.0K ./.ssh/id_rsa_cindy 4.0K ./.ssh/authorized_keys 4.0K ./.rediscli_history 4.0K ./out 4.0K ./new.word 4.0K ./new1.xlsx 4.0K ./insert.sql 4.0K ./good.txt 4.0K ./dump.rdb 4.0K ./dir/dir2 4.0K ./dir/dir1 4.0K ./dir/234 4.0K ./dir/123 4.0K ./data.txt 4.0K ./.bashrc 4.0K ./.bash_profile 4.0K ./.bash_logout 4.0K ./2.txt 4.0K ./1111 0 ./1.txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 只显示该目录下的直接子目录（不展示子子...目录） [cindy@iZbp15qc4wmx335c268l5mZ ~]$ du -h --max-depth=1 16K ./.ssh 20K ./dir 4.0K ./1111 132K . # 对比没加--max-depth=1的 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ du -h 16K ./.ssh 4.0K ./dir/dir1 4.0K ./dir/dir2 20K ./dir 4.0K ./1111 132K . fdisk fdisk是创建和维护磁盘分区表的命令。执行用户需要root。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ fdisk --help fdisk: invalid option -- \u0026#39;-\u0026#39; Usage: fdisk [options] \u0026lt;disk\u0026gt; change partition table fdisk [options] -l \u0026lt;disk\u0026gt; list partition table(s) fdisk -s \u0026lt;partition\u0026gt; give partition size(s) in blocks Options: -b \u0026lt;size\u0026gt; sector size (512, 1024, 2048 or 4096) -c[=\u0026lt;mode\u0026gt;] compatible mode: \u0026#39;dos\u0026#39; or \u0026#39;nondos\u0026#39; (default) -h print this help text -u[=\u0026lt;unit\u0026gt;] display units: \u0026#39;cylinders\u0026#39; or \u0026#39;sectors\u0026#39; (default) # 搭配”-l”参数列表，会用分区数目取代柱面数目，来表示每个分区的起始地址 -v print program version -C \u0026lt;number\u0026gt; specify the number of cylinders # 柱面数 -H \u0026lt;number\u0026gt; specify the number of heads # 磁头数 -S \u0026lt;number\u0026gt; specify the number of sectors per track # 每个磁道的扇区数 理论基础：\n块（block）与扇区（sector）的区别。 扇区是对硬盘而言，扇区是硬盘的最小存储单位，块是对文件系统而言，块是文件系统最小存取单位。一般而言，一个扇区大小为512B，一个块大小为4KB，一个block是由连续的8个sector组成。\nhttps://www.cnblogs.com/joshua317/p/15407969.html\n常见用法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 [root@iZbp15qc4wmx335c268l5mZ ~]# fdisk -l Disk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x000bb9c1 Device Boot Start End Blocks Id System /dev/vda1 * 2048 83886046 41941999+ 83 Linux [root@iZbp15qc4wmx335c268l5mZ ~]# fdisk -lu Disk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x000bb9c1 Device Boot Start End Blocks Id System /dev/vda1 * 2048 83886046 41941999+ 83 Linux 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #参数说明 Device：分区名称； Boot：是否是活动分区。活动分区只能是主分区，一个硬盘只能有一个活动的主分区；一个硬盘的主分区与扩展分区总和不能超过4个。硬盘分区遵循着“主分区→扩展分区→逻辑分区”的次序原则，而删除分区则与之相反。 主分区：一个硬盘可以划分多个主分区，但没必要划分那么多，一个足矣。 扩展分区：主分区之外的硬盘空间就是扩展分区， 逻辑分区：是对扩展分区再行划分得到的。 Start：分区柱面的开始下标； End：分区柱面的结束下标； Blocks：该分区的块数量。 Id：各种分区的文件系统不同，如有ntfs分区，fat32分区，ext3分区，swap分区等。每一种文件系统都有一个代号，对应这里的Id。常见的文件系统ID有： f：FAT32 Extend,只限于扩展分区。 86：NTFS。 7：HPFS/NTFS b：FAT32。 83：Linux Ext2。 82：Linux 交换区。 System：文件系统名称。 1 2 3 4 5 6 7 # 显示指定device的分区信息 [root@iZbp15qc4wmx335c268l5mZ ~]# fdisk -l /dev/vda1 Disk /dev/vda1: 42.9 GB, 42948607488 bytes, 83883999 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # fdisk进入交互模式，进行相关操作 [root@iZbp15qc4wmx335c268l5mZ ~]# fdisk /dev/vda1 Welcome to fdisk (util-linux 2.23.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Device does not contain a recognized partition table Building a new DOS disklabel with disk identifier 0x4b929c62. Command (m for help): m Command action a toggle a bootable flag b edit bsd disklabel c toggle the dos compatibility flag d delete a partition g create a new empty GPT partition table G create an IRIX (SGI) partition table l list known partition types m print this menu n add a new partition o create a new empty DOS partition table p print the partition table q quit without saving changes s create a new empty Sun disklabel t change a partition\u0026#39;s system id u change display/entry units v verify the partition table w write table to disk and exit x extra functionality (experts only) lsblk lsblk命令可以显示很多跟磁盘相关分区、所属关系以及lvm的重要信息。用于列出所有可用块设备的信息，而且还能显示他们之间的依赖关系，但是它不会列出RAM盘的信息。块设备有硬盘，闪存盘，cd-ROM等等。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk --help Usage: lsblk [options] [\u0026lt;device\u0026gt; ...] Options: -a, --all print all devices -b, --bytes print SIZE in bytes rather than in human readable format -d, --nodeps don\u0026#39;t print slaves or holders -D, --discard print discard capabilities -e, --exclude \u0026lt;list\u0026gt; exclude devices by major number (default: RAM disks) -I, --include \u0026lt;list\u0026gt; show only devices with specified major numbers -f, --fs output info about filesystems -h, --help usage information (this) -i, --ascii use ascii characters only -m, --perms output info about permissions -l, --list use list format output -n, --noheadings don\u0026#39;t print headings -o, --output \u0026lt;list\u0026gt; output columns -p, --paths print complate device path -P, --pairs use key=\u0026#34;value\u0026#34; output format -r, --raw use raw output format -s, --inverse inverse dependencies -t, --topology output info about topology -S, --scsi output info about SCSI devices -h, --help display this help and exit -V, --version output version information and exit Available columns (for --output): NAME device name KNAME internal kernel device name MAJ:MIN major:minor device number FSTYPE filesystem type MOUNTPOINT where the device is mounted LABEL filesystem LABEL UUID filesystem UUID PARTLABEL partition LABEL PARTUUID partition UUID RA read-ahead of the device RO read-only device RM removable device MODEL device identifier SERIAL disk serial number SIZE size of the device STATE state of the device OWNER user name GROUP group name MODE device node permissions ALIGNMENT alignment offset MIN-IO minimum I/O size OPT-IO optimal I/O size PHY-SEC physical sector size LOG-SEC logical sector size ROTA rotational device SCHED I/O scheduler name RQ-SIZE request queue size TYPE device type DISC-ALN discard alignment offset DISC-GRAN discard granularity DISC-MAX discard max bytes DISC-ZERO discard zeroes data WSAME write same max bytes WWN unique storage identifier RAND adds randomness PKNAME internal parent kernel device name HCTL Host:Channel:Target:Lun for SCSI TRAN device transport type REV device revision VENDOR device vendor For more details see lsblk(8). 常见用法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 # 打印所有设备（树状形式） [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk -a NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT vda 253:0 0 40G 0 disk └─vda1 253:1 0 40G 0 part / # NAME : 这是块设备名。 # MAJ:MIN : 本栏显示主要和次要设备号。 # RM : 本栏显示设备是否可移动设备。1说明是可移动设备。 # SIZE : 本栏列出设备的容量大小信息。例如40G表明该设备大小为40GB。 # RO : 该项表明设备是否为只读。0表明不是只读的。 # TYPE :本栏显示块设备是否是磁盘或磁盘上的一个分区。 # MOUNTPOINT : 本栏指出设备挂载的挂载点。 # 以列表形式打印 [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk -l NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT vda 253:0 0 40G 0 disk vda1 253:1 0 40G 0 part / # 不打印从属设备 [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk -d NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT vda 253:0 0 40G 0 disk # 打印文件系统和UUID [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk -f NAME FSTYPE LABEL UUID MOUNTPOINT vda └─vda1 ext4 9f2d3e15-a78a-4f3d-8385-0165b4b67864 / # 打印关于每个设备的丢弃能力(TRIM, UNMAP)的信息 [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk -D NAME DISC-ALN DISC-GRAN DISC-MAX DISC-ZERO vda 0 0B 0B 0 └─vda1 0 0B 0B 0 # 打印设别全路径 [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk -p NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT /dev/vda 253:0 0 40G 0 disk └─/dev/vda1 253:1 0 40G 0 part / # 打印反向依赖关系 [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk -s NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT vda1 253:1 0 40G 0 part / └─vda 253:0 0 40G 0 disk # 输出块设备拓扑信息 [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk -t NAME ALIGNMENT MIN-IO OPT-IO PHY-SEC LOG-SEC ROTA SCHED RQ-SIZE RA WSAME vda 0 512 0 512 512 1 mq-deadline 256 4096 0B └─vda1 0 512 0 512 512 1 mq-deadline 256 4096 0B # 列出一个特定设备的拥有关系，同时也可以列出组和模式 [root@iZbp15qc4wmx335c268l5mZ ~]# lsblk -m NAME SIZE OWNER GROUP MODE vda 40G root disk brw-rw---- └─vda1 40G root disk brw-rw---- 磁盘格式化，挂载/卸载 磁盘新分好区了，使用lsblk -f查看时唯一的区别是：旧的硬盘分区都有一个UUID和挂载目录MOUNTPOINT，而新建的硬盘分区是没有的。就需要完成硬盘分区的格式化与目录挂载。所谓格式化，其实就是安装文件系统。\n格式化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [root@iZbp15qc4wmx335c268l5mZ ~]# mkfs --help Usage: mkfs [options] [-t \u0026lt;type\u0026gt;] [fs-options] \u0026lt;device\u0026gt; [\u0026lt;size\u0026gt;] Options: -t, --type=\u0026lt;type\u0026gt; filesystem type; when unspecified, ext2 is used fs-options parameters for the real filesystem builder \u0026lt;device\u0026gt; path to the device to be used \u0026lt;size\u0026gt; number of blocks to be used on the device -V, --verbose explain what is being done; specifying -V more than once will cause a dry-run -V, --version display version information and exit; -V as --version must be the only option -h, --help display this help text and exit For more information see mkfs(8). 1 2 3 4 5 # 如把分区sdb1格式化为ext4文件系统 mkfs -t ext4 /dev/sdb1 # 或者是 mkfs.ext4 /dev/sdb1 mkfs.xfs /dev/vdb # 格式化为xfs文件系统 1 2 3 # 查看支持的文件系统 [root@iZbp15qc4wmx335c268l5mZ ~]# mkfs (输入mkfs按两下tab键) mkfs mkfs.btrfs mkfs.cramfs mkfs.ext2 mkfs.ext3 mkfs.ext4 mkfs.minix mkfs.xfs 目录挂载 1 2 mkdir -p /data; #新建一个目录用于挂载新硬盘 mount /dev/sdb1 /data; #挂载新硬盘到目录 完成格式化和挂载后，此时再使用lsblk -f查看分区，可以看到该分区的UUID和MOUNTPOINT都有值了。使用df -h也可以查看挂载结果。\n自动挂载 上面完成的挂载关系，在操作系统重启之后就失效了。如果希望下次操作系统重启的时候自动挂载，需要在/etc/fstab文件中添加下面的一行记录实现自动挂载。\n参数说明可参考： https://help.aliyun.com/document_detail/194379.htm?spm=a2c4g.11186623.0.0.15757d02qNoM4R#task-2000719\n1 /dev/sdb1 /data ext4 defaults 0 0 如果是root用户，也可使用以下命令修改/etc/fstab：\n参考 https://help.aliyun.com/document_detail/131111.html\n1 2 3 4 5 echo `blkid /dev/sdb1 | awk \u0026#39;{print $2}\u0026#39; | sed \u0026#39;s/\\\u0026#34;//g\u0026#39;` /data ext4 defaults 0 0 \u0026gt;\u0026gt; /etc/fstab # 在本机上试试看echo的内容 [root@iZbp15qc4wmx335c268l5mZ ~]# echo `blkid /dev/vda1 | awk \u0026#39;{print $2}\u0026#39; | sed \u0026#39;s/\\\u0026#34;//g\u0026#39;` /data ext4 defaults 0 0 UUID=9f2d3e15-a78a-4f3d-8385-0165b4b67864 /data ext4 defaults 0 0 # 其中blkid命令是查看分区的uuid 执行如下命令会重新加载配置文件，并使其生效：\n1 mount -a 目录卸载 1 2 umount /media/test # 将挂载在/media/test 目录下的文件系统卸载 umount -f /media/test # 强制卸载 参考链接 https://www.runoob.com/linux/linux-filesystem.html\nhttps://www.cnblogs.com/hls-code/p/16333387.html\nhttps://www.11meigui.com/2021/df-command-in-linux.html\nhttps://blog.csdn.net/weixin_52122271/article/details/126242445\nhttps://www.cnblogs.com/my-first-blog-lgz/p/16115867.html\nhttps://www.cnblogs.com/machangwei-8/p/10353683.html\nhttps://www.cnblogs.com/zouhong/p/16109600.html\nhttps://www.cnblogs.com/joshua317/p/15407969.html\nhttps://www.cnblogs.com/aozhejin/p/15845945.html\nhttps://www.cnblogs.com/machangwei-8/p/10403533.html\nhttps://www.cnblogs.com/my-show-time/p/16858420.html\nhttps://www.yingsoo.com/news/servers/67277.html\nhttps://www.cnblogs.com/zimug/p/16316110.html\nhttps://blog.csdn.net/K_520_W/article/details/124132566\n","date":"2022-11-22T00:00:00Z","permalink":"https://huangxindi.com/p/linux-%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/","title":"Linux-磁盘管理"},{"content":"编译期常量 先说结论，编译期常量=final+常量\njava四个阶段 编辑期 编译期：将.java文件编译为.class文件 加载期：将.class文件加载到内存 并 生成.class类 运行期：通过.class类去创建对象、执行代码 参考：https://www.modb.pro/db/211851\n除了第一个阶段我们能直接干预，剩余三个阶段，都是jvm自己执行的。第二阶段是 非人工干预的 第一阶段。在这个阶段就能确定的值，我们就称为**「编译期常量」。那么即使后面第三阶段和第四阶段不走，对它也没有影响，而类加载就发生在第三阶段，所以: 「编译期常量不会触发类加载」。\n编译期常量定义方式 1 2 3 // final定义，且是常量，即为编译期常量。而且，编译期常量不存在赋值语句，只存在初始化语句。 public final int a = 10000; public static final int b = 10000; 反例：\n1 2 public int a = 10; // 没用final修饰，不是编译期常量 public final int b = System.currentTimeMillis(); // 值不是常量，所以不是编译期常量 编译期常量的表现 编译后的.class文件中，编译期变量被**「ConstantValue」**修饰。\n1 2 3 4 5 6 7 8 9 10 11 12 13 public class Class { public final int a = 10000; public static final int b = 10000; } // 查看编译后... public final int a; descriptor: I flags: (0x0011) ACC_PUBLIC, ACC_FINAL ConstantValue: int 10000 // 有ConstantValue，说明是编译期常量 public static final int b; descriptor: I flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL ConstantValue: int 10000 // 有ConstantValue，说明是编译期常量 此外 被static修饰的是类一级的，非static修饰的是对象一级的。对象一级的要先创建对象才能使用，所以肯定会触发类加载(不管是不是编译期常量)。\n在实际开发中，如果A类之前调用到了B类的编译期常量，当修改B的编译期常量值后，还需要再次编译A类，否则A类对于该值的调用还是修改之前的值（因为已经固定在class文件里了）。\n参考链接 https://www.modb.pro/db/211851\n","date":"2022-11-22T00:00:00Z","permalink":"https://huangxindi.com/p/%E7%BC%96%E8%AF%91%E6%9C%9F%E5%B8%B8%E9%87%8F/","title":"编译期常量"},{"content":"数据库分页查询 数据库分页语句使用limit语法来实现。除了基础的limit用法，还有一些优化的方法。\nLIMIT基础用法 SELECT * FROM table LIMIT [offset,] rows | rows OFFSET offset\n参数1表示偏移量，参数2表示返回记录行的最大数目。\n需要注意：初始偏移量是0而不是1。\n举例：\n1 2 3 4 5 6 7 8 SELECT * FROM table LIMIT 5,10; # 检索记录行 6-15 SELECT * FROM table LIMIT 95,-1; # 检索记录行 96-last SELECT * FROM table LIMIT 5; # 检索前 5 个记录行 （LIMIT n 等价于 LIMIT 0,n） select * from table LIMIT 4 offset 9; # 返回从第9行开始的4条记录 （此时第1个参数表示最多返回几行记录，offset后面的第2个参数表示从第4行开始） # 返回第pageNum页,每页条数为numPerPage 条数据的sql语句写法为 select * from table limit (pageNum-1)*numPerPage ,numPerPage # 方法1 select * from table limit numPerPage offset (pageNum-1)*numPerPage # 方法2 优化分页查询方法 由于基础的分页查询方式会从数据库第一条记录开始扫描，所以当LIMIT的offset较大时，查询速度会越来越慢。下面列举一些优化的分页查询方法。\n参考：\nhttps://www.w3cschool.cn/mysql/mysql-xilz2oy6.html\nhttps://segmentfault.com/a/1190000008859706\n使用子查询优化 1 2 3 SELECT * FROM articles WHERE id \u0026gt;= (SELECT id FROM articles WHERE category_id = 123 ORDER BY id LIMIT 10000, 1) LIMIT 10; SELECT * FROM news WHERE id IN (SELECT id FROM news ORDER BY id limit (page * (per_page - 1)), per_page); 即，使用id来直接定位。但不知道具体id是多少，所以需要用子查询来先获取。\n使用 id 限定优化 1 2 select * from orders_history where type=2 and id between 1000000 and 1000100 limit 100; select * from orders_history where id \u0026gt;= 1000001 limit 100; 前提是知道具体id是多少：这种方式假设数据表的id是连续递增的，则我们根据查询的页数和查询的记录数可以算出查询的id的范围。\n优化总结 为了保证index索引列连续，可以为每个表加一个自增字段（作为id），并且加上索引。\n需要提醒的是，所有的分页查询条件都必须建立索引，并且不能有 TEXT 字段。MySQL 的索引字段中，VARCHAR(32) 我都觉得很大了， TEXT 字段简直是不能容忍的，不怕死的可以自己试试。 （https://www.mywaiting.com/weblogs/pagination-with-mysql/）\n参考链接 https://www.cnblogs.com/duhuo/p/4245209.html\nhttps://www.w3cschool.cn/mysql/mysql-xilz2oy6.html\nhttps://segmentfault.com/a/1190000008859706\nhttps://www.mywaiting.com/weblogs/pagination-with-mysql/\n","date":"2022-11-21T00:00:00Z","permalink":"https://huangxindi.com/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/","title":"数据库分页查询"},{"content":"数据库日志基础 世上无难事，只要有日志。\n本文以Mysql为例，研究支持的日志。\n数据库日志类型 记录方式分类：\n逻辑日志：可以简单理解为记录的就是sql语句 。 物理日志：mysql 数据最终是保存在数据页中的，物理日志记录的就是数据页变更 。 日志类型分类：\n二进制日志（binlog） 错误日志 通用查询日志 慢查询日志 中继日志（relay-log） 数据定义语句日志 其中，后两种是Mysql 8 新增的日志。除二进制日志外，其他日志都是文本文件。\n1 2 3 4 5 6 7 慢查询日志:记录所有执行时间超过long_query_time的所有查询，方便我们对查询进行优化。 通用查询日志:记录所有连接的起始时间和终止时间，以及连接发送给数据库服务器的所有指令，对我们复原操作的实际场景、发现问题，甚至是对数据库操作的审计都有很大的帮助。 错误日志:记录MysQL服务的启动、运行或停止MysQL服务时出现的问题，方便我们了解服务器的状态，从对服务器进行维护。 二进制日志:记录所有更改数据的语句，可以用于主从服务器之间的数据同步，以及服务器遇到故障时数据的无损失恢复。 中继日志:用于主从服务器架构中，从服务器用来存放主服务器二进制日志内容的一个中间文件。从服务器通过读取中继日志的内容，来同步主服务器上的操作。 数据定义语句日志:记录数据定义语句执行的元数据操作。 来自：https://blog.csdn.net/xiaowanziddd/article/details/125963915 此外，还有文章（https://www.cnblogs.com/shengruxiahuaya/p/16602850.html）提到事务日志（重做日志redo log和回滚日志undo log）：\n​\tbinlog日志和回滚日志undo log日志都属于逻辑日志，记录的是sql语句。而redo log 重做日志属于物理日志，记录的是数据页的变更。\n默认日志文件名 如果不进行额外指定的话，mysql日志会有默认的存放路径和文件名。\n默认存放路径：DATADIR（数据目录）\n默认文件名：\n二进制日志：hostname-bin.000001（编号依次增加） 错误日志：hostname.err 通用查询日志：hostname-general.log 慢查询日志：hostname.slow.log 中继日志：hostname-relay-bin.000001（编号依次增加） 数据定义语句日志 二进制日志（binlog） 记录所有的DDL语句和DML语句，但不包括查询语句。binlog 用于记录数据库执行的写入性操作(不包括查询)信息，以二进制的形式保存在磁盘中。binlog 是通过追加的方式进行写入的，可以通过max_binlog_size 参数设置每个 binlog文件的大小，当文件大小达到给定值之后，会生成新的文件来保存日志。\n使用场景：\n1 2 - 主从复制：在 Master 端开启 binlog ，然后将 binlog发送到各个 Slave 端， Slave 端重放 binlog 从而达到主从数据一致。 - 数据恢复：通过使用 mysqlbinlog 工具来恢复数据。 二进制日志格式：\n基于语句的格式（STATEMENNT）：仅记录使用的sql 基于行的格式（ROW）：记录每个改变的行 混合模式（MIXED）：一般的用STATEMENNT，STATEMENNT无法复制的操作用ROW 删除binlog方式：可根据文件名、时间或设置自动过期天数来删除，详情用到时再搜索即可。\n通用查询日志 通用查询日志（General Query Log）用来记录用户的所有操作，包括启动和关闭 MySQL 服务、更新语句和查询语句等。当我们的数据发生异常时，查看通用查询日志，还原操作时的具体场景，可以帮助我们准确定位问题。\n该功能默认不开启，查看是否开启：\n1 2 3 4 5 6 7 8 mysql\u0026gt; show global variables like \u0026#34;%general_log%\u0026#34;; +------------------+-------------------------------+ | Variable_name | Value | +------------------+-------------------------------+ | general_log | OFF | # 处于关闭状态OFF | general_log_file | /data/mysql_data/zbx-db01.log | # 日志文件路径是/data/mysql_data/zbx-db01.log +------------------+-------------------------------+ 2 rows in set (0.00 sec) 慢查询日志 记录条件：所有执行时间超过long_query_time（单位为秒，精度可以到微妙）且记录数不小于min_examined_row_limit的所有SQL语句。\n默认不开启，可通过slow_query_log参数打开慢查询日志\n管理语句（如alter、create等）和不使用索引查询的语句不会记录到慢查询日志。也可以通过设置log-slow-admin-statement参数和log_queries_not_using_indexes参数增加两者的监控。\n事务日志 undo log 与“原子性”相关：\n原子性底层就是通过 undo log 实现的。undo log主要记录了数据的逻辑变化，比如一条 INSERT 语句，对应一条DELETE 的 undo log ，对于每个 UPDATE 语句，对应一条相反的 UPDATE 的 undo log ，这样在发生错误时，就能回滚到事务之前的数据状态。\nredo log 与“持久性”相关：\n那么mysql是如何保证一致性的呢？最简单的做法是在每次事务提交的时候，将该事务涉及修改的数据页全部刷新到磁盘中。但是这么做会有严重的性能问题。因此mysql设计了redo log，具体来说就是只记录事务对数据页做了哪些修改，这样就能完美地解决性能问题了(相对而言文件更小并且是顺序IO)。\n中继日志 原理：\n1、 从数据库io线程读取主数据库的二进制日志（binlog）,读取后写入从数据库的中继日志中保存\n2、从数据库sql线程读取从数据库的中继日志，重新执行一遍sql\n参考链接 https://blog.csdn.net/xiaowanziddd/article/details/125963915\nhttps://www.cnblogs.com/shengruxiahuaya/p/16602850.html\nhttp://c.biancheng.net/view/7780.html\nhttps://blog.csdn.net/m0_46284149/article/details/126655898\nhttps://cdn.modb.pro/db/519648\n","date":"2022-11-21T00:00:00Z","permalink":"https://huangxindi.com/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%BF%97%E5%9F%BA%E7%A1%80/","title":"数据库日志基础"},{"content":"分区表 基本概念 分区、分表、分库、分片\n参考链接：\nhttps://blog.csdn.net/wqaiwsj/article/details/124684356\nhttps://www.cnblogs.com/qianmojie/p/16326975.html\n分区：将数据从物理上分成若干个小表存储，实际上还是一张表。为了在特定的SQL操作中减少数据读写的总量以缩减响应时间，提升查询效率。\n分表：把一张表按一定的规则分解成N个具有独立存储空间的实体表。\n分库：多表放在不同的服务器中，突破单节点数据库服务器的I/O能力限制。\n分片：在分布式存储系统中，数据需要分散存储在多台设备上，数据分片（Sharding）就是用来确定数据在多台存储设备上分布的技术\n常见分区类型 以mysql为例\nrange分区：给定连续区间 list分区：匹配一个离散值集合 hash分区：基于用户定义的表达式（MySQL 中有效的、产生非负整数值的任何表达式）的返回值来进行选择的分区 key分区：根据MySQL数据库提供的哈希函数来进行分区。 另外，还需要关注自动分区表（mysql不能自然支持，其他数据库可能支持，如gaussdb）\n分区表定义 参考：https://www.cnblogs.com/dream98/p/10620877.html\nRANGE分区 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 CREATE TABLE employees ( id INT NOT NULL, fname VARCHAR(30), lname VARCHAR(30), hired DATE NOT NULL DEFAULT \u0026#39;1970-01-01\u0026#39;, separated DATE NOT NULL DEFAULT \u0026#39;9999-12-31\u0026#39;, job_code INT NOT NULL, store_id INT NOT NULL ) partition BY RANGE (store_id) ( partition p0 VALUES LESS THAN (6), partition p1 VALUES LESS THAN (11), partition p2 VALUES LESS THAN (16), partition p3 VALUES LESS THAN (21) ); 如果增加了一个编号为第21的商店，将会发生什么呢？在这种方案下，由于没有规则把store_id大于20的商店包含在内，服务器将不知道把该行保存在何处，将会导致错误。 要避免这种错误，可以将最后一行规则换成：\n1 PARTITION p3 VALUES LESS THAN MAXVALUE 特点：\n这些区间要连续且不能相互重叠，使用VALUES LESS THAN操作符来进行定义。\n每个分区都是按顺序进行定义，从最低到最高。\n这里最值得注意的限制是MySQL 必须能够计算表达式的返回值作为LESS THAN (\u0026lt;)比较的一部分；因此，表达式的值不能为NULL 。\n可以在VALUES LESS THAN 子句中使用一个表达式。\n如果要删除某个分区范围内的值，直接删除分区比删除匹配的行更快。\n这种分区有利于查询条件是分区条件的列，因为可以直接到匹配分区中查询。\nLIST分区 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 CREATE TABLE employees ( id INT NOT NULL, fname VARCHAR(30), lname VARCHAR(30), hired DATE NOT NULL DEFAULT \u0026#39;1970-01-01\u0026#39;, separated DATE NOT NULL DEFAULT \u0026#39;9999-12-31\u0026#39;, job_code INT, store_id INT ) PARTITION BY LIST(store_id) PARTITION pNorth VALUES IN (3,5,6,9,17), PARTITION pEast VALUES IN (1,2,10,11,19,20), PARTITION pWest VALUES IN (4,12,13,14,18), PARTITION pCentral VALUES IN (7,8,15,16) ); 要重点注意的是，LIST分区没有类似如“VALUES LESS THAN MAXVALUE”这样的包含其他值在内的定义。将要匹配的任何值都必须在值列表中找到。\nVALUES IN (value_list)中的value_list可能只支持整数列表（根据数据库具体特性而定）。\nHASH分区 1 2 3 4 5 6 7 8 9 10 11 CREATE TABLE employees ( id INT NOT NULL, fname VARCHAR(30), lname VARCHAR(30), hired DATE NOT NULL DEFAULT \u0026#39;1970-01-01\u0026#39;, separated DATE NOT NULL DEFAULT \u0026#39;9999-12-31\u0026#39;, job_code INT, store_id INT ) PARTITION BY HASH(store_id) PARTITIONS 4; 要在CREATE TABLE 语句上添加一个“PARTITION BY HASH (expr)”子句，其中“expr”是一个返回一个整数的表达式。它可以仅仅是字段类型为MySQL整型的一列的名字。此外，你很可能需要在后面再添加一个“PARTITIONS num”子句，其中num是一个非负的整数，它表示表将要被分割成分区的数量。\n自动分区 参考： https://www.lpsrmyy.com/tech/36159.html\nmysql无法支持自动分区（需要通过脚本来实现自动分区）。故本小节以gaussdb的自动分区功能为例。\n对于分区列为时间的分区表，分区自动管理功能可以自动创建新分区和删除过期分区，降低分区表的维护成本，改善查询性能。\n使用period和ttl实现分区自动管理。period既表示新分区的时间范围，也表示自动创建新分区和自动删除过期分区的周期；ttl表示分区过期时间。period和ttl的值均为Interval类型，例如’1 hour’、‘1 day’、‘1 week’、‘1 month’、‘1 year’、 \u0026lsquo;1 month 2 days 3 hours’等。\n实现原理 分区管理的实现依托了pg_task自动调度任务，即设置period/ttl时，向scheduler.pg_task表中插入了自增/自减分区管理任务，其中自增分区任务的任务内容为proc_add_partition(relname, period)函数，自减分区任务为proc_drop_partition(relname, ttl)函数，两种任务的调用周期均为period，第一次执行时间为任务插入时间后30秒。\n自动创建分区 每隔period就会创建1或多个时间范围为period的新分区，保证其大于nowTime+30*period。\n自动删除过期分区 每隔period就会遍历检测所有分区，并删除过期分区（边界时间早于nowTime-ttl的分区）。如果所有的分区都是过期分区，则保留一个分区，并truncate该表。\n注意事项 1 2 3 4 5 6 7 8 9 10 在使用分区管理功能时，需要满足如下约束： 1）不支持在小型机、加速集群、单机集群上使用。 2）不支持在8.1.3版本以下的版本中使用。 3）仅支持行存范围分区表、列存范围分区表、时序表以及冷热表。 4）分区键唯一并且类型仅支持timestamp、timestamptz、date类型。 5）不支持存在maxvalue分区。 6）(nowTime - boundaryTime) / period需要小于分区个数上限，其中nowTime为当前时间，boundaryTime为现有分区中最早的分区边界时间。 7）period、ttl取值范围为1 hour ~ 100 years。另外，在兼容Teradata或MySQL的数据库中，分区键类型为date时，period不能小于1 day。 8）表级参数ttl不支持单独存在，必须要提前或同时设置period，并且要大于或等于period。 9）集群在线扩容期间，自动增加分区会失败，但是由于每次增分区时，都预留了足够的分区，所以不影响使用。 自动分区管理功能相关操作 开启 分区管理功能是和表级参数period、ttl绑定的，只要成功设置了表级参数period，即开启了自动创建新分区功能；成功设置了表级参数ttl，即开启了自动删除过期分区功能。两者是可以分开设定的。\n建表时指定period、ttl 关键语句：\n1 with (TTL=\u0026#39;7 days\u0026#39;,PERIOD=\u0026#39;1 day\u0026#39;) partition by range(time) 使用alter table set的方式设置period、ttl 关键语句：\n1 2 3 4 5 6 -- 同时开启自动创建和自动删除分区功能 ALTER TABLE cpu3 SET (PERIOD=\u0026#39;1 day\u0026#39;,TTL=\u0026#39;7 days\u0026#39;); -- 只开启自动创建分区功能 ALTER TABLE cpu3 SET (PERIOD=\u0026#39;1 day\u0026#39;); -- 只开启自动删除分区功能，如果没有提前开启自动创建分区功能，则开启失败 ALTER TABLE cpu3 SET (TTL=\u0026#39;7 days\u0026#39;); 修改 1 ALTER TABLE cpu4 SET (TTL=\u0026#39;10 days\u0026#39;,PERIOD=\u0026#39;2 days\u0026#39;); 关闭 1 2 3 4 5 6 -- 同时关闭自动创建和自动删除分区功能 ALTER TABLE cpu5 RESET (PERIOD,TTL); -- 只关闭自动删除分区功能 ALTER TABLE cpu5 RESET (TTL); -- 只关闭自动创建分区功能,如果该表有ttl参数，则关闭失败 ALTER TABLE cpu5 RESET (PERIOD); 分区表基本操作 以mysql为例\n参考：\nhttps://www.cnblogs.com/shoshana-kong/p/14010672.html\nhttps://news.sangniao.com/p/14930731\n新增分区\nALTER TABLE t1 ADD PARTITION (PARTITION p3 VALUES LESS THAN (2002));\n删除分区\nALTER TABLE t1 DROP PARTITION p0, p1;\n截取分区（删除分区的数据）\nALTER TABLE t1 TRUNCATE PARTITION p1, p3;\n合并分区\n1 2 3 4 -- 合并分区 将s0和s1合并为p0 ALTER TABLE members REORGANIZE PARTITION s0,s1 INTO ( PARTITION p0 VALUES LESS THAN (5) )； 拆分分区\n1 2 3 4 5 -- 分解分区 将p0拆分为s0和s1 ALTER TABLE members REORGANIZE PARTITION p0 INTO ( PARTITION s0 VALUES LESS THAN (3), PARTITION s1 VALUES LESS THAN (5) )； 查看所有分区\n1 select partition_name part, partition_expression expr, partition_description descr, table_rows from INFORMATION_SCHEMA.partitions where TABLE_SCHEMA=\u0026#34;库名\u0026#34; AND TABLE_NAME=\u0026#34;表名\u0026#34;; 其他操作不列举了，参考上面的链接\n参考链接 https://blog.csdn.net/wqaiwsj/article/details/124684356\nhttps://m.wang1314.com/doc/webapp/topic/21352856.html\nhttps://www.cnblogs.com/dream98/p/10620877.html\nhttps://www.cnblogs.com/shoshana-kong/p/14010672.html\nhttps://news.sangniao.com/p/14930731\nhttps://www.lpsrmyy.com/tech/36159.html\n","date":"2022-11-16T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%88%86%E5%8C%BA%E8%A1%A8/","title":"分区表"},{"content":"BenchmarkSQL性能测试 何为BenchmarkSQL BenchmarkSQL是一款经典的开源数据库测试工具，其包含 TPCC 测试脚本，支持MySQL、Oracle 、EnterpriseDB、PostgreSQL以及SQL Server 等数据库的性能压力测试。模拟多种事务处理：新订单、支付操作、订单状态查询、发货、库存状态查询等，从而获得最终的压测值。\n安装及压测大致步骤 总结在linux安装BenchmarkSQL工具，并使用的步骤。压测工具安装的主机是单独的，即不是放在待压测的数据库服务器上，前者通过jdbc连接到后者进行压测。\n将BenchmarkSQL安装包传到主机上，并解压 额外需要安装ant和jdk 使用ant编译BenchmarkSQL 在待压测数据库中，创建压测用户 修改BenchmarkSQL配置文件props.xxx，将连接驱动、地址、用户配置正确。并设置所需的压测参数 执行压测数据导入命令 sh runDatabaseBuild.sh props.xxx 执行正式压测命令 ./runBenchmark.sh props.xxx。运行后可以看到实时的tpmC数值，运行结束后会显示平均的tpmC数值。 压测结果生成 执行删除压测数据命令 ./runDatabaseDestroy.sh props.xxx props配置文件解析 可参考：\nhttps://blog.csdn.net/weixin_47308871/article/details/123872130\nhttp://t.zoukankan.com/DFX339-p-13071848.html\nhttps://www.cnblogs.com/klb561/p/10513528.html\n1 2 3 4 5 6 7 8 9 10 11 Warehouses 代表仓库数,框中的数字表示该表将存放的记录条数，仓库数的调整在测试中能够体现数据库所能支持的数据规模的能力。每个 Warehouse 的数据量，其大小约为 76823.04KB，可以有小量的变化，因为测试过程中将会插入或删除现有记录。可以根据每个Warehouse的数据量，计算测试过程中的数据总量。 计算公式为：数据总量（KB）≈ Warehouse个数*76823.04KB 以10个Warehouse的数据量为例计算其数据总量大小约为：768230.4KB loadWorkers=10 //用于在数据库中初始化数据的加载进程数量，默认为4，实际使用过程中可以根据实际情况调整，加载速度会随worker数量的增加而有所提升 terminals=10 //终端数，即并发客户端数量，通常设置为CPU线程总数的2～6倍 runTxnsPerTerminal=10 //每个终端（terminal）运行的固定事务数量，例如：如果该值设置为10，意味着每个terminal运行10个事务，如果有32个终端，那整体运行320个事务后，测试结束。该参数配置为非0值时，下面的runMins参数必须设置为0 runMins=0 //要测试的整体时间，单位为分钟，如果runMins设置为60，那么测试持续1小时候结束。该值设置为非0值时，runTxnsPerTerminal参数必须设置为0。这两个参数不能同时设置为正整数，如果设置其中一个，另一个必须为0，主要区别是runMins定义时间长度来控制测试时间；runTxnsPerTerminal定义事务总数来控制时间。 测试指标 流量指标（Throughput,简称tpmC) 流量指标(Throughput,简称tpmC)：按照TPC组织的定义，流量指标描述了系统在执行支付操作、订单状态查询、发货和库存状态查询这4种交易的同时，每分钟可以处理多少个新订单交易。所有交易的响应时间必须满 足TPC-C测试规范的要求，且各种交易数量所占的比例也应该满足TPC-C测试规范的要求。在这种情况下，流量指标值越大说明系统的联机事务处理能力越高。\n性价比（Price/Performance,简称Price/tpmC)。 性价比（Price/Performance,简称Price/tpmc)：即测试系统的整体价格与流量指标的比值，在获得相同的tpmC值的情况下，价格越低越好。\n参考链接 https://zhuanlan.zhihu.com/p/396651167\nhttps://www.modb.pro/db/137349\nhttps://blog.csdn.net/ActionTech/article/details/123985424\nhttps://www.cnblogs.com/klb561/p/10513528.html\nhttps://wade-test.readthedocs.io/zh/latest/BenchmarkSQL5.0%20%E6%95%B0%E6%8D%AE%E5%BA%93%20TPC-C%20%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%20-%20%E7%91%BE%E7%86%99%E7%9A%84%E5%8D%9A%E5%AE%A2%20JL%20Blog/\n","date":"2022-11-15T00:00:00Z","permalink":"https://huangxindi.com/p/benchmarksql%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/","title":"BenchmarkSQL性能测试"},{"content":"Linux-磁盘扩容 看b站：https://www.bilibili.com/video/BV1NK411w7DL/?spm_id_from=333.337.search-card.all.click\u0026amp;vd_source=388c468b983bcf7b800d0e7cfb9fc719 的教学视频笔记\n⚠️此操作只适用于扩容已有目录size，不涉及挂载等前置操作。\n基础概念 lv (logical volume)：逻辑卷 vg (volume group)：卷组 pv (physical volume)：物理卷 pe (physical extent)：物理区域 目录是挂载在卷组vg上的，可以通过在vg中添加lv，扩大vg的容量，从而达到该目录的lvm磁盘扩容效果。\n扩容基本操作 查看当前挂载点 1 df -h 显示当前的lv 1 lvdisplay 显示当前的vg 1 vgdisplay 显示当前的pv 1 pvdisplay 查看磁盘内容 1 2 fdisk -l fdisk -l | grep \u0026#39;/dev\u0026#39; 目前有sda和sdb两块硬盘（其中sdb是新增硬盘，等待将其扩容到vg）\n创建新分区，格式化 1 2 fdisk /dev/sdb mkfs -t ext4 /dev/sdb1 创建pv 1 2 pvcreate /dev/sdb1 pvscan #查看所有的pv情况 扩容vg 1 2 3 vgextend ubuntu-vg /dev/sdb1 #ubuntu-vg为待扩容的vg名称 pvscan #查看扩容结果 vgdisplay #查看扩容结果 扩容lv 1 2 3 4 lvdisplay #查看要扩容的lv path和lv name lvextend -L +10G /dev/ubuntu-vg/ubuntu-lv #扩容10G resize2fs /dev/ubuntu-vg/ubuntu-lv df -h #查看扩容结果 刚才的操作是将vg中Free PE的10G移到可分配的Alloc PE中，从上图看已操作成功，即完成了扩容（真正可使用的vg空间+10G）。现在要将所有的Free PE扩容到Alloc PE中，可采用：\n1 2 lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv resize2fs /dev/ubuntu-vg/ubuntu-lv 值得注意的是：\nresize2fs命令是用来增大或者收缩未加载的“ext2/ext3/ext4”文件系统的大小。并不适用于xfs文件系统（会报错）。如果是xfs文件系统，则使用以下命令来达到同样的效果；\n1 xfs_growfs /dev/ubuntu-vg/ubuntu-lv 可参考： https://blog.csdn.net/MssGuo/article/details/120475752\n","date":"2022-11-15T00:00:00Z","permalink":"https://huangxindi.com/p/linux-%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/","title":"Linux-磁盘扩容"},{"content":"Java基础之Calendar日历类 Calendar类用于完成日期和时间字段的操作，它可以通过特定的方法设置和读取日期的特定部分，比如年、月、日、时、分和秒等。\n定义方法 Calendar类是一个抽象类，不可以被实例化。\n因此，需要使用静态方法getInstance()来得到一个Calendar对象\n1 Calendar calendar = Calendar.getInstance(); // 获取当前日期 获取方法 方法1 可获取字段包括：年、月、日、时、分、秒，需要使用Calendar类中定义的常量值来表示，如Calendar.YEAR用于表示年份。\n1 2 3 4 5 6 7 8 9 10 Calendar calendar = Calendar.getInstance(); int year = calendar.get(Calendar.YEAR); int month = calendar.get(Calendar.MONTH); int day = calendar.get(Calendar.DATE); // DATE表示日 int hour = calendar.get(Calendar.HOUR); int minute = calendar.get(Calendar.MINUTE); int second = calendar.get(Calendar.SECOND); System.out.println(year+\u0026#34;年\u0026#34;+(month+1)+\u0026#34;月\u0026#34;+day+\u0026#34;日\u0026#34;+hour+\u0026#34;时\u0026#34;+minute+\u0026#34;分\u0026#34;+second+\u0026#34;秒\u0026#34;); /****执行结果******/ 2022年10月25日7时4分37秒 需要特别注意：\n在使用Calendar.MONTH字段时，月份的起始值是从0开始的，而不是从1开始，因此要获取当前的月份需要在Calendar.MONTH的基础上加1。\n方法2 使用Calendar的getTime()方法，getTime()方法会返回一个表示Calendar时间值的Date对象\n1 2 3 4 Calendar calendar = Calendar.getInstance(); System.out.println(calendar.getTime()); /******执行结果*******/ Tue Oct 25 07:10:22 CST 2022 设置方法 使用set字段进行设置，有以下三种格式：\n方法声明 功能描述 void set(int field,int value) 为指定日历字段设置指定值 void set(int year,int month,int date) 设置Calendar对象的年、月、日三个字段的值 void set(int year.int month,int date,int hourOfDay,int minute,int second) 设置Calendar对象的年、月、日、时、分、秒六个字段的值 格式1:\n1 2 3 4 5 6 7 8 9 10 11 12 13 Calendar calendar = Calendar.getInstance(); System.out.println(\u0026#34;当前日期：\u0026#34;); System.out.println(calendar.getTime()); // 指定日历字段进行设置 calendar.set(Calendar.MONTH, 10); // 注意：实际上设置为10+1=11月 calendar.set(Calendar.DATE, 10); System.out.println(\u0026#34;设置方式1：\u0026#34;); System.out.println(calendar.getTime()); /******执行结果*******/ 当前日期： Tue Oct 25 07:19:46 CST 2022 设置方式1： Thu Nov 10 07:19:46 CST 2022 格式2：\n1 2 3 4 5 6 7 8 9 10 11 12 Calendar calendar = Calendar.getInstance(); System.out.println(\u0026#34;当前日期：\u0026#34;); System.out.println(calendar.getTime()); // 指定日历字段进行设置 calendar.set(2020,8,19); // 设置为2020年9月19日 System.out.println(\u0026#34;设置方式2：\u0026#34;); System.out.println(calendar.getTime()); /******执行结果*******/ 当前日期： Tue Oct 25 07:28:16 CST 2022 设置方式2： Sat Sep 19 07:28:16 CST 2020 格式3:\n1 2 3 4 5 6 7 8 9 10 11 12 Calendar calendar = Calendar.getInstance(); System.out.println(\u0026#34;当前日期：\u0026#34;); System.out.println(calendar.getTime()); // 指定日历字段进行设置 calendar.set(2020,8,19,20,19,18); // 设置年、月、日、时、分、秒 System.out.println(\u0026#34;设置方式3：\u0026#34;); System.out.println(calendar.getTime()); /******执行结果*******/ 当前日期： Tue Oct 25 07:29:58 CST 2022 设置方式3： Sat Sep 19 20:19:18 CST 2020 增减日期方法 使用方法void add(int field,int amount)，amount为正数表示增加，为负数表示减少。\n1 2 3 4 5 6 7 8 9 10 11 12 Calendar calendar = Calendar.getInstance(); System.out.println(\u0026#34;当前日期：\u0026#34;); System.out.println(calendar.getTime()); calendar.add(Calendar.DATE,1); // 日+1 calendar.add(Calendar.YEAR,-2); // 年-2 System.out.println(\u0026#34;日期增减后：\u0026#34;); System.out.println(calendar.getTime()); /******执行结果*******/ 当前日期： Tue Oct 25 07:33:35 CST 2022 日期增减后： Mon Oct 26 07:33:35 CST 2020 格式化输出日期方法 采用SimpleDateFormat类：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 SimpleDateFormat myFmt=new SimpleDateFormat(\u0026#34;yyyy年MM月dd日 HH时mm分ss秒\u0026#34;); SimpleDateFormat myFmt1=new SimpleDateFormat(\u0026#34;yy/MM/dd HH:mm\u0026#34;); SimpleDateFormat myFmt2=new SimpleDateFormat(\u0026#34;yyyy-MM-dd HH:mm:ss\u0026#34;);//等价于now.toLocaleString() SimpleDateFormat myFmt3=new SimpleDateFormat(\u0026#34;yyyy年MM月dd日 HH时mm分ss秒 E \u0026#34;); SimpleDateFormat myFmt4=new SimpleDateFormat( \u0026#34;一年中的第 D 天 一年中第w个星期 一月中第W个星期 在一天中k时 z时区\u0026#34;); Calendar calendar = Calendar.getInstance(); System.out.println(myFmt.format(calendar.getTime())); System.out.println(myFmt1.format(calendar.getTime())); System.out.println(myFmt2.format(calendar.getTime())); System.out.println(myFmt3.format(calendar.getTime())); System.out.println(myFmt4.format(calendar.getTime())); /******执行结果*******/ 2022年10月25日 07时42分34秒 22/10/25 07:42 2022-10-25 07:42:34 2022年10月25日 07时42分34秒 周二 一年中的第 298 天 一年中第44个星期 一月中第5个星期 在一天中7时 CST时区 参考链接 https://book.itheima.net/course/1265899443273850881/1265900797362954241/1265906995478913025\nhttps://blog.csdn.net/weixin_45732073/article/details/111501550\n","date":"2022-10-25T00:00:00Z","permalink":"https://huangxindi.com/p/java%E5%9F%BA%E7%A1%80%E4%B9%8Bcalendar%E6%97%A5%E5%8E%86%E7%B1%BB/","title":"Java基础之Calendar日历类"},{"content":"Linux-系统信息查看命令 整理一些关于linux的系统信息查看命令，无逻辑，纯自用。\n查看系统版本 1、查看发行版本（适用所有linux系统）\nlsb_release -a\n2、查看Linux内核版本\nuname -a 和 cat /proc/version\n1 2 3 4 5 6 7 8 9 10 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ lsb_release -a LSB Version: :core-4.1-amd64:core-4.1-noarch Distributor ID: CentOS Description: CentOS Linux release 7.8.2003 (Core) Release: 7.8.2003 Codename: Core [cindy@iZbp15qc4wmx335c268l5mZ ~]$ uname -a Linux iZbp15qc4wmx335c268l5mZ 3.10.0-1127.19.1.el7.x86_64 #1 SMP Tue Aug 25 17:23:54 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat /proc/version Linux version 3.10.0-1127.19.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) ) #1 SMP Tue Aug 25 17:23:54 UTC 2020 参考链接\nhttps://segmentfault.com/a/1190000039030863\n","date":"2022-09-18T00:00:00Z","permalink":"https://huangxindi.com/p/linux-%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4/","title":"Linux-系统信息查看命令"},{"content":"Linux-防火墙firewall Linux中有两种防火墙软件，ConterOS7.0以上使用的是firewall，ConterOS7.0以下使用的是iptables。ConterOS7.0以上默认使用firewalld防火墙，如果想换回iptables防火墙，可关闭firewalld并安装iptables。\n由于目前我的云主机是ConterOS7.0+，所以就先只学习firewall。\n基本命令 查看防火墙状态和规则 查看防火墙状态：\nsystemctl status firewalld\n1 2 3 4 5 6 7 8 9 10 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ systemctl status firewalld ● firewalld.service - firewalld - dynamic firewall daemon Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled) Active: active (running) since Thu 2022-04-28 21:54:51 CST; 4 months 21 days ago Docs: man:firewalld(1) Main PID: 560 (firewalld) CGroup: /system.slice/firewalld.service └─560 /usr/bin/python2 -Es /usr/sbin/firewalld --nofork --nopid Warning: Journal has been rotated since unit was started. Log output is incomplete or unavailable. 看到Active: active (running)字样，表示防火墙是启动状态\n查看防火墙规则：\nfirewall-cmd --list-all\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 [root@iZbp15qc4wmx335c268l5mZ ~]# firewall-cmd --list-all public (active) target: default icmp-block-inversion: no interfaces: eth0 sources: services: # 略 ports: # 略 protocols: masquerade: no forward-ports: source-ports: icmp-blocks: rich rules: 开启和关闭防火墙 开启：\nsystemctl start firewalld\n关闭：\nsystemctl stop firewalld\n设置开机启动：\nsystemctl enable firewalld\n禁用开机启动：\nsystemctl disable firewalld\n重启防火墙：\nfirewall-cmd --reload\n端口开放或关闭 查看开放的端口（root执行）：\nfirewall-cmd --list-ports\n1 2 [root@iZbp15qc4wmx335c268l5mZ ~]# firewall-cmd --list-ports # 结果略，查询结果格式： 端口号/协议名称（如20/tcp） 查询特定端口是否开放：\nfirewall-cmd --query-port=#port#/#protocol#\n1 2 3 # 例如查询3306端口是否开放 [root@iZbp15qc4wmx335c268l5mZ ~]# firewall-cmd --query-port=3306/tcp no 开放端口：\nirewall-cmd --zone=public --add-port=#port#/#protocol# --permanent\npermanent：表示设置为持久\n1 2 3 4 5 6 7 # 例如，开放mysql 3306端口 [root@iZbp15qc4wmx335c268l5mZ ~]# firewall-cmd --zone=public --add-port=3306/tcp --permanent success [root@iZbp15qc4wmx335c268l5mZ ~]# firewall-cmd --reload success [root@iZbp15qc4wmx335c268l5mZ ~]# firewall-cmd --query-port=3306/tcp yes 关闭端口：\nfirewall-cmd --zone=public --remove-port=#port#/#protocol# --permanent\n1 2 3 4 5 6 [root@iZbp15qc4wmx335c268l5mZ ~]# firewall-cmd --zone=public --remove-port=3306/tcp --permanent success [root@iZbp15qc4wmx335c268l5mZ ~]# firewall-cmd --reload success [root@iZbp15qc4wmx335c268l5mZ ~]# firewall-cmd --query-port=3306/tcp no 注意，修改配置后，需要重启防火墙方可生效\nMacos使用telnet 为了验证是否主机的某端口是否可正常access，可以在本机telnet到主机的特定端口。\nMac安装telnet 终端默认不支持telnet，所以需要先安装：\n1 brew install telnet 测试telnet已安装成功：\n1 2 Mac ~ % telnet telnet\u0026gt; 验证防火墙开放结果 开放3306端口前 1 2 3 4 Mac ~ % telnet 101.37.146.100 3306 Trying 101.37.146.100... telnet: connect to address 101.37.146.100: Connection refused telnet: Unable to connect to remote host 开放3306端口并重启防火墙服务后 1 2 3 4 5 Mac ~ % telnet 101.37.146.100 3306 Trying 101.37.146.100... Connected to 101.37.146.100. Escape character is \u0026#39;^]\u0026#39;. FHost \u0026#39;xxx\u0026#39;（隐去） is not allowed to connect to this MySQL serverConnection closed by foreign host. 看起来，是可以通的。说明防火墙开启3306端口服务生效了。\n题外话：但是上面还是有报错，那可能是因为mysql的设置，不允许远程访问。为了确保安全，就不设置root用户的远程访问授权了。执行以下命令，使其支持cindy用户远程访问。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 mysql\u0026gt; use mysql; Database changed mysql\u0026gt; select host from user where user=\u0026#39;cindy\u0026#39;; +-----------+ | host | +-----------+ | localhost | +-----------+ 1 row in set (0.00 sec) mysql\u0026gt; update user set host=\u0026#39;%\u0026#39; where user = \u0026#39;cindy\u0026#39;; Query OK, 1 row affected (0.01 sec) Rows matched: 1 Changed: 1 Warnings: 0 mysql\u0026gt; select host from user where user=\u0026#39;cindy\u0026#39;; +------+ | host | +------+ | % | +------+ 1 row in set (0.00 sec) mysql\u0026gt; FLUSH PRIVILEGES; Query OK, 0 rows affected (0.00 sec) 此时，用数据库连接工具使用cindy用户连接mysql数据库，已经可以正常远程连上了。\n参考链接 https://blog.csdn.net/wade3015/article/details/90725871\nhttps://juejin.cn/post/6844903865146425351\nhttps://blog.csdn.net/weixin_42521949/article/details/119362634\n","date":"2022-09-18T00:00:00Z","permalink":"https://huangxindi.com/p/linux-%E9%98%B2%E7%81%AB%E5%A2%99firewall/","title":"Linux-防火墙firewall"},{"content":"Maven之三：坐标、依赖范围、依赖冲突 学习网站：http://mvnbook.com/index.html\nMaven构件 构件：在Maven中，任何项目输出都可成为构件。\n构件标识（唯一标识，也称为唯一坐标） 除了各种依赖jar包，我们自己开发的项目，也是要通过坐标进行唯一标识的，这样才能才其它项目中进行依赖引用。\n坐标组成：\ngroupId：当前Maven构件隶属的组织名。groupId一般分为多段，通常情况下，第一段为域，第二段为公司名称。域又分为 org、com、cn 等，其中 org 为非营利组织，com 为商业组织，cn 表示中国。以 apache 开源社区的 tomcat 项目为例，这个项目的 groupId 是 org.apache，它的域是org（因为tomcat是非营利项目），公司名称是apache，artifactId是tomcat。如果你的公司是mycom，有一个项目为myapp，那么groupId就应该是com.mycom.myapp。groupId的表示方式与Java包名的表示方式类似。(必须) artifactId：项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称。(必须) version：当前版本。(必须) packaging：打包方式，比如 jar，war\u0026hellip;，默认是jar (可选) classifier：classifier通常用于区分从同一POM构建的具有不同内容的构件。它是可选的，它可以是任意的字符串，附加在版本号之后。classfier是不能直接定义的，需要结合插件使用。 标识和jar包名的对应关系（顺序拼接）：\n1 2 3 4 5 6 7 8 9 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;net.sf.json-lib\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;json-lib\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.2.2\u0026lt;/version\u0026gt; \u0026lt;classifier\u0026gt;jdk15\u0026lt;/classifier\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- 对应的jar包名: json-lib-2.2.2-jdk15.jar --\u0026gt; classifier标识使用场景 区分不同JDK版本所生成的jar包 1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;net.sf.json-lib\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;json-lib\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.2.2\u0026lt;/version\u0026gt; \u0026lt;classifier\u0026gt;jdk15\u0026lt;/classifier\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;net.sf.json-lib\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;json-lib\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.2.2\u0026lt;/version\u0026gt; \u0026lt;classifier\u0026gt;jdk13\u0026lt;/classifier\u0026gt; \u0026lt;/dependency\u0026gt; 以上配置信息实际上对应的 jar 包是 json-lib-2.2.2-jdk15.jar 和 json-lib-2.2.2-jdk13.jar。\n区分项目的不同组成部分，例如，源代码、javadoc、类文件等 1 2 3 4 5 6 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;net.sf.json-lib\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;json-lib\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.2.2\u0026lt;/version\u0026gt; \u0026lt;classifier\u0026gt;jdk15-javadoc\u0026lt;/classifier\u0026gt; \u0026lt;/dependency\u0026gt; 以上配置信息对应的是 json-lib-2.2.2-jdk15-javadoc.jar。\n注意\u0026lt;classifier\u0026gt;的位置：\n1 2 3 4 5 6 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;net.sf.json-lib\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;json-lib\u0026lt;/artifactId\u0026gt; \u0026lt;classifier\u0026gt;jdk15-javadoc\u0026lt;/classifier\u0026gt; \u0026lt;version\u0026gt;2.2.2\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; 对应的是 json-lib-jdk15-javadoc-2.2.2.jar，可能会出现找不到jar包的情况。\n构件特性 依赖传递，例如：项目依赖构件A，而构件A又依赖B，Maven会将A和B都视为项目的依赖。\n\u0026ldquo;短路优先\u0026rdquo; 原则，构件之间存在版本冲突时，Maven会依据 \u0026ldquo;短路优先\u0026rdquo; 原则加载构件。此外，我们也可以在 pom.xml 中，使用 \u0026lt;exclusions\u0026gt;\u0026lt;/exclusions\u0026gt;显式排除某个版本的依赖，以确保项目能够运行。\n（a）项目依赖构件A和B，构件A → C → D(version:1.0.0)，构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.1.0)。 （b）项目依赖构件A和B，构件A → D(version:1.0.0)， 构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.0.0)。 依赖范围，Maven在项目的构建过程中，会编译三套 ClassPath（ClassPath 是个逻辑概念，指定所依赖 Jar 的可见性），分别对应：编译期，运行期，测试期。而依赖范围就是为构件指定它可以作用于哪套 ClassPath\nMaven依赖范围 为何需要依赖范围：在不同的执行阶段，需要的依赖可能不同。限制依赖的使用范围（包括编译、测试、运行等操作），使其在其他阶段无法使用。\ncompile 编译依赖范围（默认），使用此依赖范围对于编译、测试、运行三种都有效，即在编译、测试和运行的时候都要使用该依赖 Jar 包。\ntest 测试依赖范围，从字面意思就可以知道此依赖范围只能用于测试，而在编译和运行项目时无法使用此类依赖，典型的是JUnit，它只用于编译测试代码和运行测试代码的时候才需要。\nprovided 此依赖范围，对于编译和测试有效，而对运行时无效。比如 servlet-api.jar 在 Tomcat 中已经提供了，我们只需要的是编译期提供而已。\nruntime 运行时依赖范围，对于测试和运行有效，但是在编译主代码时无效，典型的就是JDBC驱动实现。\nsystem 系统依赖范围，使用 system 范围的依赖时必须通过 systemPath 元素显示地指定依赖文件的路径，不依赖 Maven 仓库解析，所以可能会造成建构的不可移植。\n如：\n1 2 3 4 5 6 7 8 9 \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;javax.sql\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;jdbc-stdext\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.0\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;system\u0026lt;/scope\u0026gt; \u0026lt;systemPath\u0026gt;${java.home}/lib/rt.jar\u0026lt;/systemPath\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependencies\u0026gt; Maven依赖冲突 直接依赖冲突 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.mybatis\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mybatis\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.3.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.mybatis\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mybatis\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.5.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; 根据上列的依赖顺序，项目将使用3.5.0版本的 MyBatis Jar。\n传递依赖冲突 例如，项目 A 有这样的依赖关系：X-\u0026gt;Y-\u0026gt;Z（1.0）、X-\u0026gt;G-\u0026gt;Z（2.0），Z 是 X 的传递性依赖，但是两条依赖路径上有两个版本的 Z，那么哪个 Z 会被 Maven 解析使用呢？两个版本都被解析显然是不对的，因为那会造成依赖重复，因此必须选择一个。\nMaven 依赖优化 实际上 Maven 是比较智能的，它能够自动解析直接依赖和传递性依赖，根据预定义规则判断依赖范围的合理性，也可以对部分依赖进行适当调整来保证构件版本唯一。\n即使这样，还会有些情况使 Maven 发生误判，因此手工进行依赖优化还是相当有必要的。我们可以使用 maven-dependency-plugin 提供的三个目标来实现依赖分析：\n1 2 3 $ mvn dependency:list $ mvn dependency:tree $ mvn dependency:analyze 如若需更精细的分析结果，可以在命令后使用诸如以下参数：\n1 2 3 -Dverbose -Dincludes=\u0026lt;groupId\u0026gt;:\u0026lt;artifactId\u0026gt; Maven依赖冲突调解规则 四大原则：\n路径近者优先原则 1 2 3 A --\u0026gt; B --\u0026gt; X(1.1) // dist(A-\u0026gt;X) = 2 A --\u0026gt; C --\u0026gt; D --\u0026gt; X(1.0) // dist(A-\u0026gt;X) = 3 Maven可以按照第一原则自动调解依赖，结果是使用X(1.1)作为依赖。\n第一声明者优先原则 1 2 3 4 5 6 7 8 9 10 11 A --\u0026gt; B --\u0026gt; X(1.1) // dist(A-\u0026gt;X) = 2 A --\u0026gt; C --\u0026gt; X(1.0) // dist(A-\u0026gt;X) = 2 \u0026lt;!-- A pom.xml --\u0026gt; \u0026lt;dependencies\u0026gt; ... dependency B ... dependency C \u0026lt;/dependencies\u0026gt; 若冲突依赖的路径长度相同，那么第一原则就无法起作用了。当路径长度相同，则需要根据A直接依赖包在pom.xml文件中的先后顺序来判定使用那条依赖路径，如果次级模块相同则向下级模块推，直至可以判断先后位置为止。假设依赖B位置在依赖C之前，则最终会选择X(1.1)依赖。\n排除原则\n版本锁定原则\n覆盖原则：若相同类型但版本不同的依赖存在于同一个 pom 文件，依赖调解两大原则都不起作用，需要采用覆盖策略来调解依赖冲突，最终会引入最后一个声明的依赖。\n解决依赖冲突 冲突解决方式简单粗暴，直接在 pom.xml 文件中排除冲突依赖即可（使用 \u0026lt;exclusions\u0026gt;\u0026lt;/exclusions\u0026gt;显式排除）。\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.glassfish.jersey.containers\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;jersey-container-grizzly2-http\u0026lt;/artifactId\u0026gt; \u0026lt;!-- 剔除依赖 --\u0026gt; \u0026lt;exclusions\u0026gt; \u0026lt;exclusion\u0026gt; \u0026lt;groupId\u0026gt;org.glassfish.hk2.external\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;jakarta.inject\u0026lt;/artifactId\u0026gt; \u0026lt;/exclusion\u0026gt; ... \u0026lt;/exclusions\u0026gt; \u0026lt;/dependency\u0026gt; ","date":"2022-09-18T00:00:00Z","permalink":"https://huangxindi.com/p/maven%E4%B9%8B%E4%B8%89%E5%9D%90%E6%A0%87%E4%BE%9D%E8%B5%96%E8%8C%83%E5%9B%B4%E4%BE%9D%E8%B5%96%E5%86%B2%E7%AA%81/","title":"Maven之三：坐标、依赖范围、依赖冲突"},{"content":"小程序之三：官方开发文档学习（指南篇） 学习教程：https://developers.weixin.qq.com/miniprogram/dev/framework/\n知道了小程序大概是咋回事之后，是时候学习下小程序的基础语法规则了。微信官方有提供教程，故本文通过第一部分指南篇进行学习。\n","date":"2022-09-18T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B9%8B%E4%B8%89%E5%AE%98%E6%96%B9%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97%E7%AF%87/","title":"小程序之三：官方开发文档学习（指南篇）"},{"content":"小程序之二：HelloWorld 学习教程：https://www.ruanyifeng.com/blog/2020/10/wechat-miniprogram-tutorial-part-one.html\n跟着阮一峰老师的教程写个最简单的hello world：\n1、新建项目目录wechat-miniprogram-demo，进入项目目录\n2、在项目目录中，新建脚本app.js。这个脚本用于对整个小程序进行初始化。\n1 App({}); 上面代码中，App()由小程序原生提供，它是一个函数，表示新建一个小程序实例。它的参数是一个配置对象，用于设置小程序实例的行为属性。这个例子不需要任何配置，所以使用空对象即可。\n3、在项目目录中，新建配置文件app.json，记录项目的一些静态配置，采用 JSON 格式。至少必须有一个pages属性，指明小程序包含哪些页面。\n1 2 3 4 5 { \u0026#34;pages\u0026#34;: [ \u0026#34;pages/home/home\u0026#34; ] } 小程序会加载页面目录pages/home里面的home.js文件，.js后缀名可以省略，所以完整的加载路径为pages/home/home。home.js这个脚本的文件名也可以随便起，但是习惯上跟页面目录同名。\n除了pages属性，还可以加上window属性，定义最上方的导航栏的属性，如：\n1 2 3 4 5 6 7 8 9 10 { \u0026#34;pages\u0026#34;: [ \u0026#34;pages/home/home\u0026#34; ], \u0026#34;window\u0026#34;: { \u0026#34;navigationBarBackgroundColor\u0026#34;: \u0026#34;#ff0000\u0026#34;, \u0026#34;navigationBarTextStyle\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;小程序 Demo\u0026#34; } } 比如还有tabBar属性，定制底部选项卡的属性。\n4、新建脚本pages/home/home.js，内容如下：\n1 Page({}); 上面代码中，Page()由小程序原生提供，它是一个函数，用于初始化一个页面实例。它的参数是一个配置对象，用于设置当前页面的行为属性。这里是一个空对象，表示不设置任何属性。\n5、新建脚本pages/home/home.wxml，用于描述小程序的页面。\n1 hello world 6、一个最简单的项目就完成啦。现在导入小程序开发工具看看。\n也可以点击“预览”或“真机调试”，扫描二维码在手机上查看效果\n小程序项目基础结构 1 2 3 4 5 6 |- app.json |- app.js |- pages |- home |- home.wxml |- home.js 这个结构分成两层：描述整体程序的顶层 app 脚本，以及描述各个页面的 page 脚本。\n","date":"2022-09-18T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B9%8B%E4%BA%8Chelloworld/","title":"小程序之二：HelloWorld"},{"content":"Maven之一：基础 学习网站：http://mvnbook.com/index.html\n简介 Maven英文：专家、内行\nMaven：项目管理工具。可以对 Java 项目（后也可被应用于其他语言的管理）进行自动化的构建和依赖管理。\n项目构建：即软件项目生产的整个过程 文档和代码的生成 代码编译、测试、打包 打包好的代码进行分发和部署 依赖管理 我们需要做的就是在 POM 文件里指定依赖 Jar 包的名称、版本号，Maven 会自动下载，并递归地去下载依赖的进一步依赖 快照依赖：使用快照依赖可以确保本地仓库中的每一个 Build 版本都是最新的 组成：\n项目对象模型 POM(project object model) 项目生命周期 project lifecycle 依赖管理系统 dependency management system 各种插件 官网地址是：https://maven.apache.org/index.html\n下载和安装 官网下载地址是：https://maven.apache.org/download.cgi\nMac安装maven步骤：\n参考链接：https://blog.csdn.net/m0_67400973/article/details/123656632\n1、下载Binary zip archive（如目前的最新版 apache-maven-3.8.6-bin.zip），解压并重命名文件夹为maven（或者外面再套一层maven文件夹，不需要修改原有的文件夹名称）\n2、配置环境变量\n编辑文件 .bash_profile：\n1 2 3 4 vim ~/.bash_profile # 添加以下内容 export M2_HOME=/Users/huangxindi/study/maven #这里是你maven目录的路径 export PATH=$PATH:$M2_HOME/bin 编辑文件 .zshrc\n1 2 3 4 vim ~/.zshrc # 添加以下内容 export M2_HOME=/Users/huangxindi/study/maven #这里是你maven目录的路径 export PATH=$PATH:$M2_HOME/bin 3、使修改立即生效\n1 2 source ~/.bash_profile source ~/.zshrc 4、验证maven是否安装成功\n1 2 3 4 5 6 7 mvn -v # 输出类似以下结果，证明安装成功 Apache Maven 3.8.6 (84538c9988a25aec085021c365c560670ad80f63) Maven home: /Users/huangxindi/study/maven Java version: 17.0.4, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk-17.0.4.jdk/Contents/Home Default locale: zh_CN_#Hans, platform encoding: UTF-8 OS name: \u0026#34;mac os x\u0026#34;, version: \u0026#34;12.5.1\u0026#34;, arch: \u0026#34;aarch64\u0026#34;, family: \u0026#34;mac\u0026#34; Maven仓库 仓库类型 本地(local)仓库：Maven 从远程仓库下载下来的构件都存放在本地仓库中，项目可以从本地 Maven 仓库中获取自己所依赖的文件。 中央(central)仓库：Maven 中央仓库是由 Maven 社区提供的仓库，其中包含了大量常用的库。中央仓库是 Maven 官方提供的，可通过 http://search.maven.org/ 来访问。 远程(remote)私服：私服一般是指公司内部使用的仓库。运行 Maven 时，Maven 所需要的任何构件都是从本地仓库获取的，但是如果本地仓库没有，它就会尝试从远程仓库中下载构件到本地仓库。如果 Maven 无法连接到远程仓库，将无法正常构建项目。 本地仓库 本地仓库只有在第一次执行maven命令时才会被创建。运行 Maven 的时候，Maven 所需要的任何构件都是直接从本地仓库获取的。如果本地仓库没有，它会首先尝试从远程仓库下载构件至本地仓库，然后再使用本地仓库的构件。\n我们可以将本地仓库理解为 \u0026ldquo;缓存\u0026rdquo;，目的是存放 Jar 包。开发项目时首先会从本地仓库中获取 Jar 包，当无法获取指定 Jar 包的时候，本地仓库会从远程仓库（或中央仓库）中下载 Jar 包，并 \u0026ldquo;缓存\u0026rdquo; 到本地仓库中以备将来使用。这样一来，本地仓库会随着项目的积累越变越大。\n修改本地仓库路径（注意，前方犯蠢现场）\n可以通过修改 %M2_HOME%\\conf 目录中的 Maven 的 settings.xml 文件，将本地仓库定义成其他路径：\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: ${user.home}/.m2/repository \u0026lt;localRepository\u0026gt;/path/to/local/repo\u0026lt;/localRepository\u0026gt; --\u0026gt; # \u0026lt;localRepository\u0026gt; 参数值改为其他路径 \u0026lt;!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: ${user.home}/.m2/repository \u0026lt;localRepository\u0026gt;/Users/huangxindi/study/localRepository\u0026lt;/localRepository\u0026gt; --\u0026gt; 验证本地仓库的下载内容结果 mvn help:system：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # 从中心仓库下载到本地仓库的文件 mvn help:system # 但是执行刚开始提示download都正常，最后有如下报错 ... Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-metadata.xml Downloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/mojo/maven-metadata.xml (21 kB at 11 kB/s) [WARNING] Could not transfer metadata org.apache.maven.plugins/maven-metadata.xml from/to central (https://repo.maven.apache.org/maven2): transfer failed for https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-metadata.xml [WARNING] org.apache.maven.plugins/maven-metadata.xmlfailed to transfer from https://repo.maven.apache.org/maven2 during a previous attempt. This failure was cached in the local repository and resolution will not be reattempted until the update interval of central has elapsed or updates are forced. Original error: Could not transfer metadata org.apache.maven.plugins/maven-metadata.xml from/to central (https://repo.maven.apache.org/maven2): transfer failed for https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-metadata.xml [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 02:27 min [INFO] Finished at: 2022-09-17T20:55:04+08:00 [INFO] ------------------------------------------------------------------------ [ERROR] No plugin found for prefix \u0026#39;help\u0026#39; in the current project and in the plugin groups [org.apache.maven.plugins, org.codehaus.mojo] available from the repositories [local (/Users/huangxindi/.m2/repository), central (https://repo.maven.apache.org/maven2)] -\u0026gt; [Help 1] [ERROR] [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR] [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/NoPluginFoundForPrefixException 看了这篇博客（https://blog.csdn.net/weixin_44077693/article/details/125026771），也是相同的设置和问题，了解到settings.xml 文件的localRepository的设置不能和maven文件夹同级，改为设在maven文件夹里面就可以了。于是修改localRepository参数，并新建相关目录，然后重新执行下载。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026lt;!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: ${user.home}/.m2/repository \u0026lt;localRepository\u0026gt;/Users/huangxindi/study/maven/localRepository\u0026lt;/localRepository\u0026gt; --\u0026gt; # 重新执行插件下载 mvn help:system # 执行结果成功 ... [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 07:49 min [INFO] Finished at: 2022-09-17T21:17:17+08:00 [INFO] ------------------------------------------------------------------------ 可是，不知道为啥，我打开localRepository参数所在的目录，是空的。。。\n到默认目录去看，原来还是下载到了默认目录中，这。。。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 huangxindi@huangxindideiMac repository % pwd /Users/huangxindi/.m2/repository huangxindi@huangxindideiMac repository % ls -l total 0 drwxr-xr-x 3 huangxindi staff 96 9 17 21:11 aopalliance drwxr-xr-x 4 huangxindi staff 128 9 17 21:13 com drwxr-xr-x 3 huangxindi staff 96 9 17 21:11 commons-collections drwxr-xr-x 3 huangxindi staff 96 9 17 21:12 commons-io drwxr-xr-x 3 huangxindi staff 96 9 17 21:11 commons-lang drwxr-xr-x 3 huangxindi staff 96 9 17 21:13 io drwxr-xr-x 5 huangxindi staff 160 9 17 21:10 javax drwxr-xr-x 4 huangxindi staff 128 9 17 21:11 net drwxr-xr-x 9 huangxindi staff 288 9 17 21:13 org drwxr-xr-x 3 huangxindi staff 96 9 17 21:13 xmlpull 我是有看到以下这种说法，但是本地仓库的文件夹我明明有手动创建啊，为啥还是跑到默认路径去了。。\n本地仓库的文件目录，一定要自己手动创建，否则即使修改了settings.xml文件也会将下载的东西放到.m2目录下\n然后，我悲催地发现，原来我之前在settings.xml 文件的localRepository的设置语句，还处在注释状态（被包在\u0026lt;!-- --\u0026gt;中间），所以一直没生效修改。。。于是删除默认的本地仓库插件，重新修改路径，重新下载。。。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 \u0026lt;!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: ${user.home}/.m2/repository --\u0026gt; \u0026lt;localRepository\u0026gt;/Users/huangxindi/study/maven/localRepository\u0026lt;/localRepository\u0026gt; # 重新执行插件下载 mvn help:system # 执行结果成功 [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 11:13 min [INFO] Finished at: 2022-09-17T22:01:37+08:00 [INFO] ------------------------------------------------------------------------ # 终于在自定义的本地仓库文件夹中看到了下载的插件 huangxindi@huangxindideiMac localRepository % pwd /Users/huangxindi/study/maven/localRepository huangxindi@huangxindideiMac localRepository % ls -l total 0 drwxr-xr-x 3 huangxindi staff 96 9 17 21:55 aopalliance drwxr-xr-x 4 huangxindi staff 128 9 17 21:56 com drwxr-xr-x 3 huangxindi staff 96 9 17 21:55 commons-collections drwxr-xr-x 3 huangxindi staff 96 9 17 21:56 commons-io drwxr-xr-x 3 huangxindi staff 96 9 17 21:56 commons-lang drwxr-xr-x 3 huangxindi staff 96 9 17 21:56 io drwxr-xr-x 5 huangxindi staff 160 9 17 21:55 javax drwxr-xr-x 4 huangxindi staff 128 9 17 21:56 net drwxr-xr-x 9 huangxindi staff 288 9 17 21:56 org drwxr-xr-x 3 huangxindi staff 96 9 17 21:56 xmlpull 中央仓库 中央仓库由 Maven 社区管理，不需要配置，但需要通过网络才能访问。\n在maven的安装目录下，有此插件/lib/maven-model-builder-${version}.jar，打开可以找到超级POM（\\org\\apache\\maven\\model\\pom-4.0.0.xml）。它是所有Maven POM的父POM，所有Maven项目继承该配置。\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;repositories\u0026gt; \u0026lt;repository\u0026gt; \u0026lt;id\u0026gt;central\u0026lt;/id\u0026gt; \u0026lt;name\u0026gt;Central Repository\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;https://repo.maven.apache.org/maven2\u0026lt;/url\u0026gt; # 此处配置中央库地址 \u0026lt;layout\u0026gt;default\u0026lt;/layout\u0026gt; \u0026lt;snapshots\u0026gt; \u0026lt;enabled\u0026gt;false\u0026lt;/enabled\u0026gt; \u0026lt;/snapshots\u0026gt; \u0026lt;/repository\u0026gt; \u0026lt;/repositories\u0026gt; 主要中央仓库地址：\n1、阿里中央仓库\n1 2 3 4 5 \u0026lt;repository\u0026gt; \u0026lt;id\u0026gt;alimaven\u0026lt;/id\u0026gt; \u0026lt;name\u0026gt;aliyun maven\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://maven.aliyun.com/nexus/content/groups/public/\u0026lt;/url\u0026gt; \u0026lt;/repository\u0026gt; 2、maven.apache.org 中央仓库\n1 2 3 4 5 \u0026lt;repository\u0026gt; \u0026lt;id\u0026gt;central-repos\u0026lt;/id\u0026gt; \u0026lt;name\u0026gt;Central Repository\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;https://repo.maven.apache.org/maven2\u0026lt;/url\u0026gt; \u0026lt;/repository\u0026gt; 3、spring.io 中央仓库\n1 2 3 4 5 \u0026lt;repository\u0026gt; \u0026lt;id\u0026gt;springsource-repos\u0026lt;/id\u0026gt; \u0026lt;name\u0026gt;SpringSource Repository\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://repo.spring.io/release/\u0026lt;/url\u0026gt; \u0026lt;/repository\u0026gt; 远程私服仓库 如果 Maven 在中央仓库中也找不到依赖的文件，它会停止构建过程并输出错误信息到控制台。为避免这种情况，Maven 提供了远程仓库的概念，它是开发人员自己定制仓库，包含了所需要的代码库或者其他工程中用到的 Jar 文件。\nMaven远程库也是位于网络上的存储库。例如一个公司可能有很多共享的jar包文件，就可以搭建一个公司内部的远程库，供众多开发人员使用。中央库可以认为是一个特殊的远程库。\n依赖搜索顺序 本地 -\u0026gt; 找不到的话，找中央仓库 -\u0026gt; 中央仓库找不到，是否配置远程仓库 -\u0026gt; 无配置远程，则抛错（无法找到依赖的文件） -\u0026gt; 有配置远程，则找远程仓库 -\u0026gt; 若找不到，也抛错（无法找到依赖的文件）\n若中途从中央或远程仓库找到依赖包，则下载到本地仓库供后续使用\n参考链接 http://mvnbook.com/index.html\n","date":"2022-09-17T00:00:00Z","permalink":"https://huangxindi.com/p/maven%E4%B9%8B%E4%B8%80%E5%9F%BA%E7%A1%80/","title":"Maven之一：基础"},{"content":"Maven之二：创建Maven项目 学习网站：http://mvnbook.com/index.html\nMaven项目创建 约定标准目录结构 目录 作用 ${basedir} 存放 pom.xml 和所有子目录 ${basedir}/src/main/java 项目的 java 源代码所在的目录 ${basedir}/src/main/resources 项目的资源文件所在的目录，例如：propert文件 ${basedir}/src/test/java 测试代码所在的目录，例如：JUnit 代码 ${basedir}/src/test/resources 测试相关的资源文件所在的目录 ${basedir}/src/main/webapp/WEB-INF web 应用文件目录，web 项目的信息，比如存放 web.xml、本地图片、jsp 视图页面 ${basedir}/target 打包输出目录 ${basedir}/target/classes 编译输出目录 ${basedir}/target/test-classes 测试编译输出目录 IDEA创建Maven项目 可参考：https://blog.csdn.net/hgnuxc_1993/article/details/125427590\n注意点：\n需要进入设置，编辑maven配置为自己下载的maven路径 修改自己的/conf/setting.xml文件，将maven源改为阿里云，不然后面下载依赖会慢\n可参考 https://zhuanlan.zhihu.com/p/434179938 解决下一次打开IDEA，之前设置的maven路径参数被复原的问题（即，要设置preferences for new projects）\n可参考 https://blog.csdn.net/m0_49286452/article/details/124729379 创建maven项目\n点击创建后，需要一定时间的构建。构建结束（BUILD SUCCESS），查看目录是否正常\n相比标准目录结构，自动创建后缺少的/main/resources和/test/resources就自己手动创建吧。\n","date":"2022-09-17T00:00:00Z","permalink":"https://huangxindi.com/p/maven%E4%B9%8B%E4%BA%8C%E5%88%9B%E5%BB%BAmaven%E9%A1%B9%E7%9B%AE/","title":"Maven之二：创建Maven项目"},{"content":"小程序之一：开始 开发个小程序玩玩。。虽然没想好用来做啥，但是就想拥有一个自己的小程序，搭起来再说吧！\n推荐新手先阅读阮一峰老师的微信小程序入门教程：\nhttps://www.ruanyifeng.com/blog/2020/10/wechat-miniprogram-tutorial-part-one.html\nhttps://www.ruanyifeng.com/blog/2020/10/wechat-miniprogram-tutorial-part-two.html\nhttps://www.ruanyifeng.com/blog/2020/10/wechat-miniprogram-tutorial-part-three.html\nhttp://www.ruanyifeng.com/blog/2020/11/wechat-miniprogram-tutorial-part-four.html\n申请 https://developers.weixin.qq.com/community/business/doc/000200772f81508894e94ec965180d\n申请了个人主体的认证（个人会有些限制，比如无法使用某些接口），将自己设为管理员，填写小程序名字和头像，设置域名，获取开发者ID和密钥（后面会用到）\u0026hellip;\n下载开发工具 下载官方提供的小程序开发工具（https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html）。\n这个工具是必需的，因为只有它才能运行和调试小程序源码。\n很可爱的图标👆\n软件有两种开发模式：\n云开发：会提供完整的项目脚手架 导入项目：从零开始导入自己写的项目（推荐这个） 知识储备 首先，WHAT IS 小程序？\n小程序可以视为只能用微信打开和浏览的网站。 小程序和网页的技术模型是一样的，用到的 JavaScript 语言和 CSS 样式也是一样的，只是网页的 HTML 标签被稍微修改成了 WXML 标签。所以，小程序页面本质上就是网页。\n小程序的特殊之处在于，虽然是网页，但是它不支持浏览器，所有浏览器的 API 都不能使用，只能用微信提供的 API。这也是为什么小程序只能用微信打开的原因，因为底层全变了。\n—— https://www.ruanyifeng.com/blog/2020/10/wechat-miniprogram-tutorial-part-one.html\n所以，目前看来，基础的知识储备就是JS和CSS，再加上微信提供的语法规则，就可以开发一个简易版的小程序了。\n","date":"2022-09-04T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B9%8B%E4%B8%80%E5%BC%80%E5%A7%8B/","title":"小程序之一：开始"},{"content":"数据库测试扫盲篇 最近参与数据库POC测试，鉴于对数据库还不够了解，决定先以一些测试案例为蓝本，自我扫盲下。\n表空间以及表空间管理 1、什么是表空间（TABLESPACE）\n表空间是一种存储结构，它包含表、索引、大对象和长型数据。\n以ORACLE为例，一个ORACLE数据库能够有一个或多个表空间，而一个表空间则对应着一个或多个物理的数据库文件，但一个数据库文件只能与一个表空间相联系。表空间是ORACLE数据库恢复的最小单位，容纳着许多数据库实体，如表、视图、索引、聚簇、回退段和临时段等。\n2、什么是表空间管理\n表空间管理包括：如对表空间的创建、修改、删除、扩容\n参考链接\nhttps://www.ibm.com/docs/zh/db2/10.5?topic=databases-table-spaces\nhttps://www.modb.pro/db/335060\nhttps://www.cnblogs.com/kerrycode/p/3418694.html\nhttps://blog.51cto.com/u_14056283/3076029\n数据库对象 一个数据库对象是 数据库中用于存储或引用数据的任何已定义对象。我们从 create 命令所做的任何事情都称为数据库对象。它可以用来保存和操作数据。\n主要的数据库对象包含：触发器（Trigger）、表（Table）、视图（View）、存储过程（StoredProcedure）、索引（Index）、缺省值（Default）、图表（Diagram）、用户（User）、规则（Rule）等几类\n参考链接\nhttps://www.jianshu.com/p/ec63e6937e7c\nhttps://zh-cn.myubi.tv/21731-what-is-a-database-object\n数据库约束 概念：数据库约束是防止非法记录的规则，约束保存在数据字典(data dictionary)中， 约束可以被定义在列级或者表级。\n类型：总的来说有五种：唯一性和主键约束、外键约束、检查约束、空值约束、默认值约束。\n有五大关键词，UNIQUE和Primary Key, Foreign Key, CHECK, NOT NULL, DEFAULT\n参考链接\nhttps://developer.aliyun.com/article/91298\nhttps://www.cnblogs.com/netsql/archive/2010/05/06/1729162.html\n视图 视图是从一个或几个基本表（或视图）导出的表。 它与基本表不同，是一个虚表。数据库只存放视图的定义，而不存放视图对应的数据，这些数据仍存放在原来的基本表中。 所以基本表中的数据发生变化，从视图中查询出的数据也就随之改变了。 视图只供查询，数据不可更改。\n参考链接\nhttps://zhuanlan.zhihu.com/p/372569011\n触发器(trigger) 触发器是与表有关的数据库对象，指的是在insert\\update\\delete操作之前或者之后，能够触发并执行触发器中定义的SQL语句集合。触发器的这种特性可以使得应用在数据库端确保数据的完整性以及日志记录，数据校验等操作。并且可以使用OLD和NEW来引用触发器中发生变化的记录内容。\n触发器的分类：\nDML触发器：DML（Data Manipulation Language）触发器是当数据库服务器中发生数据操作语言事件时执行的存储过程。DML触发器又分为两类：After触发器和Instead Of触发器\nDDL触发器：DDL触发器是在响应数据定义语言（Data Definition Language）事件时执行的存储过程。DDL触发器一般用于执行数据库中管理任务。如审核和规范数据库操作、防止数据库表结构被修改等。\n例如：\n1 2 3 4 5 6 7 8 create trigger trigger_name before/after insert/update/delete on table_name [for each row] --- 行级触发器 begin trigger_stmt; end; 参考链接\nhttps://zhuanlan.zhihu.com/p/133291633\nhttps://www.cnblogs.com/liushuijinger/archive/2012/06/10/2543941.html\n存储过程(procedure)与函数(function) 存储过程和函数是事先经过编译并存储在数据库中的一段sql语句集合，调用存储过程和函数可以简化应用开发工作，提高数据库处理的效率。\n函数和存储过程的区别：\n1.函数有且只有一个返回值，而存储过程不能有返回值。　2.函数只能有输入参数，而存储过程可以有 in,out,inout多个类型参数。\n3.存储过程中的语句功能更丰富，实现更复杂的业务逻辑，而函数中通常不会使用 insert,update,delete等语句，只是完成查询的工作，受输入参数并返回一个结果，功能针对性比较强。\n4.存储过程一般是作为一个独立的部分来执行（call调用）。而函数可以作为查询语句的一个部分来调用。\n例如：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 --结束符号默认为 ; ，存储过程内使用 ; 结束一个语句 --在命令行模式下，为了便于区分可以自定义一个结束符号 $ delimiter $ create procedure proce_user01() begin insert into user(`id`,`username`, `password`) values(3, \u0026#39;王五\u0026#39;, \u0026#39;wangwu\u0026#39;); end $ delimiter $ create function fun_user(uname varchar(255), pass varchar(255)) returns int begin -- 声明一个局部变量 declare result int default 0; insert into `user`(`username`, `password`) values(uname, pass); -- 给变量赋值 set result = 1; return result; end $ 参考链接\nhttps://blog.51cto.com/u_15162069/2761745\nhttp://static.kancloud.cn/king_om/mysql/2679517\n事务(transaction) 把多条语句作为一个整体进行操作的功能，被称为数据库事务。数据库事务可以确保该事务范围内的所有操作都可以全部成功或者全部失败。如果事务失败，那么效果就和没有执行这些SQL一样，不会对数据库数据有任何改动。\n可见，数据库事务具有ACID这4个特性：\nA：Atomic，原子性，将所有SQL作为原子工作单元执行，要么全部执行，要么全部不执行； C：Consistent，一致性，事务完成后，所有数据的状态都是一致的，即A账户只要减去了100，B账户则必定加上了100； I：Isolation，隔离性，如果有多个事务并发执行，每个事务作出的修改必须与其他事务隔离； D：Duration，持久性，即事务完成后，对数据库数据的修改被持久化存储。 对于单条SQL语句，数据库系统自动将其作为一个事务执行，这种事务被称为隐式事务。\n1 2 3 4 # 关键词 BEGIN COMMIT ROLLBACK 隔离性（隔离级别）\n对于两个并发执行的事务，如果涉及到操作同一条记录的时候，可能会发生问题。因为并发操作会带来数据的不一致性，包括脏读、不可重复读、幻读等。数据库系统提供了隔离级别来让我们有针对性地选择事务的隔离级别，避免数据不一致的问题。\nIsolation Level 脏读（Dirty Read） 不可重复读（Non Repeatable Read） 幻读（Phantom Read） Read Uncommitted（读取未提交内容） Yes Yes Yes Read Committed（读取提交内容） - Yes Yes Repeatable Read（可重读） - - Yes Serializable（可串行化） - - - 参考链接\nhttps://www.huaweicloud.com/zhishi/edit-582116.html\nhttps://www.liaoxuefeng.com/wiki/1177760294764384/1179611198786848\nhttps://www.cnblogs.com/fjdingsd/p/5273008.html\nhttps://cloud.tencent.com/developer/article/1816543\n数据库审计 数据库审计是对数据库访问行为进行监管的系统，一般采用旁路部署的方式，通过镜像或探针的方式采集所有数据库的访问流量，并基于SQL语法、语义的解析技术，记录下数据库的所有访问和操作行为，例如访问数据的用户（IP、账号、时间），操作（增、删、改、查）、对象（表、字段）等。数据库审计系统的主要价值有两点，一是：在发生数据库安全事件（例如数据篡改、泄露）后为事件的追责定责提供依据；二是，针对数据库操作的风险行为进行时时告警。\n参考链接\nhttps://www.huaweicloud.com/zhishi/dbss10.html\n数据库空间回收 背景：表中的数据被删除或更新后（UPDATE/DELETE），物理存储层面并不会直接删除数据，而是标记这些数据不可见，所以会在数据页中留下很多“空洞”，在读取数据时，这些“空洞”会随数据页一起加载，拖慢数据扫描速度，需要定期回收删除的空间。\n1 VACUUM [FULL] [FREEZE] [VERBOSE] [table]; 例：GaussDB(DWS) 数据仓库数据回收 https://support.huaweicloud.com/dws_faq/dws_03_0033.html\n参考链接\nhttps://help.aliyun.com/apsara/agile-dbstack/v_1_1_1_20220307/rds/development-guide-4/space-reclamation.html\n驱动加载 1、数据库驱动\n数据库驱动是应用程序和数据库存储之间的一种接口，数据库厂商为了某一种开发语言环境（比如Java，C）能够实现数据库调用而开发的类似翻译员功能的程序，将复杂的数据库操作与通信抽象成为了当前开发语言的访问接口。\n2、驱动加载\n1 2 3 4 5 6 7 //由于驱动的本质是一个类，所以加载驱动的过程其实就是加载类的过程，下面是常用的加载数据库驱动的具体代码： //加载Oracle数据库驱动 Class.forName(“oracle.jdbc.driver.OracleDriver”); //加载SQL Server数据库驱动 Class.forName(“com.microsoft.sqlserver.jdbc.SQLServerDriver”); //加载MySQL 数据库驱动 Class.forName(“com.mysql.jdbc.Driver”); 参考链接\nhttps://www.huaweicloud.com/zhishi/edu-arc-sjkkf01.html\nhttps://www.modb.pro/db/107267\nGUC参数 GUC: Grand Unified Configuration 指的是postgreSQL数据库的一种对数据库变量进行设置对数据库进行控制的机制。通常理解是对postgresql.conf文件中变量进行修改，或通过set命令对参数进行设置。但实际上GUC变量的种类，设置方法要更加复杂多样。在guc.h和guc.c中可以看到GUC变量的详细实现。\n例如：GaussDB(DWS)的设置GUC参数 https://support.huaweicloud.com/devg-dws/dws_04_0885.html\n参考链接\nhttps://www.csdn.net/tags/NtzaYgysMzk1MTUtYmxvZwO0O0OO0O0O.html\n逻辑复制(Logical Replication) 逻辑复制（Logical Replication），是一种根据数据对象的 复制标识（Replica Identity）（通常是主键）复制数据对象及其变化的方法。\n逻辑复制 这个术语与 物理复制相对应，物理复制使用精确的块地址与逐字节复制，而逻辑复制则允许对复制过程进行精细的控制。\n逻辑复制基于 发布（Publication） 与 订阅（Subscription）模型：\n一个 发布者（Publisher） 上可以有多个发布，一个 订阅者（Subscriber） 上可以有多个 订阅 。 一个发布可被多个订阅者订阅，一个订阅只能订阅一个发布者，但可订阅同发布者上的多个不同发布。 针对一张表的逻辑复制通常是这样的：订阅者获取发布者数据库上的一个快照，并拷贝表中的存量数据。一旦完成数据拷贝，发布者上的变更（增删改清）就会实时发送到订阅者上。订阅者会按照相同的顺序应用这些变更，因此可以保证逻辑复制的事务一致性。这种方式有时候又称为 事务性复制（transactional replication）。\n参考链接\nhttps://pigsty.cc/zh/blog/2021/03/03/postgres%E9%80%BB%E8%BE%91%E5%A4%8D%E5%88%B6%E8%AF%A6%E8%A7%A3/\nPostgreSQL PostgreSQL 是一款高级的企业级开源关系数据库，支持 SQL（关系型）和 JSON（非关系型）查询。它是一个高度稳定的数据库管理系统，依托 20 多年的社区发展，造就了其高水平的故障恢复能力、完整性和正确性。\n中文手册：http://www.postgres.cn/docs/9.3/intro-whatis.html\n参考链接\nhttps://aws.amazon.com/cn/rds/postgresql/what-is-postgresql/?tag=fsou0c-20\n数据库备份与恢复 备份分类：\n物理备份 这是数据库文件实物的副本，例如数据、控制文件、日志文件和已归档的重做日志。它是将数据库信息存储在其他位置的文件的副本，构成数据库恢复机制的基础\n逻辑备份 它包含从数据库中提取的逻辑数据（由表、流程、视图和函数等构成）。但是，不建议单独保留逻辑备份，因为它只提供结构信息，用处不大。\n备份类型：\n完全备份 增量备份：仅复制自上次备份操作以来发生更改的数据 差异备份：复制自上次完全备份以来发生更改的所有数据 备份方法分类（根据是否需要数据库离线）：\n热备（online）：数据库运行过程中直接备份 逻辑备份：“在 MySQL 数据库中，逻辑备份是指备份出的文件内容是可读的，一般是文本内容。内容一般是由一条条 SQL 语句，或者是表内实际数据组成。如 mysqldump 和 SELECT * INTO OUTFILE 的方法。这类方法的好处是可以观察导出文件的内容，一般适用于数据库的升级、迁移等工作。但其缺点是恢复的时间较长。” 裸文件备份：“复制数据库的物理文件，既可以在数据库运行中进行复制（如 ibbackup、xtrabackup 这类工具），也可以在数据库停止运行时直接复制数据文件。这类备份的恢复时间往往比逻辑备份短很多。” 冷备（offline）：必须在数据库停止的情况下进行备份。这种备份最为简单，一般只需要复制相关的数据库物理文件即可。 温备：也是在数据库运行中备份，但是会对数据库操作有所影响。备份时仅支持读操作，不支持写操作。 一般情况下，我们需要备份的数据分为以下几种：\n表数据 二进制日志、InnoDB 事务日志 代码（存储过程、存储函数、触发器、事件调度器） 服务器配置文件 并发备份\n参考链接\nhttps://www.veritas.com/zh/cn/information-center/data-backup-and-recovery\nhttp://c.biancheng.net/view/8136.html\n","date":"2022-08-31T00:00:00Z","permalink":"https://huangxindi.com/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B5%8B%E8%AF%95%E6%89%AB%E7%9B%B2%E7%AF%87/","title":"数据库测试扫盲篇"},{"content":"win10常用快捷键 【个人向】由于工作机是win10，故整理一些个人比较常用快捷键。还有很多好用的快捷键等待学习～～\nWin+* Win+L 快速锁屏 Win+D 显示桌面 Win+I 打开设置界面 Win+E 打开我的电脑 Win+M 最小化所有窗口 Win+Shift+M 还原所有窗口 Win+R 打开运行窗口 Win+Tab 多任务视图 Win+上/下 缩放界面 Win+左/右 界面左/右停靠（分屏） Win+1/2/3/\u0026hellip; 打开任务栏的第1/2/3/\u0026hellip;个软件界面 Win+V 显示历史复制内容并选择粘贴 Win+W 调出工作区，包括白板等功能 Win+Tab 创建虚拟桌面 Win+Ctrl+←\\→，快速切换虚拟桌面\\ Win+“+/-” 放大/缩小屏幕 Ctrl+* Ctrl+Shift+Esc 打开任务管理器 Ctrl+Shift+N 新建文件夹并命名 Ctrl+W 关闭当前界面 Ctrl+Y 恢复上一次的撤销（Ctrl+Z） Ctrl+Shift+T 恢复被关闭的网页 Ctrl+Shift+F 输入法切换为繁体 Alt+* Alt+Tab 多窗口快速切换 Alt+Enter(或鼠标双击) 快速查看文件属性 Alt+Space+C 关闭窗口 Alt+Space+N 最小化窗口 Alt+Space+X 最大化窗口 Shift+* Shift+Delete 永久删除文件 其他 Backspace 资源管理器中是返回上一个打开的目录 快捷键设置技巧 一键打开某软件 右键软件（需要先创建为快捷方式） - 属性 - 快捷方式 - 修改快捷键值即可 （默认是Ctrl+Alt+自定义格式）\n参考链接 https://www.zhihu.com/question/37579205/answer/2297881350\nhttps://www.zhihu.com/question/37579205/answer/2297881350\nhttps://zhuanlan.zhihu.com/p/195110943\n官网快捷键介绍： https://support.microsoft.com/zh-cn/windows/windows-%E7%9A%84%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F-dcc61a57-8ff0-cffe-9796-cb9706c75eec#WindowsVersion=Windows_10\n","date":"2022-08-14T00:00:00Z","permalink":"https://huangxindi.com/p/win10%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/","title":"win10常用快捷键"},{"content":"Linux-安装Oracle数据库 安装【失败】，可能因为我的服务器空间不足。。。罢了，先放着吧\n背景：我的阿里云linux服务器（CentOS 7.8 64位）之前在宝塔已懒人安装了mysql，现需要在服务器上学习Oracle，所以先记录安装过程（静默安装）。\n正式安装之前，可以先检测下是否已有安装Oracle程序。若已有安装oracle，应能看到oracle进程，且一般都会有oracle用户。我在本机上验证如下，是没有安装过的，\n1 2 3 4 5 6 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ ps -ef | grep oracle cindy 26709 26624 0 20:22 pts/0 00:00:00 grep --color=auto oracle [cindy@iZbp15qc4wmx335c268l5mZ ~]$ id oracle id: oracle: no such user [cindy@iZbp15qc4wmx335c268l5mZ ~]$ rpm -qa | grep oracle # 查看以rpm包安装的软件列表 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ yum list installed | grep oracle # 查看以yum安装的软件列表 步骤概览 参考 http://www.javashuo.com/article/p-sbcnrnqx-gr.html\n安装swap分区 安装oracle依赖包 建立用户/用户组 在外面下载oralce包并传到linux oracle安装 安装swap分区 oracle安装需要swap分区，所以先检查下是否已有swap分区。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 [root@iZbp15qc4wmx335c268l5mZ ~]# free total used free shared buff/cache available Mem: 964136 425288 172940 304 365908 366360 Swap: 1049596 303616 745980 [root@iZbp15qc4wmx335c268l5mZ ~]# cat /etc/fstab # # /etc/fstab # Created by anaconda on Mon Sep 14 07:14:22 2020 # # Accessible filesystems, by reference, are maintained under \u0026#39;/dev/disk\u0026#39; # See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info # UUID=9f2d3e15-a78a-4f3d-8385-0165b4b67864 / ext4 defaults 1 1 /www/swap swap swap defaults 0 0 看起来是已有的，如果没有，可参考链接的方式创建。\n安装依赖包 1 2 3 4 5 6 7 8 9 10 11 12 13 14 [root@iZbp15qc4wmx335c268l5mZ ~]# yum -y install gcc gcc-c++ make binutils compat-libstdc++-33 glibc glibc-devel libaio libaio-devel libgcc libstdc++ libstdc++-devel unixODBC unixODBC-devel sysstat ksh ... # 安装细节省略 Installed: compat-libstdc++-33.x86_64 0:3.2.3-72.el7 ksh.x86_64 0:20120801-143.el7_9 unixODBC.x86_64 0:2.3.1-14.el7 unixODBC-devel.x86_64 0:2.3.1-14.el7 Updated: binutils.x86_64 0:2.27-44.base.el7_9.1 glibc.x86_64 0:2.17-326.el7_9 glibc-devel.x86_64 0:2.17-326.el7_9 Dependency Updated: glibc.i686 0:2.17-326.el7_9 glibc-common.x86_64 0:2.17-326.el7_9 glibc-headers.x86_64 0:2.17-326.el7_9 nscd.x86_64 0:2.17-326.el7_9 Complete! root用户执行。最后会列出Installed，Updated，Dependency Updated。\n创建用户/组 首先看下已有的用户和组，以免出现重复。没有与要创建的用户/组重名的，so放心安装。\n1 2 cat /etc/passwd # 查看所有用户 cat /etc/group # 查看所有组 创建用户组oinstall,dba，创建用户oracle\n1 2 3 4 5 6 7 8 9 10 [root@iZbp15qc4wmx335c268l5mZ ~]# groupadd -g 200 oinstall # 组id设为200 [root@iZbp15qc4wmx335c268l5mZ ~]# groupadd -g 201 dba [root@iZbp15qc4wmx335c268l5mZ ~]# useradd -u 440 -g oinstall -G dba oracle # 创建oracle用户，指定uid为400 [root@iZbp15qc4wmx335c268l5mZ ~]# passwd oracle # 设置oracle密码 Changing password for user oracle. New password: Retype new password: passwd: all authentication tokens updated successfully. [root@iZbp15qc4wmx335c268l5mZ ~]# id oracle uid=440(oracle) gid=200(oinstall) groups=200(oinstall),201(dba) 关闭SELINUX oracle是需要关闭SELINUX的，至于为什么要关闭，或者说能否不要关闭，只需合适的设置即可，这部分后面有空了再说。先查看目前是否是关闭的（以下给了三种方法）：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 [root@iZbp15qc4wmx335c268l5mZ ~]# cat /etc/selinux/config # This file controls the state of SELinux on the system. # SELINUX= can take one of these three values: # enforcing - SELinux security policy is enforced. # permissive - SELinux prints warnings instead of enforcing. # disabled - No SELinux policy is loaded. SELINUX=disabled # SELINUXTYPE= can take one of three values: # targeted - Targeted processes are protected, # minimum - Modification of targeted policy. Only selected processes are protected. # mls - Multi Level Security protection. SELINUXTYPE=targeted [root@iZbp15qc4wmx335c268l5mZ ~]# /usr/sbin/sestatus -v SELinux status: disabled [root@iZbp15qc4wmx335c268l5mZ ~]# getenforce Disabled 若当前是开启的，则需要关闭\n1 setenforce 0 下载oralce包并解压 官网只能看到最新版的下载包，我想安装的11g版本的不好找。。。于是找到网盘资源( https://blog.csdn.net/m0_53166211/article/details/121524069 )来下载\n安装oracle的目录磁盘空间要充足，否则会安装oracle失败（大于4G）\n例如，可以新建目录/app/oracle并把压缩包放入并解压\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 [root@iZbp15qc4wmx335c268l5mZ home]# ls -l /app/oracle total 2295600 -rw-r--r-- 1 root root 1239269270 Aug 6 11:34 linux.x64_11gR2_database_1of2.zip -rw-r--r-- 1 root root 1111416131 Aug 6 11:36 linux.x64_11gR2_database_2of2.zip [root@iZbp15qc4wmx335c268l5mZ home]# cd /app/oracle [root@iZbp15qc4wmx335c268l5mZ oracle]# unzip linux.x64_11gR2_database_1of2.zip [root@iZbp15qc4wmx335c268l5mZ oracle]# unzip linux.x64_11gR2_database_2of2.zip [root@iZbp15qc4wmx335c268l5mZ oracle]# ls -l total 2295604 drwxr-xr-x 8 root root 4096 Aug 21 2009 database # 解压内容在这 -rw-r--r-- 1 root root 1239269270 Aug 6 11:34 linux.x64_11gR2_database_1of2.zip -rw-r--r-- 1 root root 1111416131 Aug 6 11:36 linux.x64_11gR2_database_2of2.zip [root@iZbp15qc4wmx335c268l5mZ oracle]# cd database [root@iZbp15qc4wmx335c268l5mZ database]# ls -l total 36 drwxr-xr-x 12 root root 4096 Aug 17 2009 doc drwxr-xr-x 4 root root 4096 Aug 15 2009 install drwxrwxr-x 2 root root 4096 Aug 15 2009 response drwxr-xr-x 2 root root 4096 Aug 15 2009 rpm -rwxr-xr-x 1 root root 3226 Aug 15 2009 runInstaller drwxrwxr-x 2 root root 4096 Aug 15 2009 sshsetup drwxr-xr-x 14 root root 4096 Aug 15 2009 stage -rw-r--r-- 1 root root 5402 Aug 18 2009 welcome.html oracle安装 在此之前，还需要修改下/app/oracle/database/response/db_install.rsp`文件。修改内容参考 https://blog.csdn.net/csd_nuser/article/details/110089960 和 http://www.javashuo.com/article/p-sbcnrnqx-gr.html 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 vim db_install.rsp # 以下为可参考的【http://www.javashuo.com/article/p-sbcnrnqx-gr.html】的修改内容，修改内容以具体情况和需求为准 oracle.install.responseFileVersion=/oracle/install/rspfmt_dbinstall_response_schema_v11_2_0 oracle.install.option=INSTALL_DB_SWONLY ORACLE_HOSTNAME=能够写本机地址 UNIX_GROUP_NAME=oinstall INVENTORY_LOCATION=/app/oracle/oraInventory SELECTED_LANGUAGES=zh_CN,en ORACLE_HOME=/app/oracle/product/11.2.0/db_1 ORACLE_BASE=/app/oracle oracle.install.db.InstallEdition=EE oracle.install.db.isCustomInstall=false oracle.install.db.DBA_GROUP=dba oracle.install.db.OPER_GROUP=oinstall oracle.install.db.config.starterdb.type=GENERAL_PURPOSE oracle.install.db.config.starterdb.globalDBName=orcl oracle.install.db.config.starterdb.SID=orcl oracle.install.db.config.starterdb.characterSet=AL32UTF8 oracle.install.db.config.starterdb.memoryOption=true oracle.install.db.config.starterdb.memoryLimit=512 oracle.install.db.config.starterdb.installExampleSchemas=false oracle.install.db.config.starterdb.enableSecuritySettings=true oracle.install.db.config.starterdb.password.ALL=oracle2018 oracle.install.db.config.starterdb.control=DB_CONTROL oracle.install.db.config.starterdb.dbcontrol.enableEmailNotification=false oracle.install.db.config.starterdb.automatedBackup.enable=false DECLINE_SECURITY_UPDATES=true 1 2 [root@iZbp15qc4wmx335c268l5mZ response]# vim /app/oracle/database/response/db_install.rsp # 参考修改参数 登陆oracle用户，进行正式安装：\n1 2 [oracle@iZbp15qc4wmx335c268l5mZ ~]$ cd /app/oracle/database [oracle@iZbp15qc4wmx335c268l5mZ database]$ ./runInstaller -silent -responseFile /app/oracle/database/response/db_install.rsp 安装过程杯具了，记录报错：\n1、Unable to create directory.等报错\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 [oracle@iZbp15qc4wmx335c268l5mZ database]$ ./runInstaller -silent -responseFile /app/oracle/database/response/db_install.rsp Starting Oracle Universal Installer... Checking Temp space: must be greater than 120 MB. Actual 19429 MB Passed Checking swap space: must be greater than 150 MB. Actual 729 MB Passed Preparing to launch Oracle Universal Installer from /tmp/OraInstall2022-08-06_11-53-42AM. Please wait ...[oracle@iZbp15qc4wmx335c268l5mZ database]$ [FATAL] [INS-32012] Unable to create directory. CAUSE: Either proper permissions were not granted to create the directory or there was no space left in the volume. ACTION: Check your permission on the selected directory or choose another directory. [FATAL] [INS-32021] Insufficient disk space on this volume for the selected Oracle home. CAUSE: The selected Oracle home was on a volume without enough disk space. ACTION: Choose a location for Oracle home that has enough space (minimum of 4,397MB) or free up space on the existing volume. A log of this session is currently saved as: /tmp/OraInstall2022-08-06_11-53-42AM/installActions2022-08-06_11-53-42AM.log. Oracle recommends that if you want to keep this log, you should move it from the temporary location to a more permanent location. # 根据提示查看 /tmp/OraInstall2022-08-06_11-53-42AM 下面的日志 可能是空间不足。。。先放着，后面有缘再解决\n参考链接 http://www.javashuo.com/article/p-sbcnrnqx-gr.html\nhttps://blog.csdn.net/csd_nuser/article/details/110089960\n","date":"2022-08-02T00:00:00Z","permalink":"https://huangxindi.com/p/linux-%E5%AE%89%E8%A3%85oracle/","title":"Linux-安装Oracle"},{"content":"Oracle-实现事务提交和回滚 背景：一直以来用sqlplus /执行多条sql时，某条sql失败后无法回滚前面的sql，并会继续执行下面的sql。即，如果 sqlplus 中遇到了一个 sql 或者 pl/ssql 错误, 一般会报告这个错误然后继续处理。在交互模式下, 这种处理是很理想的, 但是如果运行的是一个脚本,我们一般不希望失败了还继续执行 。这可太不科学了！经过高人指点，可以用一条命令来实现失败回滚功能。故在此学习和记录下。\n失败回滚命令 WHENEVER SQLERROR官网介绍： https://docs.oracle.com/en/database/oracle/oracle-database/19/sqpug/WHENEVER-SQLERROR.html#GUID-66C1C12C-5E95-4440-A37B-7CCE7E33491C\n常见用法 1 WHENEVER SQLERROR {EXIT [SUCCESS | FAILURE | WARNING | n | variable | :BindVariable] [COMMIT | ROLLBACK] | CONTINUE [COMMIT | ROLLBACK | NONE]} 出现错误后退出sql执行 1 SQL\u0026gt; WHENEVER SQLERROR EXIT SQL.SQLCODE 出现错误后先回滚【还没提交的变化】再退出sql执行 1 2 3 SQL\u0026gt; WHENEVER SQLERROR EXIT SQL.SQLCODE ROLLBACK ---回滚退出，并返回错误码SQL.SQLCODE or SQL\u0026gt; WHENEVER SQLERROR SQL.SQLCODE EXIT ROLLBACK 失败不回滚命令 如果要实现失败不回滚（当发生错误时，对之前执行的语句进行提交，并保留SQL*Plus）：\n参考 https://juejin.cn/post/7075307770173456392\n1 whenever sqlerror continue commit spool命令 此外，可以先认识下spool命令。\n常用语法可参考：\nhttps://blog.csdn.net/lixiaomei0623/article/details/121274473\nspool的作用可以用一句话来描述：在sqlplus中用来保存或打印查询结果。\n通过spool 命令，可以将select 数据库的内容写到文件中，通过在sqlplus设置一些参数，使得按指定方式写到文件中。\nsql执行内容导出到某文件例子：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 sqlplus oracle/pwd@192.168.10.16:1521/orl @/tmp/lxm/export.sql -- 执行语句 --- 以下为export.sql内容 set trimspool on set linesize 20000 set pagesize 0 set echo off set feedback off set newpage 1 set heading off set wrap off SQLBLANKLINES ON ---去掉空行 set term off ---以上为输出格式设置 spool /home/oracle/aaa.csv ---保存查询结果集的的路径和文件名 select python_student.name||\u0026#39;,\u0026#39;||python_student.age from python_student; spool off ---完成spool 举例 使用命令行 来自 http://blog.itpub.net/28916011/viewspace-2774514/ 的例子：\n1 2 3 4 5 SQL\u0026gt;spool e:\\test.txt SQL\u0026gt;whenever sqlerror exit rollback SQL\u0026gt;select * from test1233; SQL\u0026gt;select * from dual; SQL\u0026gt;spool off 使用sqlplus 来自 https://juejin.cn/post/7075307770173456392 的例子：\n1 2 3 4 5 6 7 8 9 10 #!/bin/sh echo \u0026#34;SQL*Plus-语句执行异常则退出\u0026#34; sqlplus user/password@x.x.x.x:x/orcl \u0026lt;\u0026lt;EOF whenever sqlerror exit failure rollback ${1} EOF return $? 参考链接 http://blog.itpub.net/28916011/viewspace-2774514/\nhttps://www.cnblogs.com/moveofgod/archive/2013/11/18/3428933.html\nhttps://juejin.cn/post/7075307770173456392\nhttps://docs.oracle.com/en/database/oracle/oracle-database/19/sqpug/WHENEVER-SQLERROR.html#GUID-66C1C12C-5E95-4440-A37B-7CCE7E33491C\n","date":"2022-08-02T00:00:00Z","permalink":"https://huangxindi.com/p/oracle-%E5%AE%9E%E7%8E%B0%E4%BA%8B%E5%8A%A1%E6%8F%90%E4%BA%A4%E5%92%8C%E5%9B%9E%E6%BB%9A/","title":"Oracle-实现事务提交和回滚"},{"content":"认识Jar包 概念 Jar：Java Archive File\n基于zip文件格式将许多文件合成一个压缩文件.jar，区别是比zip多了一个包含了一个 META-INF/MANIFEST.MF 文件，这个文件是在生成 JAR 文件的时候自动创建的。\n特点：\n平台无关 加快下载速度 安全：可对jar文件数字签名 分类：\n可执行jar包（MANIFEST.MF文件里有主类入口配置：Main-Class: com.example.MyClass） 不可执行jar包 生成Jar包 利用IDE打包 这部分后面再说\n命令行手动打包 1、打包单个java文件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 编译生成 Hello.class 文件 javac Hello.java # 打包 jar -cvf hello.jar Hello.class /* 参数解释： -c 创建一个新的jar包 -v 创建的过程中在控制台输出创建过程的一些信息 -f 生成的jar包命名 */ /*打包完成的jar包里包含： */ 2、打包目录内的多个java文件\n需要需要注意的是，以上命令行步骤打的jar包还不是可执行jar包。直接java -jar Hello.jar会报错。需要添加Main-Class属性：\nTODO\n执行 执行目标应是可执行jar包。除了直接双击执行，还可以采用命令行执行：\n1 java -jar xxx.jar 参考链接 https://blog.csdn.net/shiboyuan0410/article/details/85043741\nhttps://blog.csdn.net/weixin_33835459/article/details/114070826\n","date":"2022-08-02T00:00:00Z","permalink":"https://huangxindi.com/p/%E8%AE%A4%E8%AF%86jar%E5%8C%85/","title":"认识Jar包"},{"content":"Linux-管道篇 概念 管道（pipe）可以连接两个或多个命令，将前一个命令的标准输出作为后一个的标准输入（这也就意味着，若某命令不能支持标准输出/输入的话，则无法应用管道命令）\n格式：命令1 | 命令2 | ...\n管道和重定向（命令1 \u0026gt; file）的区别：重定向是接收对象是文件，而管道是接命令的。\n管道（又称无名管道）和命名管道FIFO的区别：等后面学到命名管道了再说\n注意点 管道只能传输正确输出，而无法传输错误信息。从管道接连输出的标准错误会混合到一起。 常见相关命令 grep (Global search REgular expression and Print out the line) 根据模式（正则表达式）对文本逐行扫描，找到并打印匹配的行\n格式：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 grep [options] [pattern] file or command | grep [options] [pattern] [options] -v # 反向匹配 invert (等同于--invert-match) -n # 输出加上行号 -i # 忽略大小写匹配 ignorecase -c # 只输出匹配的行数 -E # 适用egrep匹配 --color=auto # 为过滤结果添加颜色 (通常在alias中默认会有这个参数，如alias grep=\u0026#39;grep --color=auto\u0026#39;) -w # 整词对比，而不是字符 -o # 只输出匹配到的字符串本身（匹配到多少个就会输出几行） （常用于与wc -l配合获取到匹配的个数，而不是行数） -q # 静默模式（stderr除外，不输出任何东西 quiet） 等同于：--quiet, --silent （不打印任何标准输出，如果有匹配的内容则返回状态值0，常用于if判断等） -l # 只输出匹配的文件名 -r # 递归模式，查找所有层级子目录里的文件 [pattern] # 匹配模式，见正则表达式篇 例子：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt # 新建测试文件 i am cindy i live in china! I am writing in KFC. [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep \u0026#34;cindy\u0026#34; i am cindy [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -n \u0026#34;KFC\u0026#34; 3:I am writing in KFC. [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -v \u0026#34;am\u0026#34; # 空行也会被匹配到 i live in china! [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -c \u0026#34;am\u0026#34; # 只输出匹配到的行数 2 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep \u0026#34;i \u0026#34; i am cindy i live in china! [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -i \u0026#34;i \u0026#34; i am cindy i live in china! I am writing in KFC. [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep \u0026#34;c*\u0026#34; # 注意正则表达式和通配符的区别，正则表达式表示0个或多个\u0026#39;c\u0026#39;，通配符则表示匹配c+*的字符串 i am cindy i live in china! I am writing in KFC. [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep \u0026#34;c.\u0026#34; i am cindy i live in china! [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep \u0026#34;ci|ch\u0026#34; # 没加-E只表示普通的匹配\u0026#34;ci|ch\u0026#34;字符串 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -E \u0026#34;ci|ch\u0026#34; # 加了-E，表示匹配\u0026#39;ci\u0026#39;或\u0026#39;ch\u0026#39; i am cindy i live in china! [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -w \u0026#34;liv\u0026#34; # liv不是连在一起的“单词”，因为后面还跟着\u0026#39;e\u0026#39;，所有无法匹配 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -w \u0026#34;live\u0026#34; i live in china! [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -q \u0026#34;liv\u0026#34; [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo $? 0 # 匹配到 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -q \u0026#34;abc\u0026#34; [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo $? 1 # 没匹配到 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testGrep.txt | grep -o \u0026#34;in\u0026#34; | wc -l # 获取匹配的次数 5 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cd testGrepDir [cindy@iZbp15qc4wmx335c268l5mZ testGrepDir]$ cat 1.txt i am from file1 haha [cindy@iZbp15qc4wmx335c268l5mZ testGrepDir]$ cat 2.txt i am from file2 haha [cindy@iZbp15qc4wmx335c268l5mZ testGrepDir]$ grep -l \u0026#34;from\u0026#34; ./* # 只输出匹配到的文件名 ./1.txt ./2.txt [cindy@iZbp15qc4wmx335c268l5mZ testGrepDir]$ cd testGrepDir2 [cindy@iZbp15qc4wmx335c268l5mZ testGrepDir2]$ cat 3.txt i am from file3 haha [cindy@iZbp15qc4wmx335c268l5mZ testGrepDir2]$ cd .. [cindy@iZbp15qc4wmx335c268l5mZ testGrepDir]$ grep -l \u0026#34;from\u0026#34; ./* # 非递归模式 ./1.txt ./2.txt grep: ./testGrepDir2: Is a directory [cindy@iZbp15qc4wmx335c268l5mZ testGrepDir]$ grep -rl \u0026#34;from\u0026#34; ./* # 递归模式 ./1.txt ./2.txt ./testGrepDir2/3.txt cut 根据某条件（分隔符）分割输入的内容，并输出特定的分割结果。但是cut只支持单个字符的分隔符。\n格式：\n1 2 3 4 5 6 7 8 9 10 11 12 cut [options] file or command | cut [options] [options] -d # 指定分割符（默认分隔符是Tab，而不是空格），常与-f配合适用。分隔符只能是单个字符。 -f # 指定输出分割后的第几列 -c # 指定输出某区间结果（以字符为单位） -b # 以字节为单位指定某区间结果 –complement # 反选选中的部分，即输出除去该条件的内容 –output-delimiter # 修改输出时使用的分隔符。 --only-delimited # 不输出不包含分隔符的列。 例子：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testCut.txt # 新建测试文件 i am cindy it.so.hot butiamcold 但是我冷呀 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testCut.txt | cut -d \u0026#39;.\u0026#39; -f 2 # 第三行有匹配到分隔符，并输出第2个内容。其他行没有匹配到，全部输出。 i am cindy so butiamcold 但是我冷呀 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testCut.txt | cut -d \u0026#39;.\u0026#39; -f 4 # 第三行有匹配到分隔符，但分割后只有三个子字符串，故输出为空 i am cindy butiamcold 但是我冷呀 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testCut.txt | cut -c 1 # 分割第一个字符 i i b 但 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testCut.txt | cut -c 1-3 # 分割1-3个字符 i a it. but 但是我 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testCut.txt | cut -d \u0026#39;.\u0026#39; -f 2,3 # 取第2和第3个分割结果 i am cindy so.hot butiamcold 但是我冷呀 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;12345678\u0026#34; | cut -c -4 # 取第4个之前的字符 1234 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;1 2 3\u0026#34; | cut -d \u0026#39;:\u0026#39; -f 1- # 取第1个之后的字符 1 2 3 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;1 2\u0026#34; | cut -d \u0026#39; \u0026#39; -f 2 # 分隔符不能指定超过单个字符 cut: the delimiter must be a single character Try \u0026#39;cut --help\u0026#39; for more information. # 英文 cut -b/-c 没啥区别，但是中文就不一样了，如下所示（提醒：一个汉字对应多少个字节，要看采用的编码方式） [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;咖啡\u0026#34; | cut -c 1-2 咖啡 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;咖啡\u0026#34; | cut -b 1-2 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;咖啡\u0026#34; | cut -b 1-6 咖啡 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;咖啡\u0026#34; | cut -b 1-5 咖 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;1 2 3\u0026#34; | cut -d \u0026#39; \u0026#39; --complement -f2 1 3 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo $PATH /usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/cindy/.local/bin:/home/cindy/bin [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo $PATH | cut -d \u0026#39;:\u0026#39; -f 2-4 --output-delimiter \u0026#39; \u0026#39; # 分割后，取出第2到第4的内容，并替换:为空格符输出 /usr/bin /usr/local/sbin /usr/sbin [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testCut.txt | cut -d \u0026#39;.\u0026#39; -f 1- --only-delimited # 只输出匹配到分隔符的行 it.so.hot sort, wc, uniq sort 针对文本文件的内容，以行为单位进行排序\n1 2 3 4 5 6 7 8 9 10 sort [options] file or command | sort [options] [options] -n # 以数字格式来大小排序（默认是以字符串格式） -r # 反向排序（从大到小） -k # 以某列进行排序 -t # 指定分隔符（默认分割符为空格） -b # 忽略每行前面的空格再排序 例子：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testSort.txt 12 13 14 2 3 4 2 1 5 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testSort.txt | sort # 按照字符串格式比较，即依次比较第1,2..个字符 12 13 14 2 1 5 2 3 4 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testSort.txt | sort -r 2 3 4 2 1 5 12 13 14 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testSort.txt | sort -n # 按数字格式比较，即2\u0026lt;12 2 1 5 2 3 4 12 13 14 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ vi testSort.txt [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testSort.txt 12,13,14 2,3,4 2,1,5 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testSort.txt | sort -k 2 -t \u0026#39;,\u0026#39; -n # 分隔符为逗号，根据第2列的数字格式排序 2,1,5 2,3,4 12,13,14 wc 用于统计文件的字节数、字数、行数\n1 2 3 4 5 6 7 8 9 10 wc [options] file or command | wc [options] [options] -c # 统计字节(char)数 -l # 行数(line) -m # 字符数 -w # 字数(word)，一个字被定义为由空白、跳格或换行字符分隔的字符串。 -L # 获取最长行的长度 例子：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;123\u0026#34; | wc -c 4 # 因为echo输出会带换行符，而换行符也会被算1个，故结果是4 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;123\u0026#34; | wc -m 4 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;123\u0026#34; | wc -w 1 # 123算一个字 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ vi testWc.txt [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testWc.txt 123 4 我 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ wc testWc.txt # 参数分别为：行数，字数，字节数，文件名 3 3 10 testWc.txt [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testWc.txt | wc -c 10 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testWc.txt | wc -m # 注意-c和-m对于中文的长度统计不一样 8 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo -n \u0026#34;123\u0026#34; | wc -m # echo -n 表示不输出换行符的echo 3 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testWc.txt | wc -l # 统计行数（常用） 3 uniq 用于检查或删除重复的列，可以与sort结合使用。\n1 2 3 4 5 6 7 8 9 10 11 12 13 uniq [options] file or command | uniq [options] [options] - uniq filename (cat filename | unique) # 显示删除重复行的文件内容，但不改变原文件内容 -u # 仅显示只出现一次的行(unique)，与`uniq filename`效果不同 -d # 仅显示有重复的行(dupli) -c # 在每一行前面标上重复的行数(count) -i # 忽略大小写(ignore) -f # 忽略比较第几栏（以空格为分割符） # 需要注意的是，判断重复行的范围仅是相邻行。若不是相邻行的重复行，并不会被识别为重复行。若要实现将不相邻的重复行也视为重复的uniq命令，则要配合上sort命令： sort filename | uniq 例子：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ vi testUniq.txt [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt hhhhh hhhhh HHHHH 11111 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt | uniq #列出去重后的结果 hhhhh HHHHH 11111 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt | uniq -u # 只列出不重复的行 HHHHH 11111 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt | uniq -d hhhhh [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt | uniq -c 2 hhhhh 1 HHHHH 1 11111 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt | uniq -i # 忽略大小写后，前三行可视为相同 hhhhh 11111 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt 111 222 222 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ uniq testUniq.txt # 输出剔重的文件内容 111 222 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt # 但不改变原文件内容 111 222 222 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt 111 222 111 222 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat testUniq.txt | uniq -u 111 222 111 222 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ sort testUniq.txt | uniq 111 222 tee 标准输入 -\u0026gt; tee -\u0026gt; 标准输出**+文件**，即实现既将执行结果输出，并保存到文件中。\n1 2 3 4 5 6 7 8 9 command | tee [options] filenameßß [options] -a # 追加写到文件（默认是覆盖写） -i # 忽略中断信号 - - ... # 重复多次 \u0026gt; dev/null # 静默输出（只输出到文件） # 注：默认会将标准输入的信息通过tee输出到文件中（即，过滤错误信息），如需要一并输出错误信息，则要结合 2\u0026gt;\u0026amp;1 例子：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ whoami | tee tee.txt cindy # 1、控制台输出 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat tee.txt cindy # 2、文件输出 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ whoami | tee tee.txt cindy [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat tee.txt # 覆盖写 cindy [cindy@iZbp15qc4wmx335c268l5mZ ~]$ whoami | tee -a tee.txt cindy [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat tee.txt # 追加写 cindy cindy [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;hi\u0026#34; | tee tee1.txt tee2.txt # 同时输出到多个文件 hi [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat tee1.txt hi [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat tee2.txt hi [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;good\u0026#34; | tee - - # 额外重复输出2次 good good good [cindy@iZbp15qc4wmx335c268l5mZ ~]$ echo \u0026#34;good\u0026#34; | tee good.txt \u0026gt; /dev/null [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat good.txt # 仅输出到文件中 good [cindy@iZbp15qc4wmx335c268l5mZ ~]$ ls kkk | tee out ls: cannot access kkk: No such file or directory [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat out # 正常没有把错误信息输出到文件中 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ ls kkk 2\u0026gt;\u0026amp;1 | tee out ls: cannot access kkk: No such file or directory [cindy@iZbp15qc4wmx335c268l5mZ ~]$ cat out # 此时错误信息有输出到文件中 ls: cannot access kkk: No such file or directory split xargs 参考链接 https://www.cnblogs.com/w-j-q/p/14833714.html\nhttps://blog.csdn.net/m0_50370837/article/details/125068528\nhttps://blog.csdn.net/weixin_50196615/article/details/121834020\nhttps://blog.csdn.net/weixin_45842494/article/details/124679008\nhttp://linux.tedu.cn/workplace/420732.html\nhttps://blog.csdn.net/cnds123321/article/details/125150383\nhttps://blog.csdn.net/carefree2005/article/details/115324770\nhttps://www.cnblogs.com/baichunyu/p/15314763.html\nhttps://www.cnblogs.com/nanruosen/p/16317025.html\n","date":"2022-07-31T00:00:00Z","permalink":"https://huangxindi.com/p/linux-%E7%AE%A1%E9%81%93%E7%AF%87/","title":"Linux-管道篇"},{"content":"Redis-Jedis 概念 通过Java来操作Redis的一个客户端。\n接下来的内容等我学完spring之类的再来吧\n","date":"2022-07-31T00:00:00Z","permalink":"https://huangxindi.com/p/redis-jedis/","title":"Redis-Jedis"},{"content":"Redis-Redis6新数据类型 Bitmaps 本身不是一种数据类型，实际上是每个单位存储0和1的字符串，可以看作是以位为单位的数组，下标称为偏移量（从0开始）。但是操作命令和字符串不同。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 [commands] - setbit key offset value # - getbit key offset - bitcount key [start] [end] # 以字节为单位统计1的个数，这和上面两个命令以bit为单位操作不同 - bitop ope destkey key [key...] # 对一或多个key做操作并保存在destkey:and（交集）,or（并集）,not（非）,xor（异或） 127.0.0.1:6379\u0026gt; setbit online1 0 1 (integer) 0 127.0.0.1:6379\u0026gt; setbit online1 1 1 (integer) 0 127.0.0.1:6379\u0026gt; getbit online1 0 (integer) 1 127.0.0.1:6379\u0026gt; bitcount online1 # 没有指定前后，就是求所有的1的个数 (integer) 2 127.0.0.1:6379\u0026gt; setbit online1 15 1 (integer) 0 127.0.0.1:6379\u0026gt; setbit online1 16 1 (integer) 0 127.0.0.1:6379\u0026gt; bitcount online1 0 1 # 此时online1= 11000000 00000001 10000000 (integer) 3 # 求的是第0到第1个字节中的1的个数 127.0.0.1:6379\u0026gt; bitcount online1 0 2 (integer) 4 127.0.0.1:6379\u0026gt; setbit online2 1 1 (integer) 0 127.0.0.1:6379\u0026gt; setbit online2 15 1 (integer) 0 127.0.0.1:6379\u0026gt; bitop and online1 online2 (integer) 2 # 返回and 1 1 的位个数 127.0.0.1:6379\u0026gt; bitop or online1 online2 (integer) 2 127.0.0.1:6379\u0026gt; setbit online2 16 0 (integer) 0 127.0.0.1:6379\u0026gt; bitop or online1 online2 (integer) 3 127.0.0.1:6379\u0026gt; setbit key1 0 1 (integer) 0 127.0.0.1:6379\u0026gt; bitop not key2 key1 # key1的取反结果保存到key2 (integer) 1 127.0.0.1:6379\u0026gt; bitop xor key3 key1 key2 # key1和key2的异或结果保存到key3，key3应该是全1 (integer) 1 127.0.0.1:6379\u0026gt; bitcount key3 (integer) 8 HyperLogLog 基数问题 例如给一个大的数字集合，要求里面包含有多少个不重复的数字。如{1,2,2,3,3,5}的基数是4。\n如果是用set、bitmaps等数据结构来处理的话，占用空间会较大。能否能够降低一定的精度来平衡存储空间？于是HyperLogLog就出现了。\n需要注意的是，HyperLogLog只统计基数，不存储元素，所以无法获取真实的元素。\n优势 Redis HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定的、并且是很小的。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 [commands] - pfadd key values1 [values2 ...] # 加入1或多个value - pfcount key # 获取基数 - pfmerge destkey key1 key2 [...] # 合并多个key到destkey 127.0.0.1:6379\u0026gt; pfadd pfkey1 \u0026#34;v1\u0026#34; (integer) 1 127.0.0.1:6379\u0026gt; pfadd pfkey1 \u0026#34;v2\u0026#34; (integer) 1 127.0.0.1:6379\u0026gt; pfadd pfkey1 \u0026#34;v1\u0026#34; (integer) 0 127.0.0.1:6379\u0026gt; pfcount pfkey1 (integer) 2 # 两个v1算一个 127.0.0.1:6379\u0026gt; pfadd pfkey2 \u0026#34;v3\u0026#34; (integer) 1 127.0.0.1:6379\u0026gt; pfadd pfkey2 \u0026#34;v1\u0026#34; (integer) 1 127.0.0.1:6379\u0026gt; pfmerge pfkey3 pfkey1 pfkey2 # 将pfkey1和pfkey2合并到pfkey3 OK 127.0.0.1:6379\u0026gt; pfcount pfkey3 # 由于pfkey1和pfkey2中都含有v1，所以v1只算一个 (integer) 3 Geospatial redis对地理坐标操作的数据类型\n1 2 3 4 5 [commands] - geoadd key longitude latitude member [longitude latitude member...] # 添加一或多个地理位置（经度、纬度、名称） - geopos key member # 获得指定地区的坐标值 - geodist key member1 member2 [m/km/ft/mi] # 获取两个位置之间的直线距离（默认以米为单位） - georadius key longitude latitude radius m/km/ft/mi # 获取给定位置为中心的，半径radius内的元素 注意：\n两极无法直接添加，一般会下载城市数据，直接通过 Java 程序一次性导入。 有效的经度从 -180 度到 180 度。有效的纬度从 -85.05112878 度到 85.05112878 度。 当坐标位置超出指定范围时，geoadd将会返回一个错误。 m米；km千米；mi英里；ft英尺 ","date":"2022-07-31T00:00:00Z","permalink":"https://huangxindi.com/p/redis-redis6%E6%96%B0%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","title":"Redis-Redis6新数据类型"},{"content":"Redis-发布和订阅 概念 Redis 发布订阅 (pub/sub) 是一种消息通信模式：发送者 (pub) 发送消息，订阅者 (sub) 接收消息。共包括三个角色：发送者、频道(channel)、订阅者。\n发布方往channel发布消息，若订阅方有订阅这个channel，则可以接收到这个消息。\n一个订阅方可以订阅多个channel。\n简单实践 打开redis客户端，订阅一个channel\n1 2 3 4 5 127.0.0.1:6379\u0026gt; subscribe channel1 Reading messages... (press Ctrl-C to quit) 1) \u0026#34;subscribe\u0026#34; 2) \u0026#34;channel1\u0026#34; 3) (integer) 1 表示正在订阅状态\n再打开一个redis客户端（在另一个会话中），发布消息：\n1 2 127.0.0.1:6379\u0026gt; publish channel1 helloworld (integer) 1 # 返回的是当前订阅者的数量 此时就能看到订阅方接收到了这条消息：\n1 2 3 4 5 6 7 8 127.0.0.1:6379\u0026gt; subscribe channel1 Reading messages... (press Ctrl-C to quit) 1) \u0026#34;subscribe\u0026#34; 2) \u0026#34;channel1\u0026#34; 3) (integer) 1 1) \u0026#34;message\u0026#34; 2) \u0026#34;channel1\u0026#34; 3) \u0026#34;helloworld\u0026#34; ","date":"2022-07-18T00:00:00Z","permalink":"https://huangxindi.com/p/redis-%E5%8F%91%E5%B8%83%E5%92%8C%E8%AE%A2%E9%98%85/","title":"Redis-发布和订阅"},{"content":"Redis-常用数据类型 查看redis常见数据类型操作命令： http://www.redis.cn/commands.html\nkey类型 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 [commands] # 这些命令的含义很容易看出，故直接看例子吧 - keys * - set key value - exists key - type key - del key - unlink key - expire key time(second) - ttl key - dbsize [cindy@iZbp15qc4wmx335c268l5mZ ~]$ redis-cli 127.0.0.1:6379\u0026gt; keys * # 列出当前数据库的所有key (empty array) 127.0.0.1:6379\u0026gt; set k1 cindy # 设置key为\u0026#34;k1\u0026#34;的值为\u0026#34;cindy\u0026#34; OK 127.0.0.1:6379\u0026gt; set k2 coco OK 127.0.0.1:6379\u0026gt; set k3 alice OK 127.0.0.1:6379\u0026gt; keys * 1) \u0026#34;k3\u0026#34; 2) \u0026#34;k1\u0026#34; 3) \u0026#34;k2\u0026#34; 127.0.0.1:6379\u0026gt; exists k1 # 是否存在k1，结果用(integer) 1/0表示 (integer) 1 127.0.0.1:6379\u0026gt; exists k4 (integer) 0 127.0.0.1:6379\u0026gt; type k1 # 查看key的类型 string 127.0.0.1:6379\u0026gt; del k1 # 删除key方法一 (integer) 1 127.0.0.1:6379\u0026gt; unlink k2 # 删除key方法二（根据value选择非阻塞删除，仅将keys从keyspace元数据中删除，真正的删除会在后续异步操作） (integer) 1 127.0.0.1:6379\u0026gt; keys * 1) \u0026#34;k3\u0026#34; 127.0.0.1:6379\u0026gt; expire k4 10 # 设置已有key的过期时间（单位秒） (integer) 0 # 由于k4不是已有的key，所以返回是0 127.0.0.1:6379\u0026gt; expire k3 10 (integer) 1 127.0.0.1:6379\u0026gt; ttl k3 # 查看key的过期时间（特殊：-1表示永不过期，-2表示已过期） (integer) 7 127.0.0.1:6379\u0026gt; ttl k3 (integer) -2 127.0.0.1:6379\u0026gt; set k5 xxx OK 127.0.0.1:6379\u0026gt; ttl k5 (integer) -1 127.0.0.1:6379\u0026gt; dbsize # 当前数据库的key总数 (integer) 1 127.0.0.1:6379\u0026gt; 1 2 flushdb # 清空当前库 flushall # 通杀全部库 String类型 是Redis中value最基本的类型 是二进制安全的，意味着Redis的string可以包含任何数据，比如jpg图片或者序列化的对象 Redis中字符串value最多512M String的数据结构为简单动态字符串(Simple Dynamic String,缩写SDS)。内部结构实现上类似于Java的ArrayList，采用预分配冗余空间的方式来减少内存的频繁分配，在需要时扩容。 基本操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 [commands] # 这些命令的含义很容易看出，故直接看例子吧 - set key value - setnx key value # 设置key-value值（仅当key不存在时才设置成功） - get key - append key value - strlen key\t127.0.0.1:6379\u0026gt; keys * (empty array) 127.0.0.1:6379\u0026gt; set k1 value1 # 设置key-value值 OK 127.0.0.1:6379\u0026gt; get k1 # 获取key对应的值 \u0026#34;value1\u0026#34; 127.0.0.1:6379\u0026gt; append k1 abd # 在key值后面追加 (integer) 9 # 返回追加后的value长度 127.0.0.1:6379\u0026gt; get k1 \u0026#34;value1abd\u0026#34; 127.0.0.1:6379\u0026gt; strlen k1 # key长度 (integer) 9 127.0.0.1:6379\u0026gt; setnx k1 abc # 设置key-value值（仅当key不存在时才设置成功） (integer) 0 127.0.0.1:6379\u0026gt; get k1 \u0026#34;value1abd\u0026#34; 127.0.0.1:6379\u0026gt; setnx k2 abc (integer) 1 127.0.0.1:6379\u0026gt; get k2 \u0026#34;abc\u0026#34; 127.0.0.1:6379\u0026gt; set k2 def # 对于已存在的key，set设置直接覆盖 OK 127.0.0.1:6379\u0026gt; get k2 \u0026#34;def\u0026#34; 对值为数字的增减操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 [commands] # 这些命令的含义很容易看出，故直接看例子吧 - incr key - decr key - incrby key len - decrby key len 127.0.0.1:6379\u0026gt; flushdb OK 127.0.0.1:6379\u0026gt; set k1 100 # 需要设置value为数字 OK 127.0.0.1:6379\u0026gt; incr k1 # 设置key对应的value自增1 (integer) 101 127.0.0.1:6379\u0026gt; decr k1 # 设置key对应的value自减1 (integer) 100 127.0.0.1:6379\u0026gt; incrby k1 3 # 指定步长的自增 (integer) 103 127.0.0.1:6379\u0026gt; decrby k1 4 # 指定步长的自减 (integer) 99 值得注意的是，redis的增减操作具有原子性。\n所谓原子操作是指不会被线程调度机制打断的操作；这种操作一旦开始，就一直运行到结束，中间不会有任何 context switch （切换到另一个线程）。\n（1）在单线程中， 能够在单条指令中完成的操作都可以认为是\u0026quot;原子操作\u0026quot;，因为中断只能发生于指令之间。\n（2）在多线程中，不能被其它进程（线程）打断的操作就叫原子操作。\nRedis单命令的原子性主要得益于Redis的单线程。\n例如java的i++就不是单线程。\n批量操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 [commands] # 这些命令的含义很容易看出，故直接看例子吧 - mset key1 value1 key2 value2 ... - msetnx key1 value1 key2 value2 ... - mget key1 key2 ... 127.0.0.1:6379\u0026gt; mset k1 v1 k2 v2 # 批量设置多个key-value OK 127.0.0.1:6379\u0026gt; keys * 1) \u0026#34;k1\u0026#34; 2) \u0026#34;k2\u0026#34; 127.0.0.1:6379\u0026gt; mget k1 k2 # 批量获取多个key的value值 1) \u0026#34;v1\u0026#34; 2) \u0026#34;v2\u0026#34; 127.0.0.1:6379\u0026gt; msetnx k1 v11 k3 v3 # 批量设置多个key-value（但是判断是否已存在，若其中有一个已存在，则整体设置失败） -\u0026gt; 原子性 (integer) 0 127.0.0.1:6379\u0026gt; keys * # 设置失败，故keys不变 1) \u0026#34;k1\u0026#34; 2) \u0026#34;k2\u0026#34; 127.0.0.1:6379\u0026gt; msetnx k3 v3 k4 v4 (integer) 1 127.0.0.1:6379\u0026gt; keys * # 设置成功 1) \u0026#34;k4\u0026#34; 2) \u0026#34;k3\u0026#34; 3) \u0026#34;k1\u0026#34; 4) \u0026#34;k2\u0026#34; 范围和过期时间设置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 [commands] - getrange key beginIndex endINdex # 类似substring，取一定区间的子字符串(且begin和end的字符都要)，索引从0开始 - setrange key beginIndex value # 从beginIndex开始覆盖 - setex key expireTime value # 新建key并设置过期时间（秒） - getset key value # 设置key的新值，并输出其旧值 127.0.0.1:6379\u0026gt; set key1 cindy OK 127.0.0.1:6379\u0026gt; getrange key1 1 3 # 索引从0开始 \u0026#34;ind\u0026#34; 127.0.0.1:6379\u0026gt; setrange key1 1 aa (integer) 5 # 输出覆盖完成后的字符串长度 127.0.0.1:6379\u0026gt; get key1 \u0026#34;caady\u0026#34; 127.0.0.1:6379\u0026gt; setex key2 10 value2 OK 127.0.0.1:6379\u0026gt; ttl key2 (integer) 6 127.0.0.1:6379\u0026gt; ttl key2 (integer) -2 127.0.0.1:6379\u0026gt; keys * # key2已过期，不存在了 1) \u0026#34;key1\u0026#34; 127.0.0.1:6379\u0026gt; getset key1 panda \u0026#34;caady\u0026#34; # 输出旧值 127.0.0.1:6379\u0026gt; get key1 \u0026#34;panda\u0026#34; # 输出新值 List类型 单键多值\n字符串列表，按插入顺序排序，可从队头或尾插入\n底层是双向链表，故两边操作比中间操作代价小得多\n数据结构是快速链表quickList，由多个压缩链表ziplist双向链接而成（压缩链表是一块连续的内存存储，它将所有的元素紧挨着一起存储）。这样既满足了快速的插入删除性能，又不会出现太大的空间冗余（不需要很多左右指针）。\n基本操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 [commands] - lpush/rpush list value1 value2 ... # 从左/右边插入1或多个value - lpop/rpop list # 从左/右边弹出1个value - rpoplpush list1 list2 # 从list1列表右边弹出一个值插入到list2的左边 - lrange list left right # 输出index为[left,right]的子列表（index从0开始） lrange list 0 -1 # 特别地，取出所有值 - lindex list index # 取出给定下标的元素（从左边数） - llen list # 获取列表长度 - linsert list before/after value new_value # 从值为value的节点前面/后面插入new_value - lrem list num value # 将列表从左开始删除num个值为value的节点 - lset list index value # 将下标index的值设为value 127.0.0.1:6379\u0026gt; rpush l1 v1 v2 v3 (integer) 3 127.0.0.1:6379\u0026gt; lrange l1 0 -1 1) \u0026#34;v1\u0026#34; 2) \u0026#34;v2\u0026#34; 3) \u0026#34;v3\u0026#34; 127.0.0.1:6379\u0026gt; lpush l2 v11 v22 v33 (integer) 3 127.0.0.1:6379\u0026gt; lrange l2 0 -1 1) \u0026#34;v33\u0026#34; 2) \u0026#34;v22\u0026#34; 3) \u0026#34;v11\u0026#34; 127.0.0.1:6379\u0026gt; lpop l1 \u0026#34;v1\u0026#34; # 输出弹出的value 127.0.0.1:6379\u0026gt; lrange l1 0 -1 1) \u0026#34;v2\u0026#34; 2) \u0026#34;v3\u0026#34; 127.0.0.1:6379\u0026gt; rpop l2 \u0026#34;v11\u0026#34; 127.0.0.1:6379\u0026gt; lrange l2 0 -1 1) \u0026#34;v33\u0026#34; 2) \u0026#34;v22\u0026#34; 127.0.0.1:6379\u0026gt; rpoplpush l1 l2 \u0026#34;v3\u0026#34; # l1弹出的值 127.0.0.1:6379\u0026gt; lrange l1 0 -1 1) \u0026#34;v2\u0026#34; 127.0.0.1:6379\u0026gt; lrange l2 0 -1 # v3成功从左边插入到l2 1) \u0026#34;v3\u0026#34; 2) \u0026#34;v33\u0026#34; 3) \u0026#34;v22\u0026#34; 127.0.0.1:6379\u0026gt; lindex l2 1 \u0026#34;v33\u0026#34; 127.0.0.1:6379\u0026gt; llen l2 (integer) 3 127.0.0.1:6379\u0026gt; linsert l2 after v3 v3_after (integer) 4 127.0.0.1:6379\u0026gt; lrange l2 0 -1 1) \u0026#34;v3\u0026#34; 2) \u0026#34;v3_after\u0026#34; 3) \u0026#34;v33\u0026#34; 4) \u0026#34;v22\u0026#34; 127.0.0.1:6379\u0026gt; linsert l2 before v3_after v3 (integer) 5 127.0.0.1:6379\u0026gt; lrange l2 0 -1 1) \u0026#34;v3\u0026#34; 2) \u0026#34;v3\u0026#34; 3) \u0026#34;v3_after\u0026#34; 4) \u0026#34;v33\u0026#34; 5) \u0026#34;v22\u0026#34; 127.0.0.1:6379\u0026gt; lrem l2 2 v3 # 从左开始删除2个v3 (integer) 2 127.0.0.1:6379\u0026gt; lrange l2 0 -1 1) \u0026#34;v3_after\u0026#34; 2) \u0026#34;v33\u0026#34; 3) \u0026#34;v22\u0026#34; 127.0.0.1:6379\u0026gt; lset l2 1 v33_new OK 127.0.0.1:6379\u0026gt; lrange l2 0 -1 1) \u0026#34;v3_after\u0026#34; 2) \u0026#34;v33_new\u0026#34; 3) \u0026#34;v22\u0026#34; Set类型 无序，不重复 底层是一个value为null的hash表，所以添加，删除，查找的复杂度都是O(1) Set数据结构是dict字典，字典是用哈希表实现的。Java中HashSet的内部实现使用的是HashMap，只不过所有的value都指向同一个对象。Redis的set结构也是一样，它的内部也使用hash结构，所有的value都指向同一个内部值。 基本操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 [commands] - sadd set value1 value2 ... # 插入集合值（已存在值会被忽略） - smembers set # 输出集合的所有值 - sismember set value # 判断value是否在set中 - scard set # 获取set所含元素个数 - srem set value1 value2 ... # 删除元素 - spop set # 随机弹出set的一个值 - srandmember set num # 随机获取num个值，但不会删除 - smove set1 set2 value # 将value从set1转移到set2 - sinter set1 set2 # 取交集 - sunion set1 set2 # 取并集 - sdiff set1 set2 # 取差集 127.0.0.1:6379\u0026gt; sadd s1 v1 v2 (integer) 2 127.0.0.1:6379\u0026gt; smembers s1 1) \u0026#34;v1\u0026#34; 2) \u0026#34;v2\u0026#34; 127.0.0.1:6379\u0026gt; sismember s1 v2 (integer) 1 127.0.0.1:6379\u0026gt; sismember s1 v3 (integer) 0 # 存在-1；不存在-0 127.0.0.1:6379\u0026gt; scard s1 (integer) 2 127.0.0.1:6379\u0026gt; srem s1 v1 (integer) 1 127.0.0.1:6379\u0026gt; smembers s1 1) \u0026#34;v2\u0026#34; 127.0.0.1:6379\u0026gt; sadd s2 v1 v2 v3 (integer) 3 127.0.0.1:6379\u0026gt; srandmember s2 \u0026#34;v3\u0026#34; 127.0.0.1:6379\u0026gt; srandmember s2 \u0026#34;v1\u0026#34; 127.0.0.1:6379\u0026gt; smove s2 s1 v3 (integer) 1 127.0.0.1:6379\u0026gt; smembers s1 1) \u0026#34;v2\u0026#34; 2) \u0026#34;v3\u0026#34; 127.0.0.1:6379\u0026gt; smembers s2 1) \u0026#34;v1\u0026#34; 2) \u0026#34;v2\u0026#34; 127.0.0.1:6379\u0026gt; sinter s1 s2 1) \u0026#34;v2\u0026#34; 127.0.0.1:6379\u0026gt; sunion s1 s2 1) \u0026#34;v1\u0026#34; 2) \u0026#34;v2\u0026#34; 3) \u0026#34;v3\u0026#34; 127.0.0.1:6379\u0026gt; sdiff s1 s2 1) \u0026#34;v3\u0026#34; Hash类型 键值对集合，field-value映射 类似java的Map Hash类型对应的数据结构是两种：ziplist（压缩列表），hashtable（哈希表）。当field-value长度较短且个数较少时，使用ziplist，否则使用hashtable。 基本操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 [commands] - hset key field1 value1 field2 value2 # 赋值 - hget key field # 取值 - hexists key field # 查看field是否存在 - hkeys key # 列出key的所有fields - hvals key # 列出key的所有values - hincrby key field increment # 为数值域加上增量 - hsetnx key field value # 仅当当前field不存在，才设置值 127.0.0.1:6379\u0026gt; hset user1 id 001 name cindy age 100 (integer) 3 127.0.0.1:6379\u0026gt; hget user1 id \u0026#34;001\u0026#34; 127.0.0.1:6379\u0026gt; hget user1 sex (nil) # 无此field 127.0.0.1:6379\u0026gt; hkeys user1 1) \u0026#34;id\u0026#34; 2) \u0026#34;name\u0026#34; 3) \u0026#34;age\u0026#34; 127.0.0.1:6379\u0026gt; hvals user1 1) \u0026#34;001\u0026#34; 2) \u0026#34;cindy\u0026#34; 3) \u0026#34;100\u0026#34; 127.0.0.1:6379\u0026gt; hincrby user1 age 2 (integer) 102 127.0.0.1:6379\u0026gt; hvals user1 1) \u0026#34;001\u0026#34; 2) \u0026#34;cindy\u0026#34; 3) \u0026#34;102\u0026#34; # 100+2 127.0.0.1:6379\u0026gt; hsetnx user1 age 200 (integer) 0 # 由于已有age键，故设置失败 127.0.0.1:6379\u0026gt; hvals user1 1) \u0026#34;001\u0026#34; 2) \u0026#34;cindy\u0026#34; 3) \u0026#34;102\u0026#34; 127.0.0.1:6379\u0026gt; hsetnx user1 sex female (integer) 1 127.0.0.1:6379\u0026gt; hkeys user1 1) \u0026#34;id\u0026#34; 2) \u0026#34;name\u0026#34; 3) \u0026#34;age\u0026#34; 4) \u0026#34;sex\u0026#34; # 新增成功 127.0.0.1:6379\u0026gt; hvals user1 1) \u0026#34;001\u0026#34; 2) \u0026#34;cindy\u0026#34; 3) \u0026#34;102\u0026#34; 4) \u0026#34;female\u0026#34; Zset类型 是一种有序的set类型，通过每个value的score字段排序（由低到高排序）\n值是唯一的，但score是可重复的\n方便访问一个score范围内的值，访问中间的元素也快\n底层数据结构：Hash（关联元素value和权重score，保障元素value的唯一性，可以通过元素value找到相应的score值）+跳跃表（给元素value排序，根据score的范围获取元素列表）\n跳表：\n基本操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 [commands] - zadd key score1 value1 score2 value2 ... # 赋值(加上socre) - zrange key begin end [withscores] # 返回一定下标范围的值，WITHSCORES加上的话可额外显示score - zrangebyscore key min max [withscores] [limit offset count] # 指定返回的score范围的value，其中offset和count分别可指定偏移量和个数 - zrevrangebyscore key max min [withscores] [limit offset count] # 反向排序输出 - zincrby key increment value # 为元素的score加上增量 - zrem key value # 删除元素 - zcount key min max # 统计指定score范围内的元素个数 - zrank key value # 返回元素在集合key中的排名（从0开始） 127.0.0.1:6379\u0026gt; zadd key1 1 v1 2 v2 (integer) 2 127.0.0.1:6379\u0026gt; zrange key1 0 1 # 按socre从到大排列显示[0,1]下标内的值 1) \u0026#34;v1\u0026#34; 2) \u0026#34;v2\u0026#34; 127.0.0.1:6379\u0026gt; zrange key1 0 1 withscores # 相应score显示在下面 1) \u0026#34;v1\u0026#34; 2) \u0026#34;1\u0026#34; 3) \u0026#34;v2\u0026#34; 4) \u0026#34;2\u0026#34; 127.0.0.1:6379\u0026gt; zadd key1 3 v3 (integer) 1 127.0.0.1:6379\u0026gt; zrangebyscore key1 1 2 # 取socre范围[1,2]的值 1) \u0026#34;v1\u0026#34; 2) \u0026#34;v2\u0026#34; 127.0.0.1:6379\u0026gt; zrangebyscore key1 1 3 limit 1 1 # 结果偏移量为1，且仅选取一个值，即为v2 1) \u0026#34;v2\u0026#34; 127.0.0.1:6379\u0026gt; zrevrangebyscore key1 3 2 withscores # 反向顺序 1) \u0026#34;v3\u0026#34; 2) \u0026#34;3\u0026#34; 3) \u0026#34;v2\u0026#34; 4) \u0026#34;2\u0026#34; 127.0.0.1:6379\u0026gt; zincrby key1 5 v3 \u0026#34;8\u0026#34; # 输出加后的score 127.0.0.1:6379\u0026gt; zrem key1 v1 (integer) 1 127.0.0.1:6379\u0026gt; zrange key1 0 -1 withscores # 取出全部看下 1) \u0026#34;v2\u0026#34; 2) \u0026#34;2\u0026#34; 3) \u0026#34;v3\u0026#34; 4) \u0026#34;8\u0026#34; 127.0.0.1:6379\u0026gt; zcount key1 3 8 (integer) 1 127.0.0.1:6379\u0026gt; zcount key1 1 9 (integer) 2 127.0.0.1:6379\u0026gt; zrank key1 v2 # 排名下标从0开始 (integer) 0 ","date":"2022-07-18T00:00:00Z","permalink":"https://huangxindi.com/p/redis-%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","title":"Redis-常用数据类型"},{"content":"Redis-配置文件 路径：原先位于/opt/redis-6.2.1/redis.conf，后面我们是copy一份到etc/redis.conf作为redis后台启动的配置文件。\n配置文件中每条配置都给了充足的注释或例子。\n以下按照课程介绍配置文件中一些常用的点：\n单位 配置大小单位，开头定义了一些基本的度量单位。只支持bytes，不支持bit。大小写不敏感\n1 2 3 4 5 6 7 8 9 10 11 # Note on units: when memory size is needed, it is possible to specify # it in the usual form of 1k 5GB 4M and so forth: # # 1k =\u0026gt; 1000 bytes # 1kb =\u0026gt; 1024 bytes # 1m =\u0026gt; 1000000 bytes # 1mb =\u0026gt; 1024*1024 bytes # 1g =\u0026gt; 1000000000 bytes # 1gb =\u0026gt; 1024*1024*1024 bytes # # units are case insensitive so 1GB 1Gb 1gB are all the same. INCLUDES包含 多实例的情况可以把公用的配置文件提取出来\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ################################## INCLUDES ################################### # Include one or more other config files here. This is useful if you # have a standard template that goes to all Redis servers but also need # to customize a few per-server settings. Include files can include # other files, so use this wisely. # # Note that option \u0026#34;include\u0026#34; won\u0026#39;t be rewritten by command \u0026#34;CONFIG REWRITE\u0026#34; # from admin or Redis Sentinel. Since Redis always uses the last processed # line as value of a configuration directive, you\u0026#39;d better put includes # at the beginning of this file to avoid overwriting config change at runtime. # # If instead you are interested in using includes to override configuration # options, it is better to use include as the last line. # # include /path/to/local.conf # include /path/to/other.conf 网络相关配置 bind 1 bind 127.0.0.1 -::1 以上表示只能接受本机发出的请求，若要接收来自其他网络的请求，则要注释掉这行（不写的情况下，无限制接受任何ip地址的访问）\n生产环境肯定要写你应用服务器的地址；服务器是需要远程访问的，所以需要将其注释掉。\n如果开启了protected-mode，那么在没有设定bind ip且没有设密码的情况下，Redis只允许接受本机的响应。\nprotected-mode 1 protected-mode yes 只有将这个模式设为no，外部服务器才能访问\nport 1 port 6379 端口号默认6379\ntcp-backlog 1 tcp-backlog 511 设置tcp的backlog，backlog其实是一个连接队列，backlog队列总和=未完成三次握手队列 + 已经完成三次握手队列。在高并发环境下你需要一个高backlog值来避免慢客户端连接问题。\ntimeout 1 timeout 0 一个空闲的客户端维持多少秒会关闭，0表示关闭该功能。即永不关闭。\ntcp-keepalive 1 tcp-keepalive 300 设置心跳检测的时间，单位为秒，上面表示每300s检测一次。设置为0表示不检测。\n通用设置 守护进程 1 daemonize yes 是否为后台进程。设置为yes表示：守护进程，后台启动\npid文件 1 pidfile /var/run/redis_6379.pid 存放pid文件的位置，每个实例会产生一个不同的pid文件\n日志级别 1 2 3 4 5 6 7 # Specify the server verbosity level. # This can be one of: # debug (a lot of information, useful for development/testing) # verbose (many rarely useful info, but not a mess like the debug level) # notice (moderately verbose, what you want in production probably) # warning (only very important / critical messages are logged) loglevel notice 生产环境建议选择notice 或者warning\nlogfile 1 logfile \u0026#34;\u0026#34; 日志文件存放路径，默认无\ndatabase 1 databases 16 数据库数量默认设置为16\n安全方面 1 # requirepass foobared 是否需要密码的配置行，默认是不需要密码\n注意：在redis命令行中设置密码，当redis服务器重启就还原了。所以要想持久设置，要写到配置文件中。\nLIMITS限制 1 # maxclients 10000 设置redis同时可以与多少个客户端进行连接\n1 # maxmemory \u0026lt;bytes\u0026gt; 建议必须设置，否则，将内存占满，造成服务器宕机\n设置redis可以使用的内存量。一旦到达内存使用上限，redis将会试图移除内部数据，移除规则可以通过maxmemory-policy来指定。如果redis无法根据移除规则来移除内存中的数据，或者设置了“不允许移除”，那么redis则会针对那些需要申请内存的指令返回错误信息，比如SET、LPUSH等。\n但是对于无内存申请的指令，仍然会正常响应，比如GET等。如果你的redis是主redis（说明你的redis有从redis），那么在设置内存使用上限时，需要在系统中留出一些内存空间给同步队列缓存，只有在你设置的是“不移除”的情况下，才不用考虑这个因素。\n1 # maxmemory-policy noeviction volatile-lru：使用LRU算法移除key，只对设置了过期时间的键；（最近最少使用）\nallkeys-lru：在所有集合key中，使用LRU算法移除key\nvolatile-random：在过期集合中移除随机的key，只对设置了过期时间的键\nallkeys-random：在所有集合key中，移除随机的key\nvolatile-ttl：移除那些TTL值最小的key，即那些最近要过期的key\nnoeviction：不进行移除。针对写操作，只是返回错误信息\n1 # maxmemory-samples 5 设置样本数量，LRU算法和最小TTL算法都并非是精确的算法，而是估算值，所以你可以设置样本的大小，redis默认会检查这么多个key并选择其中LRU的那个。\n一般设置3到7的数字，数值越小样本越不准确，但性能消耗越小。\n","date":"2022-07-18T00:00:00Z","permalink":"https://huangxindi.com/p/redis-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","title":"Redis-配置文件"},{"content":"Redis-Redis基础 Redis概述 开源 key-value value支持多种类型 操作原子性 支持不同方式的排序 缓存在内存 周期性地把更新的数据写入磁盘或者把修改操作写入追加的记录文件 master-slave(主从)同步 应用场景：\n配合关系型数据库作高速缓存，降低数据库IO；分布式架构，做session共享\n多样的数据结构存储持久化数据\nRedis安装 最好在linux环境上用，所以我就直接安装在云服务器上\n前置条件：服务器要带gcc编译器，可输入gcc --version来查看是否已有；若没有，则安装，因为我的云服务器自带了，所以此步省略\n下载redis包：官网redis.io去下载（因为视频里讲的是Redis6，所以我也安装这个版本，直接用视频给出的安装包）\n步骤：\n将redis安装包ftp到服务器的/opt\n1 2 3 tar -zxvf redis-6.2.1.tar.gz cd redis-6.2.1 make # 编译 如图表示编译好了\n安装 make install\n查看安装后的文件\n1 2 3 4 5 6 7 [root@iZbp15qc4wmx335c268l5mZ bin]# ls -lrt /usr/local/bin -rwxr-xr-x 1 root root 9450208 Jul 4 21:31 redis-server -rwxr-xr-x 1 root root 4833352 Jul 4 21:31 redis-benchmark -rwxr-xr-x 1 root root 5003368 Jul 4 21:31 redis-cli lrwxrwxrwx 1 root root 12 Jul 4 21:31 redis-check-rdb -\u0026gt; redis-server lrwxrwxrwx 1 root root 12 Jul 4 21:31 redis-check-aof -\u0026gt; redis-server lrwxrwxrwx 1 root root 12 Jul 4 21:31 redis-sentinel -\u0026gt; redis-server redis-benchmark: 性能测试工具，可以在自己本子运行，看看自己本子性能如何\nredis-check-aof：修复有问题的AOF文件，rdb和aof后面讲\nredis-check-dump：修复有问题的dump.rdb文件\nredis-sentinel：Redis集群使用\nredis-server：Redis服务器启动命令\nredis-cli：客户端，操作入口\nRedis启动 前台启动（不推荐） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 [root@iZbp15qc4wmx335c268l5mZ bin]# redis-server 18353:C 04 Jul 2022 21:42:49.291 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo 18353:C 04 Jul 2022 21:42:49.291 # Redis version=6.2.1, bits=64, commit=00000000, modified=0, pid=18353, just started 18353:C 04 Jul 2022 21:42:49.291 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf 18353:M 04 Jul 2022 21:42:49.292 * monotonic clock: POSIX clock_gettime _._ _.-``__ \u0026#39;\u0026#39;-._ _.-`` `. `_. \u0026#39;\u0026#39;-._ Redis 6.2.1 (00000000/0) 64 bit .-`` .-```. ```\\/ _.,_ \u0026#39;\u0026#39;-._ ( \u0026#39; , .-` | `, ) Running in standalone mode |`-._`-...-` __...-.``-._|\u0026#39;` _.-\u0026#39;| Port: 6379 | `-._ `._ / _.-\u0026#39; | PID: 18353 `-._ `-._ `-./ _.-\u0026#39; _.-\u0026#39; |`-._`-._ `-.__.-\u0026#39; _.-\u0026#39;_.-\u0026#39;| | `-._`-._ _.-\u0026#39;_.-\u0026#39; | http://redis.io `-._ `-._`-.__.-\u0026#39;_.-\u0026#39; _.-\u0026#39; |`-._`-._ `-.__.-\u0026#39; _.-\u0026#39;_.-\u0026#39;| | `-._`-._ _.-\u0026#39;_.-\u0026#39; | `-._ `-._`-.__.-\u0026#39;_.-\u0026#39; _.-\u0026#39; `-._ `-.__.-\u0026#39; _.-\u0026#39; `-._ _.-\u0026#39; `-.__.-\u0026#39; 18353:M 04 Jul 2022 21:42:49.293 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128. 18353:M 04 Jul 2022 21:42:49.293 # Server initialized 18353:M 04 Jul 2022 21:42:49.293 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add \u0026#39;vm.overcommit_memory = 1\u0026#39; to /etc/sysctl.conf and then reboot or run the command \u0026#39;sysctl vm.overcommit_memory=1\u0026#39; for this to take effect. 18353:M 04 Jul 2022 21:42:49.293 * Ready to accept connections 但是关闭这个窗口后，redis就退出了，无法在后台运行，所以不推荐\n后台启动 备份redis.conf文件\n1 2 3 [root@iZbp15qc4wmx335c268l5mZ redis-6.2.1]# pwd /opt/redis-6.2.1 [root@iZbp15qc4wmx335c268l5mZ redis-6.2.1]# cp redis.conf /etc/redis.conf 编辑/etc/redis.conf文件，把daemonize no改为daemonize yes，daemonize是用来指定redis是否要用守护线程的方式启动\n启动redis：\n1 2 3 4 [root@iZbp15qc4wmx335c268l5mZ bin]# redis-server /etc/redis.conf [root@iZbp15qc4wmx335c268l5mZ bin]# ps -ef | grep redis root 18353 1 0 21:42 ? 00:00:01 redis-server *:6379 root 18952 18494 0 21:52 pts/2 00:00:00 grep --color=auto redis 用客户端访问：\n1 2 3 [root@iZbp15qc4wmx335c268l5mZ bin]# redis-cli 127.0.0.1:6379\u0026gt; ping PONG 关闭redis：\n1 2 3 4 5 6 7 127.0.0.1:6379\u0026gt; shutdown not connected\u0026gt; quit 或者 [root@iZbp15qc4wmx335c268l5mZ bin]# redis-cli shutdown [root@iZbp15qc4wmx335c268l5mZ bin]# ps -ef | grep redis root 19462 18494 0 21:59 pts/2 00:00:00 grep --color=auto redis Redis基础介绍 端口号 端口号 6379\n来自女星Alessia Merz -\u0026gt; 对应手机9宫格的四位数\n对应数据库 默认16个数据库（0-15），默认是0号库\n切换数据库：\n1 2 3 4 5 6 7 8 [cindy@iZbp15qc4wmx335c268l5mZ ~]$ redis-cli 127.0.0.1:6379\u0026gt; select 8 OK 127.0.0.1:6379[8]\u0026gt; select 15 OK 127.0.0.1:6379[15]\u0026gt; select 0 OK 127.0.0.1:6379\u0026gt; 统一密码管理，所有库同样密码\n单线程+多路IO复用技术 ","date":"2022-07-04T00:00:00Z","permalink":"https://huangxindi.com/p/redis-redis%E5%9F%BA%E7%A1%80/","title":"Redis-Redis基础"},{"content":"ORACLE-存储过程 概念 存储过程(Stored Procedure)：\n一组为了完成某功能的一段sql语句集（一种PL/SQL块），存储在数据库中，经过第一次编译后再次调用就无需再次编译，用户通过调用指定存储过程名称和给定参数来调用。当数据库启动时,会自动加载到数据库内存中,执行效率高。\n当对数据库进行复杂操作时(如对多个表进行Update、Insert、Query、Delete时），可将此复杂操作用存储过程封装起来与数据库提供的事务处理结合一起使用。\n函数和存储过程的区别 https://www.php.cn/oracle/489142.html#/\n存储过程 函数 用于在数据库中完成特定的操作或任务（如插入、删除等） 用于特定数据（如查询返回值） 程序头部声明用PROCEDURE 程序头部声明用FUNCTION 程序头部声明时不需要返回类型 程序头部声明时要描述返回类型，而且PL/SQL块至少要包括一个有效的RETURN语句 可以使用IN/OUT/IN OUT3种参数模式 可以使用IN/OUT/IN OUT3种参数模式 可以作为独立的PL/SQL语句执行 不能独立执行，必须作为表达式的一部分调用 可以通过OUT/IN OUT返回零个或多个值 对过RETURN语句返回一个值，且该值与声明部分一致，也可以通过OUT类型的参数带出变量 SQL语句（DML或SELECT）中不可以调用存储过程 SQL语句（DML或SELECT）中可以调用函数 优点 更快（无需再次编译） 模块性 可维护性高 节省网络传输（存储在数据库中） 更安全（存储过程控制执行权限） 存储过程创建语法 1 2 3 4 5 6 7 8 9 10 11 CREATE [OR REPLACE] PROCEDURE pro_name [(p1 in|out 数据格式, p2 in|out 数据格式, ...)] is|as 声明部分 begin plsql代码块 exception 异常处理部分 end; 注意：\nOR REPLACE表示的是若已存在同名存储过程，则替换原内容\n形参定义中：\n参数不区分大小写，不需要DECLARE关键字\n其中参数IN表示输入参数，是参数的默认模式。入参值无法被修改。 OUT表示返回值参数，类型可以使用任意Oracle中的合法类型。 OUT模式定义的参数只能在过程体内部赋值，表示该参数可以将某个值传递回调用他的过程 IN OUT表示该参数可以向该过程中传递值，也可以将某个值传出去。\n声明部分：用于存储过程使用到的变量声明 https://www.cnblogs.com/caiguangbi-53/p/11398696.html#/\n声明的三种方法\n直接声明数据类型，如p1 varchar2(60)或p2 number(2) 沿用数据表中某数据字段类型%TYPE，如p1 table1.filed1%TYPE 沿用数据表中的所有数据类型%ROWTYPE，如p1 table1%ROWTYPE 存储过程中的字段赋值\n赋值的三种方法\n直接赋值:=，如v_sql varchar2(100) := 'SELECT STUDENT_NAME FROM STUDENT where orgcode=to_char(410621101233)';\nselect 字段名 into 变量 from 表名\n1、查询某字段：\n1 2 3 SELECT ORGSEQ INTO V_ORGSEQ FROM BASE_ORG_INFO WHERE ORGID = (SELECT PARENTORGID FROM BASE_ORG_INFO WHERE ORGID = V_ORGID); 2、查询表所有字段：\n1 SELECT * INTO V_ROW_VIRTUAL_CARD FROM VIRTUAL_CARD T where t.id = 5120; 注意：*查询结果只能返回一条记录\nexecute immediate sql into 变量\n1 2 3 4 5 begin v_sql := \u0026#39;SELECT ORGSEQ FROM BASE_ORG_INFO where orgcode=to_char(410621101233)\u0026#39;; execute immediate v_sql INTO V_ORGSEQ; DBMS_OUTPUT.put_line(V_ORGSEQ); END; 异常处理：Oralce有3种异常处理方式（待学 TODO）\n存储过程创建举例（https://www.cnblogs.com/diandixingyun/p/12986482.html#/）： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 create or replace procedure sp_score_pm( p_in_stuid in varchar2, --学号 p_in_courseid in varchar2, --课程ID p_out_pm out number --排名 ) is ls_score number:=0; ls_pm number:=0; begin --获取该学生的成绩 select t.score into ls_score from score t where t.stuid = p_in_stuid and t.courseid = p_in_courseid; --获取成绩比该学生高的人数 select count(1) into ls_pm from score t where t.courseid = p_in_courseid and t.score\u0026gt;ls_score; --得到该学生的成绩排名 p_out_pm:=ls_pm+1; exception when no_data_found then dbms_output.put_line(\u0026#39;该学生的课程：\u0026#39;||p_in_courseid|| \u0026#39;的成绩在成绩表中找不到\u0026#39;); end; 调用存储过程 exec 仅支持在sqlplus中使用\ncall 在所有工具中都可以使用\n在函数中直接调用 1 2 3 begin fun(); -- 调用存储过程 end; 游标的使用 TODO\n存储过程的事务处理 参考 https://www.cnblogs.com/linjiqin/archive/2011/04/18/2019990.html#/\n概念 事务：确保数据的一致性，由一些DML语句组成，要么都执行，要么都不执行\n命令：\nCOMMIT SAVEPOINT ROLLBACK ROLLBACK TO SAVEPOINT 例子 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 create or replace procedure stu_proc ( v_id in number, v_name in varchar2, v_age in number, v_msg out varchar2 ) as begin insert into student(id, sname, age) values (v_id, v_name, v_age); commit; v_msg:=\u0026#39;添加成功\u0026#39;; exception when others then rollback; v_msg:=\u0026#39;失败成功\u0026#39;; RAISE_APPLICATION_ERROR(-20010, \u0026#39;ERROR：违反唯一索引约束！\u0026#39;); end; 非存储过程的事务处理例子 https://www.cnblogs.com/zengyu1234/p/15391621.html#/ ：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 --使用事务控制银行转账业务 declare mc string(64):=\u0026#39;转账成功\u0026#39;; mf string(64):=\u0026#39;转账失败\u0026#39;; err_exception exception; pragma exception_init(err_exception,-2290); begin --向转入账户的交易记录表中插入一条交易记录 INSERT INTO business VALUES(seq_emp.nextval,10000,1,systimestamp,288); --向转出账户的交易记录表中插入一条交易记录 INSERT INTO business VALUES(seq_emp.nextval,10000,0,systimestamp,287); --更新转入方账户余额（+20000） update account set balance = balance+10000 where id = 288; --更新转出方账户余额（-20000） update account set balance = balance-10000 where id = 287; commit;-- 提交事务 dbms_output.put_line(mc); exception when err_exception then rollback; --撤销所有事务操作 dbms_output.put_line(mf); end; select * from aaa; --事务执行中部分撤销 declare me string(64):=\u0026#39;0不能做除数\u0026#39;; zer_err exception; pragma exception_init(zer_err,-1476); begin INSERT INTO aaa VALUES(\u0026#39;呼伦贝尔\u0026#39;); SAVEPOINT insert_point;--设置一个保存点 dbms_output.put_line(56/0); commit; exception when zer_err then rollback to insert_point;--撤销到保存点 dbms_output.put_line(me); end; select 56/0 from dual;--查看错误代码 参考链接 https://blog.csdn.net/weixin_41968788/article/details/83659164#/\nhttps://www.cnblogs.com/inmeditation/p/12090574.html#/\nhttps://www.cnblogs.com/diandixingyun/p/12986482.html#/\nhttps://www.cnblogs.com/taiguyiba/p/7809310.html#/\nhttps://www.cnblogs.com/dersome/p/14304205.html#/\n","date":"2022-07-03T00:00:00Z","permalink":"https://huangxindi.com/p/oracle-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/","title":"ORACLE-存储过程"},{"content":"Redis-NoSQL数据库 NoSQL数据库概述 NoSQL(No only SQL)，泛指非关系型数据库，数据与业务逻辑无关，以key-value形式存储。因此可以大大增加数据库的扩展能力。\n特性：\n不遵循SQL标准 不支持ACID（SQL四特性） 远超SQL性能 适用场景：读写高并发、海量数据、高可扩展性\n不适用场景：需要事务、用到基于sql 的结构化查询存储，处理复杂的关系\n注意：用不着sql的和用了sql也不行的情况，请考虑用NoSql\n常见NoSQL数据库 Memcache 不持久化（断电即数据消失） 存储只支持字符串类型 一般是作为缓存数据库辅助持久化的数据库 Redis 持久化，主要用作备份恢复 支持多种数据结构（如 list、set、hash、zset） 一般是作为缓存数据库辅助持久化的数据库 MongoDB 文档型数据库（json） 支持二进制数据及大型对象 独立的数据库，或者配合RDBMS Hbase（Hadoop项目中的数据库。它用于需要对大量的数据进行随机、实时的读写操作的场景中） Apache Cassandra（其设计目的在于管理由大量商用服务器构建起来的庞大集群上的海量数据集(数据量通常达到PB级别)） 图关系型数据库 ","date":"2022-07-03T00:00:00Z","permalink":"https://huangxindi.com/p/redis-nosql%E6%95%B0%E6%8D%AE%E5%BA%93/","title":"Redis-NoSQL数据库"},{"content":"Redis开始 资源 【尚硅谷】Redis 6 入门到精通 超详细 教程\nhttps://www.bilibili.com/video/BV1Rv41177Af?spm_id_from=..search-card.all.click\u0026vd_source=388c468b983bcf7b800d0e7cfb9fc719#/\n2022-07-03 开始跟着这个课程入门，笔记也是配套这个课程的\n","date":"2022-07-03T00:00:00Z","permalink":"https://huangxindi.com/p/redis%E5%BC%80%E5%A7%8B/","title":"Redis开始"},{"content":"文档注释 本来以为单行和多行注释没啥好学的，本文只想了解下【文档注释】。写到最后发现，如何优雅的注释本身，也是门大学问。\n定义 Java普通注释格式\n1 2 3 4 // 或 /* */ Java文档注释格式\n1 2 3 /** @xxx */ 文档注释主要用于生成javadoc文件的，便于我们对所写的类、方法等进行解释。支持HTML格式。\n文档注释目标 https://blog.csdn.net/weixin_39190897/article/details/81880411#/\n1 2 3 4 5 6 7 8 9 （1）类注释。类注释用于说明整个类的功能、特性等，它应该放在所有的“import”语句之后，在class定义之前。这个规则也适用于接口（interface）注释。 （2）方法注释。方法注释用来说明方法的定义，比如，方法的参数、返回值及说明方法的作用等。方法注释应该放在它所描述的方法定义前面。 （3）属性注释。默认情况下，javadoc只对公有（public）属性和受保护属性（protected）产生文档——通常是静态常量。 （4）包注释。类、方法、属性的注释都直接放到Java的源文件中，而对于包的注释，无法放到Java文件中去，只能通过在包对应的目录中添加一个package.html的文件来达到这个目的。当生成HTML文件时，package.html文件的和部分的内容将会被提取出来当做包的说明。关于包注释，后面还会有更进一步的解释。 （5）概要注释。除了包注释外，还有一种类型的文档无法从Java源文件中提取，就是对所有类文件提供概要说明的文件。同样的，也可以为这类注释单独新建一个HTML文件，这个文件的名字为“overview.html”，它的和标记之间的内容都会被提取。 文档注释格式 概要描述：一段话简要描述基本内容 详细描述：几大段描述 功能 和 相关情况 文档标注：参数、作者、返回值等 注释标签释义 可参考 https://www.runoob.com/java/java-documentation.html#/ 等\n常见的例如：\n1 2 3 4 5 6 7 @author 作者 @param 输入参数 @return 返回参数 @exception 异常 @throws 同exception @deprecated 指明一个过期的类或成员（不推荐使用的方法） @version 版本 javadoc 工具 参考 https://www.cnblogs.com/codepeace/archive/2021/04/30/14722083.html#/\n命令行\n在要生成javadoc的.java的文件夹中，cmd输入命令javadoc -encoding UTF-8 -charset UTF-8 *.java\n其中-encoding和-charset分别是编码格式和字符集格式。javadoc命令参数解释，可参考见 https://www.csdn.net/tags/MtjaMgwsMTU4MzAtYmxvZwO0O0OO0O0O.html#/\nIDE中生成\n生成的 index.html 文件，就是我们想要的\n多说两句 一般IDE都有提供可以自定义文档注释模板的地方，可以定义适合自己的格式，一劳永逸\n有需要的话，可以自己定义文档注释标签\n注释侧重WHY，而不是HOW\n注释要优雅 https://zhuanlan.zhihu.com/p/41127713#/ ，例如下面的文档注释：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * \u0026lt;p\u0026gt;Checks if CharSequence contains a search character, handling {@code null}. * This method uses {@link String#indexOf(int)} if possible.\u0026lt;/p\u0026gt; * * \u0026lt;p\u0026gt;A {@code null} or empty (\u0026#34;\u0026#34;) CharSequence will return {@code false}.\u0026lt;/p\u0026gt; * * \u0026lt;pre\u0026gt; * StringUtils.contains(null, *) = false * StringUtils.contains(\u0026#34;\u0026#34;, *) = false * StringUtils.contains(\u0026#34;abc\u0026#34;, \u0026#39;a\u0026#39;) = true * StringUtils.contains(\u0026#34;abc\u0026#34;, \u0026#39;z\u0026#39;) = false * \u0026lt;/pre\u0026gt; * * @param seq the CharSequence to check, may be null * @param searchChar the character to find * @return true if the CharSequence contains the search character, * false if not or {@code null} string input * @since 2.0 * @since 3.0 Changed signature from contains(String, int) to contains(CharSequence, int) */ public static boolean contains(final CharSequence seq, final int searchChar) { if (isEmpty(seq)) { return false; } return CharSequenceUtils.indexOf(seq, searchChar, 0) \u0026gt;= 0; } 关于注释的其他 1 巧用标记\nTODO 有未完成的事项 FIXME 代码有已知问题待修复 HACK 表示代码有hack逻辑 参考链接 https://www.cnblogs.com/codepeace/archive/2021/04/30/14722083.html#/\nhttps://zhuanlan.zhihu.com/p/41127713#/\n","date":"2022-06-30T00:00:00Z","permalink":"https://huangxindi.com/p/%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A/","title":"文档注释"},{"content":"Linux-top命令 概念 实时显示系统进程信息的命令、内存使用情况、系统负载情况等（有点类似于Windows系统下的任务管理器）\n执行权限：所有用户\n命令 #TODO\n快捷键 摘自：https://blog.csdn.net/Luckiers/article/details/123909819#/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 Ctrl+L 擦除并且重写屏幕。 h或者? 显示帮助画面，给出一些简短的命令总结说明。 k 终止一个进程。系统将提示用户输入需要终止的进程PID，以及需要发送给该进程什么样的信号。一般的终止进程可以使用15信号；如果不能正常结束那就使用信号9强制结束该进程。默认值是信号15。在安全模式中此命令被屏蔽。 i 忽略闲置和僵死进程。这是一个开关式命令。 q 退出程序。 r 重新安排一个进程的优先级别。系统提示用户输入需要改变的进程PID以及需要设置的进程优先级值。输入一个正值将使优先级降低，反之则可以使该进程拥有更高的优先权。默认值是10。 S 切换到累计模式。 s 改变两次刷新之间的延迟时间。系统将提示用户输入新的时间，单位为s。如果有小数，就换算成m s。输入0值则系统将不断刷新，默认值是5 s。需要注意的是如果设置太小的时间，很可能会引起不断刷新，从而根本来不及看清显示的情况，而且系统负载也会大大增加。 f或者F 从当前显示中添加或者删除项目。 o或者O 改变显示项目的顺序。 l 切换显示平均负载和启动时间信息。 m 切换显示内存信息。 t 切换显示进程和CPU状态信息。 c 切换显示命令名称和完整命令行。 M 根据驻留内存大小进行排序。 P 根据CPU使用百分比大小进行排序。 T 根据时间/累计时间进行排序。 W 将当前设置写入~/.toprc文件中。这是写top配置文件的推荐方法。 结果解读 解读截图（来自 https://blog.csdn.net/zhuoya_/article/details/81049967#/）：\n分析：top命令截图（以我自己的云主机为例）\n前5行是系统状态总览，后面是依次分析系统正在运行的每个任务的状态\n第1行：任务队列信息（同 uptime 命令的执行结果，依次是当前时间、系统已经运行的时间、当前用户数、系统负载【即任务队列的平均长度。 三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值】）\n第2行：进程任务信息（依次是进程总数、正在运行、睡眠、停止、僵尸进程数）\n第3行：用户空间CPU的占比\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 us: is meaning of \u0026#34;user CPU time\u0026#34; sy: is meaning of \u0026#34;system CPU time\u0026#34; ni: is meaning of\u0026#34; nice CPU time\u0026#34; id: is meaning of \u0026#34;idle\u0026#34; wa: is meaning of \u0026#34;iowait\u0026#34; hi：is meaning of \u0026#34;hardware irq\u0026#34; si : is meaning of \u0026#34;software irq\u0026#34; st : is meaning of \u0026#34;steal time\u0026#34; us 用户空间占用CPU百分比 sy 内核空间占用CPU百分比 ni 用户进程空间内改变过优先级的进程占用CPU百分比 id 空闲CPU百分比 wa 等待输入输出的CPU时间百分比 hi 硬件中断 si 软件中断 st: 实时 https://blog.csdn.net/sdmxdzb/article/details/84575118#/ 第4行：内存信息（物理总内存、空闲内存、已使用、用户内核缓存量）\n第5行：交换区量（总、空闲、已使用、作为缓存的交换分区的大小）\n下面是详细进程的信息：释义来自 https://blog.csdn.net/Luckiers/article/details/123909819#/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 列名\t含义 PID\t进程id PPID\t父进程id RUSER\tReal user name UID\t进程所有者的用户id USER\t进程所有者的用户名 GROUP\t进程所有者的组名 TTY\t启动进程的终端名，不是从终端启动的进程则显示为 ? PR\t优先级 NI\tnice值，负值表示高优先级，正值表示低优先级 P\t最后使用的CPU，仅在多CPU环境下有意义 %CPU\t上次更新到现在的CPU时间占用百分比 l TIME\t进程使用的CPU时间总计，单位秒 TIME+\t进程使用的CPU时间总计，单位1/100秒 %MEM\t进程使用的物理内存百分比 VIRT\t进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES SWAP\t进程使用的虚拟内存中，被换出的大小，单位kb RES\t进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA CODE\t可执行代码占用的物理内存大小，单位kb DATA\t可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb SHR\t共享内存大小，单位kb nFLT\t页面错误次数 nDRT\t最后一次写入到现在，被修改过的页面数 S\t进程状态 D=\t不可中断的睡眠状态 R=\t运行 S=\t睡眠 T=\t跟踪/停止 Z=\t僵尸进程 COMMAND\t命令名/命令行 WCHAN\t若该进程在睡眠，则显示睡眠中的系统函数名 Flags\t任务标志，参考 sched.h 默认情况下仅显示比较重要的 PID、USER、PR、NI、VIRT、RES、SHR、S、%CPU、%MEM、TIME+、COMMAND 列。可以通过下面的快捷键来更改显示内容。\nf键：按 f 键之后会显示列的列表，按 a-z 即可显示或隐藏对应的列，最后按回车键确定。 o键：可以改变列的显示顺序。按小写的 a-z 可以将相应的列向右移动，而大写的 A-Z 可以将相应的列向左移动。最后按回车键确定。 大写的F或O键：然后按 a-z 可以将进程按照相应的列进行排序。而大写的 R 键可以将当前的排序倒转。\n发现问题 利用top发现系统问题\nnew add1\n参考链接 https://m.runoob.com/linux/linux-comm-top.html#/\nhttps://blog.csdn.net/qq_19922839/article/details/120011790#/\nhttps://blog.csdn.net/zhuoya_/article/details/81049967#/\nhttp://t.zoukankan.com/hehehaha-p-6332818.html#/\nhttps://blog.csdn.net/Luckiers/article/details/123909819#/\nhttps://blog.csdn.net/sdmxdzb/article/details/84575118#/\n","date":"2022-06-15T00:00:00Z","permalink":"https://huangxindi.com/p/linux-top%E5%91%BD%E4%BB%A4/","title":"Linux-top命令"},{"content":"ORACLE-序列 背景：了解NEXTVAL的概念\nORACLE序列 概念 是oacle提供的用于产生一系列唯一数字的数据库对象。主要用于提供主键值。\nsequence是序列号生成器，可以为表中的行自动生成序列号，产生一组等间隔的数值(类型为数字)。**其主要的用途是生成表的主键值，可以在插入语句中引用，在插入之前，获取序列号nextval值，然后进行插入。**也可以通过查询检查当前值，或使序列增至下一个值。（https://www.jb51.net/article/220007.htm#/）\n创建方式 1 2 3 4 5 6 7 8 9 10 11 12 13 CREATE SEQUENCE sequence //创建序列名称 [INCREMENT BY n] //递增的序列值是n 如果n是正数就递增,如果是负数就递减 默认是1 [START WITH n] //开始的值,递增默认是minvalue 递减是maxvalue [{MAXVALUE n | NOMAXVALUE}] //最大值 [{MINVALUE n | NOMINVALUE}] //最小值 [{CYCLE | NOCYCLE}] //循环/不循环 [{CACHE n | NOCACHE}];//分配并存入到内存中 CURRVAL CURRVAL 中存放序列的当前值\nSELECT INR_REQUIRMENT_SQUENCE.CURRVAL FROM dual - 获取当前的sequence的值\nCURRVAL = 最后一次对 NEXTVAL 的引用所返回的值\nNEXTVAL NEXTVAL 返回序列中下一个有效的值，任何用户都可以引用\nselect SEQ_TABLESPACETEST_con.nextval from dual - 获取下一个值，序列经过查询每次也会自增\n注意：\n第一次访问序列时，需要先引用 sequence.NEXTVAL获取初始值。第一次在没有访问NEXTVAL前，是没有CURRVAL的。 后面每次引用 NEXTVAL，用已定义的 step 添加序列值并返回序列新的添加以后的值。 一个sql语句中只能生成一次nextval，就算调用多次，获取的也只有一个nextval nextval添加完的序列值不能取消，也就是说就算后面回滚当前事务，也不会还原。故：某些序列数可能被跳过 假设 sequence.CURRVAL 和 sequence.NEXTVAL 都出如今一个 SQL 语句中，则序列仅仅添加一次。在这样的情况下。每一个 sequence.CURRVAL 和 sequence.NEXTVAL 表达式都返回同样的值，无论在语句中sequence.CURRVAL 和 sequence.NEXTVAL 的顺序。 注意：要对序列使用 NEXTVAL 或 CURRVAL。必须对序列具有选择特权或对数据库具有 DBA 特权。\n参考链接 https://blog.csdn.net/java958199586/article/details/7360152\nhttps://www.itxm.cn/post/35733.html#/\n","date":"2022-06-13T00:00:00Z","permalink":"https://huangxindi.com/p/oracle-%E5%BA%8F%E5%88%97/","title":"ORACLE-序列"},{"content":"SQL函数篇 lpad/rpad函数 lpad/rpad函数 此为Oracle函数。l/r(left/right)+pad(填充)，表示从左边/右边填充。\n格式：lpad( string, padded_length, [ pad_string ] ) （rpad同理）\n参数一：被填充/截取的原字符串\n参数二：最终长度\n参数三：填充的字符，若无赋值，则默认填充空格\n注意：若原字符串长度大于参数二的长度，则lpad从左开始截取指定长度（rpad从右边）\n1 2 3 4 5 6 7 8 9 SQL\u0026gt; select lpad(\u0026#39;abcde\u0026#39;,10,\u0026#39;x\u0026#39;) from dual; LPAD(\u0026#39;ABCDE\u0026#39;,10,\u0026#39;X\u0026#39;) -------------------- xxxxxabcde SQL\u0026gt; select lpad(\u0026#39;abcde\u0026#39;,2) from dual; LPAD(\u0026#39;ABCDE\u0026#39;,2) --------------- ab 参考链接：https://blog.csdn.net/yulei_qq/article/details/17389901#/\n","date":"2022-06-13T00:00:00Z","permalink":"https://huangxindi.com/p/sql%E5%87%BD%E6%95%B0%E7%AF%87/","title":"SQL函数篇"},{"content":"异常的处理 分类 异常（Exception） 运行时异常RuntimeException（不受检异常）：此类异常编译器不检查，一般是程序逻辑错误引起的，可捕获处理，也可不处理。如NullPointerException、ArrayIndexOutBoundException。 非运行时异常/编译时异常（受检异常）：编译器检查此类异常，并且强制要做处理（捕获或抛出）。如IOException。 错误（Error）：非代码性错误，与异常不同的是，这类错误是程序无法处理的。此类错误发生时，JVM将终止线程。如Virtual MachineError（虚拟机运行错误）、NoClassDefFoundError（类定义错误）。 异常的层次 Exception和Error都继承自Throwable类。层次图可见下图（列出主要的异常类）\n常见内置异常类 Java 语言定义了一些异常类在 java.lang 标准包中。主要分类可见 https://www.runoob.com/java/java-exceptions.html#/\n或者链接 https://blog.csdn.net/Pandafz1997/article/details/119898686#/ 给出的：\n异常类\t说明 ClassCastException\t类型转换异常 ArrayIndexOutOfBoundsException\t数组越界异常 NegativeArraySizeException\t指定数组维数为负值异常 ArithmeticException\t算数异常 InternalException\tJava系统内部异常 NullPointerException\t空指针异常 IllegalAccessException\t类定义不明确所产生的异常 IOException\t一般情况下不能完成I/O操作产生的异常 EOFException\t打开文件没有数据可以读取的异常 FileNotFoundException\t在文件系统中找不到文件路径或文件名称时的异常 ClassNotFoundException\t找不到类或接口所产生的异常 CloneNotSupportedException\t使用对象的clone方法但无法执行Cloneable所产生的异常\n异常处理 方法1：捕获处理 try+catch(+finally)\n1 2 3 4 5 6 7 try { xxx; //程序 } catch (ExceptionName e) { xxx; //捕获异常时的处理 } finally { xxx; //最终执行的代码块 } 若指定捕获特定的异常类，则在catch中指定异常类；若要捕获任意异常，则直接用Exception e。\nfinally不是必须的，包含无论是否发生异常都会被执行到的代码块（一般包含清理类型等收尾善后性质的语句）。\n有4种特殊情况，finally块不会被执行：\nfinally语句块中发生了异常 前面的代码中执行了System.exit()退出程序 程序中所在的线程死亡 关闭CPU 需要注意的是，就算try块中有return，也会先执行完finally再return。\n当try中抛出异常且catch中有return语句，finally中没有return语句，java先执行catch中非return语句，再执行finally语句，最后执行return语句。若try中没有抛出异常，则程序不会执行catch体里面的语句，java先执行try中非return语句，再执行finally语句，最后再执行try中的return语句。\n但是：finally中有return时，会覆盖掉try和catch中的return。\n如果finally中定义的数据是基本数据类型或文本字符串，则在finally中对该基本数据的改变不起作用，try中的return语句依然会返回进入finally块中之前保存的值；如果finally中定义的数据是是引用类型，则finally中的语句会起作用，try中return语句的值就是在finally中改变后该属性的值。\n以上举例见：https://blog.csdn.net/Pandafz1997/article/details/119898686#/\ntry不能单独存在，必须跟上catch或finally。\n多重捕获 1 2 3 4 5 6 7 try { xxx; //程序 } catch (ExceptionName1 e) { xxx; //捕获异常1时的处理 } catch (ExceptionName2 e) { xxx; //捕获异常2时的处理 } 执行逻辑：依次匹配异常，当匹配到该异常或尝试匹配完所有异常后，停止匹配。\n通常，为捕获到所有可能出现的异常，可以在处理异常的末尾，加上Exception 类，这样即可以使所有异常都被捕捉到，也可以防止想捕获具体异常时被它提前捕获。\n方法2：抛出异常 throw（用于抛出异常），throws（用在方法签名中，用于声明该方法可能抛出的异常）\n1 2 3 public void fun() throws ExceptionName1, ExceptionName2 { xxx; //可能抛出异常的代码块 } 若指定抛出特定的异常类，则在throws后面指定异常类；若要抛出任意异常，则直接用Exception。可抛出多个异常类，用逗号隔开（如上）。\n若要在执行代码块中手动抛出异常，格式为：throw new 异常类名(参数)；。通常用于抛出自定义的异常类。\n1 2 3 public void fun() throws ArithmeticException { throw new ArithmeticException(\u0026#34;异常信息：除数不能为0\u0026#34;);//抛出具体问题，编译时不检测 } throw在方法体中，程序会在throw语句后立即终止，它后面的语句执行不到（后面的语句写了也会编译不通过）。\ntry+catch(+finally) 和 throw 并不是互斥的，两者可以结合使用。例如：\n1 2 3 4 try { xxx; throw new ExceptionName1(\u0026#34;eMessage\u0026#34;); } catch .... 可以在finally语句块中有return语句，finally语句可以让throw和return共存。\n注意：调用方法必须遵循一个原则：若覆盖一个方法，则不能声明与覆盖方法不同的异常，声明的任何异常必须是被覆盖方法所声明异常的同类或子类。如下例子（https://blog.csdn.net/Pandafz1997/article/details/119898686#/）：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 public class Example6_3 { void method1() throws IOException { }//合法 //编译错误，必须捕获或声明抛出IOException void method2() { method1(); } //编译错误，必须捕获或声明抛出IOException或其父类 void method3() throws IOError { method1(); } //合法，声明抛出IOException void method3() throws IOException { method1(); } //合法，声明抛出Exception，Exception是IOException的父类 void method4() throws Exception { method1(); } //合法，捕获IOException void method5() { try { method1(); }catch (IOException e){ } } //编译错误，必须捕获或声明抛出Exception void method6() { try { method1(); }catch (IOException e){ throw new Exception(); } } //合法，声明抛出Exception void method7() throws Exception { try { method1(); }catch (IOException e){ throw new Exception(); } } } 常用方法 1 public String getMessage() 返回关于发生的异常的详细信息。这个消息在Throwable 类的构造函数中初始化了。 2 public Throwable getCause() 返回一个 Throwable 对象代表异常原因。 3 public String toString() 返回此 Throwable 的简短描述。 4 public void printStackTrace() 将此 Throwable 及其回溯打印到标准错误流。。 5 public StackTraceElement [] getStackTrace() 返回一个包含堆栈层次的数组。下标为0的元素代表栈顶，最后一个元素代表方法调用堆栈的栈底。 6 public Throwable fillInStackTrace() 用当前的调用栈层次填充Throwable 对象栈层次，添加到栈层次任何先前信息中。 自定义异常 Try-With-Resources 参考链接 https://blog.csdn.net/Pandafz1997/article/details/119898686#/\nhttps://www.runoob.com/java/java-exceptions.html#/\nhttps://blog.csdn.net/java_cxrs/article/details/91661623#/\n","date":"2022-06-04T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%BC%82%E5%B8%B8%E7%9A%84%E5%A4%84%E7%90%86/","title":"异常的处理"},{"content":"开始Hugo+Github Pages 参考：https://www.gohugo.org/#/\n准备工作准备 安装Hugo，git过程略\n配置Hugo路径到环境变量Path 过程略\n生成站点 1 hugo new site /D:/hugo/huangxdBlog 生成站点到本地路径：/D:/hugo/huangxdBlog\n可以看到/D:/hugo/huangxdBlog下已生成初始站点结构：\n1 2 3 4 5 ▸ archetypes/ ▸ content/ ▸ layouts/ ▸ static/ config.toml 创建文章 1 hugo new about.md 生成路径自动为：/content/about.md\n1 hugo new post/first.md 生成路径自动为：/content/post/about.md\n安装皮肤模板 从 https://www.gohugo.org/theme/#/ 或者 https://themes.gohugo.io/#/挑选合适的模板，下载\n1 2 $ cd themes $ git clone https://github.com/spf13/hyde.git 本地调试 在本地运行并预览网站效果\n1 hugo server --theme=angels-ladder --buildDrafts 注意：将hyde换成自己的主题名\n如果已经在config.toml中配置了theme，则运行语句可以缩减为：\n1 hugo server --buildDrafts 浏览器里打开链接，可浏览本地效果:\n1 http://localhost:1313 部署 GitHub上先新建一个仓库（命名：#pipony#(换成自己的github用户名).github.io） 生成最终页面 在根目录执行：\n1 hugo --theme=hyde --baseUrl=\u0026#34;http://pipony.github.io/\u0026#34; 同理：在配置文件中若已经指定了主题，则可以忽略--theme参数：\n1 hugo --baseUrl=\u0026#34;http://pipony.github.io/\u0026#34; 此时会在/public目录下生成所有静态页面，再将/public/*上传到github的main分支即可（注意：不要变成master分支了）\n（注意，以上命令并不会生成草稿页面，如果未生成任何文章，请去掉文章头部的 draft=true 再重新生成。）\n配置 根目录config.toml中，修改baseURL = \u0026lsquo;https://pipony.github.io/' （自己的github地址）\n查看效果 1 http://pipony.github.io/ ","date":"2022-05-15T00:00:00Z","permalink":"https://huangxindi.com/p/%E5%BC%80%E5%A7%8Bhugo-github-pages/","title":"开始Hugo+Github Pages"},{"content":"数据库无效对象 背景：报“ORACLE存在无效对象，可能影响应用性能，评估是否重建对象”\n概念 无效：INVALID 对象：视图、物化视图、函数、包、触发器等 无效 PL/SQL 对象和不可用索引会对性能产生影响。无效 PL/SQL 对象必须先进行重编译，然后才能使用。这需要在执行尝试访问 PL/SQL 程序包、过程或函数的第一个操作之前花费一段编译时间。如果 PL/SQL 重编译未成功，，则操作会因发生错误而失败。优化程序会忽略不可用索引。如果 SQL 语句性能的好坏取决于已标记为不可用的索引，则只有重建索引才能改善性能。\n如果查找到 INVALID 状态的 PL/SQL 对象，需要回答的第一个问题是“此对象曾经是 VALID 的吗？”应用程序开发人员常常会忘记清除不起作用的代码。如果 PL/SQL 对象因代码错误而无效，则除了纠正该错误之外，没有什么别的方法。如果该过程在过去曾经有效，最近才变为无效，则可选择以下两种方法解决这个问题：\n1.不做任何处理。如果需要，大多数 PL/SQL 对象在调用时会自动重新编译。用户在对象重新编译时会经历短暂的延迟。（大多数情况下，这种延迟不十分明显。）\n2.手动重新编译无效对象。\n无效对象产生的原因 当被引用对象的结构变更时，都会使得相关的依赖对象转变为INVALID状态\n如视图A来源于表B，当表B的结构改变时，会导致视图A变成无效对象。但当再一次调用视图A时，会自动编译视图A，使其再次变为有效。\n发布SQL脚本时（包、存储过程、函数等），没有充分测试，编译时出错，这时对象变为无效。\n数据库升级、迁移时，出现大量无效对象(本质原因，臆测归结为原因1)\n诸如此类各种情况：例如，Oracle 会自动维护分区索引，对于全局索引，如果在对分区表操作时，没有指定update index，则会导致全局索引失效，需要重建。\n查找无效对象 统计失效对象 执行用户：SYSTEM用户或其他有权限的用户\n1 2 3 4 SQL\u0026gt; select owner, object_name, object_type from dba_objects t where status = \u0026#39;INVALID\u0026#39; order by t.owner,t.object_type; 或者\n1 2 3 4 5 select owner, object_type, status, count(*) from dba_objects where status=\u0026#39;INVALID\u0026#39; group by owner, object_type, status order by owner, object_type 查看具体失效对象 1 2 3 4 5 6 7 8 col owner for a20; col object_name for a32; col object_type for a16 col status for a8 select owner, object_name, object_type, status from dba_objects where status=\u0026#39;INVALID\u0026#39; order by 1,2,3; 解决 重新编译失效的对象（以下步骤参考：https://developer.aliyun.com/article/34172?spm=5176.24320532.content1.1.1b6b12c2lTMMVr#/）\n方法1：手工编译（针对少量对象失效情况）\n方法2：利用utlrp.sql（执行@$ORACLE_HOME/rdbms/admin/utlrp.sql脚本）脚本编译无效对象\n该脚本可以在数据库运行的状态下执行编译invalid对象；建立在数据库进行迁移、升级、降级后都运行一遍utlrp.sql\n1 2 3 4 oracle用户下执行 $cd $ORACLE_HOME/rdbms/admin $sqlplus / as sysdba SQL\u0026gt;@utlprp.sql 许多情况下，由于数据库的升级或迁移，会导致数据库中的对象失效。由于对象 之间可能存在复杂的倚赖关系，所以手工编译通常无法顺利通过。通常我们会在Oracle的升级指导中看到这个脚本，Oracle强烈推荐在 migration/upgrade/downgrade之后，通过运行此脚本编译失效对象。但是注意,Oracle提醒，此脚本需要用SQLPLUS以 SYSDBA身份运行，并且当时数据库中最好不要有活动事物或DDL操作，否则极容易导致死锁的出现（这是很容易理解的）。\n方法3：利用ORACLE提供的自动编译接口dbms_utility.compile_schema(user,false);\n调用这个过程就会编译所有失效的过程、函数、触发器、包\n1 exec dbms_utility.compile_schema( \u0026#39;SCOTT\u0026#39; ) 方法4：利用网友提供的sql解决（例如 https://developer.aliyun.com/article/34172?spm=5176.24320532.content1.1.1b6b12c2lTMMVr#/ 给出的）\nps.也有可能是因为创建函数或存储过程等，里边的内容书写不正确导致。对于这种编译错误只需要找到编译报错位置，根据错误提示进行修改并重新编译即可。参考 https://blog.csdn.net/u010931042/article/details/103609979#/\n参考链接 查询无效对象结果的例子以及解决例子：\n​\thttps://www.shuzhiduo.com/A/A7zg7WNWz4/#/\n​\thttps://blog.csdn.net/weixin_39617318/article/details/116344253#/\n​\thttps://blog.csdn.net/weixin_30661579/article/details/116439657#/\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A0%E6%95%88%E5%AF%B9%E8%B1%A1/","title":"数据库无效对象"},{"content":"00 无分类 海明码（Hamming code） https://www.bilibili.com/video/BV1SJ41157pR?spm_id_from=333.337.search-card.all.click#/\nhttps://www.cnblogs.com/godoforange/p/12003676.html#/\n遇到这种题，做题练一下\nCRC校验法（循环冗余校验 Cyclic Redundancy Check） https://seedeer.github.io/2022/03/20/crc/#/\nhttps://www.bilibili.com/video/BV1rJ411V7L5?spm_id_from=333.337.search-card.all.click#/\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-00-%E6%97%A0%E5%88%86%E7%B1%BB/","title":"软考-中级软件设计师-00 无分类"},{"content":"01 计算机组成与体系结构 数据的表示 进制转换 R进制-\u0026gt;十进制：底数，指数\n十进制-\u0026gt;R进制：短除法\n二进制-\u0026gt;八进制，十六进制\n编码 原码：正常转为二进制，位数不足前面补0。最高位为符号位（0正1负） 反码：正数=原码；负数：符号位不动，其他位原码取反 补码：正数=原码；负数：反码+1 移码：一般用来做浮点运算的阶码；符号位为补码的反，其他位一样。这样在数轴上，正数在负数的右边，看起来正常些 ps. 原码：1-1为-2，是不正常的，因此计算机里不能用原版来做加减\n移码 https://blog.csdn.net/Desire_Dir_W/article/details/114399797#/\n表示范围 为何补码比原/反码多一个数：原/反码有正负0，补码只有一种0的表示\n浮点数运算 M*R^e\nM：尾数；R：基数：e：指数\n对阶（小向大的指数对） - 尾数计算 - 结果格式化（尾数小数点左边是1）\n计算机结构 主机=CPU（运算器+控制器）+主存储器 控制器：\n指令寄存器 IR 程序计数器 PC 地址寄存器 AR 指令译码器 ID：对指令中的操作码进行解释 指令=操作码+操作数或操作数地址\nFlynn分类法 单I/多M+指令I/数据D\nSISD 现在的机器几乎没有，可能在单片机用到\nSIMD 阵列处理机：适合处理数组运算\nMISD 只在理论中\nMIMD 全面并行\nCISC和RICS CISC 比较早期，通常是定制。指令数量多；可变长格式\nRICS 复杂操作由简单操作组成即可；定长格式；操作寄存器；硬布线（速度快）\n流水线 主要考察计算\n周期 概念：执行时间最长的一个步骤时间\nn条指令全部执行时间：\n理论公式：1条指令执行时间+（指令条数-1）*流水线周期 实践公式：（k+n-1）*周期；k为子指令个数 考试时优先用理论公式算，没有这个选项，再用实践公式\n吞吐率 概念：单位时间内处理指令条数\n公式：TP=指令条数/流水线时间\n最大吞吐率：\n理解：极限情况下（不考虑流水线建立的时间等），1条指令配合上一个流水线周期\n加速比 概念及公式：同一个任务不使用流水线时间/使用流水线时间\n效率 概念：流水线的设备利用率。时空图中，设备占用时空区占总时空区之比。\n公式：\n每个子任务时间一样 -\u0026gt; 效率最高\n存储 层次化存储结构 cache 特点：\nCPU和内存之间 为何能改善系统性能：局部性原理 平均周期公式\n局部性原理\n时间/空间局部性\n工作集理论：工作集是进程运行时被频繁访问的页面集合；把工作集打包到cache，短时间内不被替换，可提高效率\n主存 随机存取存储器 RAM 只读存储器 ROM 编址 8*4位的存储器：8个地址空间，每个地址空间含4位\n两种组合方法：\n（1）=C7FFFH-AC000H+1=C7FFFH+1-AC000H=112\n（2）112k x 16 = 28 x 16k x 未知数 结果为4\n磁盘 主要掌握：读取一次数据过程中1、哪些动作；2、多少时间\n存取时间=存道时间+等待时间（平均定位时间+旋转延迟时间）\n存道时间：磁头移动到磁道 等待时间：等待扇区转到磁头 总线 分类\n内部总线 系统总线 数据总线（传输数据，字长与数据总线宽度有关），双向 地址总线（宽度与内存大小有关，如32位操作系统内存最多2^32=4G），单向 控制总线，一条来看是单向的，总的来看是双向的 外部总线 总线结构优点：简化系统结构，减少连线数目，便于维修\n系统可靠性分析与设计 串联系统与并联系统 可靠度：\n串联：可靠性为各节点可靠性相乘 并联：R=1-(1-R1)x(1-R2)x\u0026hellip;x(1-Rn) 失效率=1-可靠度\n模冗余系统与混合系统 校验码 码距 概念：编码系统中任意（所有）两个码字的最小距离，即A-\u0026gt;B需要改变最少几位；如采用3位长度作为二进制编码，可选用111和000作为合法编码，这时码距就是3（000需要改变3位才变为111）\n循环校验码CRC（检错不纠错） 采用模2除法，接收到除多项式若余数为0，则表明传输正确\nCRC编码：\n编码后：原报文+余数吗，作为最终报文传输\n接收端接收到报文后，将报文同样除以二项式，若余数为0，则表示传输正确\n海明码（检错加纠错） 校验位：\n位置：2^n 如一个信息位，最终有3位（因为0和1位需要填校验码） 需要校验位数r：2^r-1\u0026gt;=x+r 周期 时钟周期（CPU时钟周期，T周期），主频决定，最小的时间单位 机器周期（CPU周期）：完成一项基本操作所需最短时间 总线周期：一次访问存储器或I/O端口所需时间 指令周期：取出并执行一条指令的时间 关系：时钟周期⊆总线周期⊆机器周期⊆指令周期\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-01-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/","title":"软考-中级软件设计师-01 计算机组成与体系结构"},{"content":"02 操作系统 概述 操作系统的角色：\n管理系统的硬件、软件、数据资源 控制程序运行 人机之间的接口 应用软件与硬件之间的接口 管理分类：\n进程管理 存储管理 文件管理 作业管理 设备管理 进程状态 三态模型\n运行：万事具备 就绪：只等CPU资源 等待：除了CPU资源，还在等其他资源 五态模型\n运行 静止就绪（运行过程中主动挂起） 活跃就绪 静止阻塞 活跃阻塞=等待 前趋图 同步与互斥 互斥：一个资源同时只能被一个进程所用 同步：速度有差异，一定情况下要等待 【注意】：两者不为相反的概念，互斥\u0026lt;-\u0026gt;共享，同步\u0026lt;-\u0026gt;异步\n在生产者消费者问题，理解互斥和同步：如一个商场只能存放一件物品，若目前已有一件时，生产者无法将新的一件放入（互斥）；生产者是否可以放入也取决于消费者是否消费了这个物品，只有等消费者消费了，生产者才能新生产（同步）\nPV操作 概念 临界资源：进程间需要互斥访问的资源（如打印机，磁带机）\n临界区：每个进程中访问临界资源的那段代码\n信号量：一种特殊的变量，如P(s)中的s\nP分配（减），V释放（加）\n例子（单缓冲区）：\n习题：\n答案：A和C\nPV操作和前趋图 【重要！经常考！】\n例题（答案：CAA）：\n解题思路：信号量的赋值可根据从上到下、从左到右的原则赋值，出箭头设为V(s)，入箭头设为P(s)。如P1出箭头那里是V(S1)，P2出箭头那里是V(S2)，P3入箭头那里是P(S1)和P(S2)。\n死锁 最小需要多少个资源不发生死锁 公式：k*(n-1)+1；k：进程数，n，每个进程需要的资源数\n死锁四大条件 互斥 保持和等待 不剥夺 环路等待 解决死锁 预防：打破四大条件 避免：有序资源分配法，银行家算法 银行家算法 例题：\n存储管理 分区存储 首次适应法 最佳适应法（空闲区块按大小顺序链式排列，找最小能满足分配空间的内存块） 内存碎片多 最差适应法（类似最佳，找最大能满足的内存块） 循环首次适应法（把可分配区块循环链接起来，下次就先看下一块能否分配，而不是从头开始匹配） 分配均匀些 页式存储 把用户程序等分为固定大小的页，这样不需要一次性将全部程序导入内存才能运行\n优点：利用率高，碎片小，分配及管理简单 缺点：增加系统开销；可能产生抖动现象 常考：逻辑和物理地址的转换\n页表中记录了【页号】和对应的【块号】\n【可参考上面的例题】逻辑转为物理地址的思路：逻辑地址由页号和块内地址组成：\n1、找到页号和块内地址分别是几位表示：根据页面大小为4K，说明块内地址是用12位表示，也就是A29H，那么页号就是5；\n2、根据页号5，找到对应的页帧号（也就是块号）为6，所以选D\n找到淘汰页号的思路：\n1、从状态位为1的（在内存中）中找\n2、从访问位为0的（最近没访问）中找\n所以选页号为1的页面\n段式存储 组成：段号+段内地址\n段的长度也不同，依据代码结构\n优点：多道程序共享内存，各段程序修改互不影响\n缺点：内存利用率低，内存碎片浪费大\n段页式存储 结合段式和页式，先分段再分页\n快表 小容量的相联存储器，放在cache，速度快。从硬件保证按内存并行查找。\n页面置换算法 页面淘汰算法分类 最优 OPT(optimal)：只存在理论上的，从整体序列来分析 随机算法 先进先出FIFO：有可能产生抖动 最近最少使用LRU：不会抖动 例题:\n答案：B和C\n没有使用快表：意味着访问一页，需要访问两次内存（第一次为查询页表）\n考试有个潜在规则：读取指令时是算作一次，也就是说虽然横跨0和1页，但是缺页中断次数为1；但是读取操作数时，比如读取A，横跨2和3页，所以缺页中断次数为2\n文件管理 索引文件结构 目的：扩充容量\n例题：\n答案：C和D\n文件和树型目录结构 绝对路径/相对路径\n空闲存储空间管理 方法分类 空闲区表法（空闲文件目录） 空闲链表法 位示图法（0，1分别代表空闲和占用） 成组链接法 位示图法 例题：\n(4195+1)/32=131.125\n注意：位置是从0开始算\n答案：D和B\n数据传输控制方式 方式 程序控制方式（需要很多CPU参数，CPU持续发出查询指令） 程序中断方式（外设准备好后，主动向CPU发中断请求） DMA方式（直接内存存取控制方式，专门的DMA控制器硬件。由主存和外设之间交互，CPU只要在开头介入即可） 通道 输入输出机 虚设备与SPOOLING技术 微内核操作系统 ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-02-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/","title":"软考-中级软件设计师-02 操作系统"},{"content":"03 数据库系统 三级模式-两级映射 内模式（物理级数据库）：如何存储数据（格式等） 概念模式（概念级数据库）：表级别（关注【概念模式-内模式映射】） 外模式（用户级数据库）：视图（隔绝概念模式的修改【外模式-概念模式映射】，灵活性） 数据库设计过程 ER模型：与物理数据库无关\n关系模式：表形式，规范化理论\nE-R模型 矩形：实体；椭圆：属性；菱形：关系\n子模型集成\n逐步集成 一次集成 集成产生的冲突\n属性冲突（属性域或取值冲突） 命名冲突（同名异义，异名同义） 结构冲突（可能一个作为表，一个作为列） 实体型转换为关系模式\n1：1 - 转成两张表，菱形联系可跟任意一个 1：n - 转成两张表，菱形联系跟N m：n - 转成三章表，菱形联系单独一张表 ps.即使是多对多对多的，也只需一个关系来表示菱形\n关系代数 并：注意：相同行只显示一次\n交\n差\n笛卡尔积（✖）：完全组合；属性数为两关系相加；行数为两关系行数相乘\n投影\n选择\n连接：都有的属性只保留一个**（这点和笛卡尔积不同）**；等值连接、自然连接 规范化理论 函数依赖 部分函数依赖：其中的某一个属性，可以形成函数依赖\n价值与作用 非规范化可能存在的问题：数据冗余，更新/插入/删除异常\n键 超键（可能存在冗余属性）：唯一标识元组 候选键（超键消除多余属性-\u0026gt;候选键，可以有多个） 主键（候选键任选一个） 外键：其他关系的主键，对表做关联的时候可用 求候选键：图示法\n根据依赖关系画依赖图，找到所有入度为0的节点，尝试遍历所有节点，成立则为候选键。注意有可能是多个节点组合成候选键。若没有入度为0的节点，则找既有入度也有出度的节点，同样进行遍历分析。\n范式 级别越高，规范程度越高\n主属性：属于候选键的一部分\n第一范式：当且仅当所有域只包含原子值，即不可再分\n第二范式：第一范式的基础上，不存在部分依赖\n第三范式：第一范式的基础上，没有非主属性传递依赖于码时\nBC范式：所有函数依赖的左边部分必须包含候选键\n例题：\n答案：C D A\n模式分解 保持函数依赖分解：函数依赖关系不变（冗余的函数依赖不需要保持） 无损分解：可以还原，可通过联结还原成原始的关系模式 或者：表格法\n假设有一行全部是a，则说明还原好了，也就是无损分解。\n或者：代数运算法（仅限于分解为两个的情况）\n并发控制 事务 原子性（全做or全不做） 一致性（转账前后加起来钱都一样） 隔离性 持续性 并发存在的问题 丢失更新 不可重复读 读脏数据 封锁协议 死锁 预防 解除 数据库完整性约束 分类 实体完整性约束：如主键不能为空 参照完整性约束：外键约束 用户自定义完整性约束 触发器：更加复杂的用脚本写的约束 数据库安全 数据备份 冷备份（静态备份）：数据库关闭情况下的备份 热备份（动态备份）：正常运行时的备份 根据备份量区别：\n完全备份 差量备份（备份上一次完全备份之后变化的数据），更有利于备份恢复 增量备份 数据库故障与恢复 数据仓库与数据挖掘 数据仓库\n面向主题 集成的 相对稳定的（非易失的） 反应历史变化（随着时间变化） 反规范化（逆规范化） 牺牲一些空间和规范，提高查询效率\n大数据 4V\nvolume 数据量 velocity 速度 variety 多样性 value 值 ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-03-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/","title":"软考-中级软件设计师-03 数据库系统"},{"content":"04 计算机网络 OSI/RM七层模型 中继器/集线器：延长传输距离（类似烽火台）\n例题：\n分析：考察局域网的通信范围，局域网是下面两层（物理层和数据链路层连接的），所以P和S之间经过路由器（网络层）的话，就不能通信。\n网络技术标准和协议 TCP：三次握手，可靠传输\nUDP：没有反馈过程\nDHCP：IP地址动态分配\nDNS：域名映射到IP地址\n递归查询：亲自深挖，不断根据线索问其他服务器，最终把正确的IP反馈给客户（如本地域名服务器，因为其压力不大）\n迭代查询：只提供线索，没有刨根究底（如根域名服务器）\n计算机网络分类 拓扑结构 单点故障：环形比星型稳定，因为一个点故障可以从另一头走\n网络规划与设计 逻辑网格设计 物理网络设计 分层设计（考比较多） IP地址与子网划分 全0：网络地址；全1：广播地址\nA类：前8位网络号，后24位为主机号，可包含2^24-2主机\nB类：前16位网络号，后16位为主机号，可包含2^16-2主机\nC类：前24位网络号，后8位为主机号，可包含2^8-2主机\n例题：\n或者问是否在同一个子网内，怎么看：把ip化为2进制，根据网络号有多少位，看最终的网络号是否相同\n无分类编制 例题：\n分析：已知C类子网有24位的网络号，现在是20位，也就是还有4位可以拿来作子网号，2^4=16\n特殊含义的IP地址 HTML（考的少） 无线网 网络接入技术 IPv6 IPv4：32位地址，地址不够用\nIPv4：128位地址\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-04-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","title":"软考-中级软件设计师-04 计算机网络"},{"content":"05 计算机安全 信息系统安全属性 完整性：保证A到B的消息没被篡改\n加密技术 对称加密 非对称加密 信息摘要 特性：单向\n用于验证数据完整性\n数字签名 特性：防抵赖\n加密（即数字签名）：私钥；解密（即数字签名的验证过程）：公钥；不是真正的加密和解密\n与信息摘要技术结合：对信息摘要进行数字签名（而不是对原消息进行数字签名）\n数字信封与PGP 综合例题 例题：设计邮件加密系统\n网络安全 网络层级的安全保障 网络威胁与攻击 要会区分窃听和业务流分析\n防火墙技术 应用级：把内容拆出来分析看有无问题\n网络级：比如看源和目的ip\n屏蔽子网：内部网和外部网之间额外的一个防护\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-05-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%89%E5%85%A8/","title":"软考-中级软件设计师-05 计算机安全"},{"content":"06 数据结构与算法基础 数组 考点：存储地址计算\n稀疏矩阵 矩阵坐标转换到数组坐标的解题技巧：带入特殊值\n数据结构的定义 概念：计算机存储和组织数据的方式\n逻辑结构划分\n线性结构 非线性结构 树 图 线性表 分类\n顺序表（一维数组形式）\n链表（节点包含数据与指针）\n单链表 循环链表 双向链表 队列（先进先出）\n循环队列\n栈（先进后出）\n链表的基本操作（删除和插入节点）\n顺序存储和链式存储对比：\n广义表 概念：线性表的推广，以递归的方式进行定义\n广度（最外层括号包含的元素个数）、深度（包含括号的重数）\n表头head（最外括号的第一个元素）、表尾tail（除去表头的其他所有部分）\n树与二叉树 结点的度：孩子数\n数的度：所有结点度数最高的度\n内部节点：非头节点和叶子节点\n深度：最大的层数\n特殊二叉树 满二叉树 完全二叉树（除最后一层，上面层都满；且最后一层从左到右没有中间缺失的情况） 二叉树遍历 前、中、后序遍历：差别在根节点前、中、后时候被访问\n层次遍历\n反向构造二叉树 例题：\n树转二叉树 原则：\n孩子结点 -\u0026gt; 左子树结点 兄弟结点 -\u0026gt; 右孩子结点 除了挨个用【原则】分析，还可以用连线法：如上图的虚线图所示。将兄弟结点连起来，并将第一个孩子以外的孩子结点的连线去掉，然后旋转，得到最终的二叉树\n查找二叉树（二叉排序树） 特点：\n左孩子小于根 右孩子大于根 极大提高查找速度 操作：插入和删除结点\n最优二叉树（哈夫曼树） 哈夫曼树：用于无损压缩\n基本概念：\n树的路径长度 权（每个结点的数值，一般表示出现的频度） 带权路径长度 树的带权路径长度（树的代价） 构造哈夫曼树：即构造带权路径长度最小的树\n例题：\n求解树的带权路径长度：将所有叶子结点的带权路径长度相加\n线索二叉树 why：很多结点的左右指针是空的，可以利用这些空闲指针，来方便遍历\n前序线索二叉树 中序线索二叉树 后序线索二叉树 构造线索二叉树：左右线索指针指向的是x序排列的前/后面的结点\n平衡二叉树 定义：\n左右子树深度相差不超过1 每个结点的平衡度（左子树深度-右子树深度）只能为-1，0，1 非平衡二叉树 -\u0026gt; 平衡二叉树\n图 图与树最大的区别：树没有环路\n分类：\n有向图 无向图 完全图（可连的边都连了） 存储 邻接矩阵 邻接表 图的遍历 深度遍历 广度遍历 根据邻接表进行遍历：广度是一个结点所连的线走到底，深度是连续试探第一个\n拓扑排序 表示活动之间开始的先后关系\n执行完把连线去掉，继续分析\n图的最小生成树 使得留下来的边（n-1条，n为节点数）构成树（注意不能有环），权值总和最小\n普利姆算法 分析：画图时实时将结点分成两个阵营，寻找到另一个阵营的最短边\n克鲁斯卡尔算法 依次选择权最小的边，注意不要构成环。连接所有结点后，即生成结束\n算法基础 算法的特性 算法的复杂度 顺序查找和二分查找 顺序查找 二分查找 前提：查找内容本身是有序排序的\n散列表 冲突解决：\n线性探测法（往后顺序查找第一个空的） 伪随机数法 再散列法 排序（重要） 稳定性：值相同的数，排序后，顺序是否不变\n内/外排序：前者只在内存中，后者用到外存\n直接插入排序 希尔排序 是直接插入排序的一种，但更复杂。\n好处是：经过前几轮的组内直接插入排序，序列已基本有序。到最后一轮的全组直接插入排序时，调整顺序的次数会更少。\n直接选择排序 堆排序 堆的概念\n堆排列概念和步骤：\n初建堆过程：\n顺次将结点数组构成完全二叉树 调整为堆（从最后一个非叶子结点开始，而后分析最后第二个） 注意，有的结点调整需要向下继续调整 重新建堆过程：\n把根结点取走 把堆的最后一个结点放到根结点 从根节点开始与子节点对比，一直往下 所以，诸如从大量数据中求前10小的元素，比较有优势\n冒泡排序 快速排序 分析：\n分治法 与基准比较 归并排序 一般是两两合并\n基数排序 基数和关键字的分解有关\n排序算法分析（常考） ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-06-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/","title":"软考-中级软件设计师-06 数据结构与算法基础"},{"content":"07 程序设计语言与语言处理程序基础 编译过程 文法定义 有限自动机 例题（常考）：\n答案：C\n正规式 例题：\n答案：D C\n表达式 答案：D\n函数调用 - 传值和传址 传值：不真正改变实参 传址：真正改变实参 各种程序语言特点 ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-07-%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E4%B8%8E%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F%E5%9F%BA%E7%A1%80/","title":"软考-中级软件设计师-07 程序设计语言与语言处理程序基础"},{"content":"08 法律法规 保护期限 知识产权人确定 侵权判定 标准化基础知识 标准的分类 标准的编号 ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-08-%E6%B3%95%E5%BE%8B%E6%B3%95%E8%A7%84/","title":"软考-中级软件设计师-08 法律法规"},{"content":"09 多媒体基础 基本概念 音频概念 次声波：\u0026lt;20Hz；超声波：\u0026gt;20kHz\n图像概念 亮度 色调（如红，绿） 饱和度：色彩艳丽程度 彩色空间：\nCMY：印刷领域；CMYK（K：黑色）\nHSV(HSB)：艺术家空间，从艺术欣赏的角度\n媒体的种类 易考：输入设备也包含在显示（表现媒体）媒体中\n多媒体相关计算 例题：\n注意单位和(k和K：k为1000，存储的K为1024)\n常见多媒体标准 数据压缩 压损的前提：有冗余\n有损压缩与无损压缩 ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-09-%E5%A4%9A%E5%AA%92%E4%BD%93%E5%9F%BA%E7%A1%80/","title":"软考-中级软件设计师-09 多媒体基础"},{"content":"10 软件工程 软件开发模型 瀑布模型（SDLC） 缺陷：需求难以在项目初期明确确定\n适用于：\n需求明确 二次开发 结构化开发 其他经典模型 原型（针对需求不明确的情况）：在初期先构造一个简易的系统，给用户做演示，记录用户发现的问题，再做调整。往往只用于需求分析阶段。最终变为演化模型。\n增量模型：先做核心部分，给用户用；发现问题，逐步修改和继续开发剩下内容。\n螺旋模型 特征：\n多个模型组成 引入了风险分析 V模型 特点：\n强调测试 在前半部分的过程，同时也做后半部分的测试准备 喷泉模型 特点：\n面向对象模型 迭代 无间隙 RAD 特点：\n快速构建应用系统 构件组装模型(CBSD) 特点：\n提高复用性，缩短时间，减少成本，提高可靠性 统一过程（UP/RUP） 特点：\n用例驱动 以架构为中心 多轮迭代和增量 敏捷开发方法 特点：\n一组模型 比较适合(中)小型项目 信息系统开发方法 结构化方法缺点：一旦开发完，整个流程不容易改变\n需求开发 需求分类与获取 结构化设计 多扇入：复用性高；少扇出：一个函数包括的职能较少\n内聚与耦合 软件测试（常考） 回归测试：将之前的测试案例再测下，看会不会发现新的问题\n测试用例设计 等价类划分：选出各种类的代表性数据来测\n错误推测：根据经验，推测哪些容易产生问题\n测试阶段 单元测试：模块级/函数级\n集成测试：模块之间的衔接\n确认测试：确认需求实现\nMcCabe复杂度（常考） 注意：分叉点是否要转为结点，复杂度公式的结果都一样。如右边结点的5和6，如果不转换，则2、3、4都指向7，计算结果一致\n系统运行与维护（常考） 适应性维护：适应系统、数据环境\n完善性维护：扩充功能、改善功能\n软件过程改进 CMMI 阶段式：\n已管理级：项目级 已定义级：文档标准化 定量管理级：量化管理 优化级：持续优化 连续式：\n过程管理 项目管理 工程 支持 项目管理 甘特图：关键路径的计算\n例题：\n风险管理 ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-10-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/","title":"软考-中级软件设计师-10 软件工程"},{"content":"11 面向对象设计 边界类：与外界系统交互\n控制类：类之间的衔接类\n封装：提供给外部接口，外界用接口调用\n设计原则 UML 设计模式 架构和设计模式区别：全局or局部\n设计和惯用法区别：是否与实现语言相关\n设计模式的分类 创建型模式 抽象工厂：只需指定生产的系列名，而不是类\n构建器：部件构建组合\n原型（克隆原型）：拷贝现有对象来生成新的对象\n单例：保证一个类只有一个实例\n结构型模式 行为型模式 ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-11-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1/","title":"软考-中级软件设计师-11 面向对象设计"},{"content":"12 数据流图（DFD） 数据流图基本概念 自上往下细分\n数据字典 数据流图的平衡原则 父图与子图之间的平衡（如顶层-\u0026gt;0层）：外部实体到系统的连线数据流内容和方向应该是不变的\n子图内平衡：有输入没输出/有输出没输入，是不正常的\n答题技巧 例题1 例题2：\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-12-%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BEdfd/","title":"软考-中级软件设计师-12 数据流图（DFD）"},{"content":"13 数据库设计 数据库设计过程 ER模型 实体间联系类型 1:1 1:n m:n E-R图向关系模型的转换 实体和联系分别转换为关系，属性转换为关系的属性\n数据库设计答题技巧 例题1：\n【问题4】\n优点：查询操作权限属性时，会减少一次连接操作\n缺点：数据冗余\n例题2：\n答案：\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-13-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/","title":"软考-中级软件设计师-13 数据库设计"},{"content":"14 UML建模 重点：用例图、类图\n用例图 包含关系 include\n如每次登记外接信息都要【用户登录】，故是包含关系\n扩展关系 extend\n如每次查询书籍信息不是都要【修改书籍信息】，故是扩展关系\n泛化关系\n类图与对象图 多重度：\n关系：\n顺序图 主要考察：\n消息：箭头来传递 对象名 活动图 粗横线：产生分支，即并行的线程\n还有带泳道的活动图（划分对应的主体）：\n状态图 以状态为结点，箭头为触发事件\n考点：\n填充状态 填充触发事件 通信图 对象：结点；消息：箭头\n与顺序图类似，但时间顺序先后不明晰。与顺序图统称为交互图。\n例题 例题1 答案：\n问题3：类都是音轨，多重度0..1\n问题4：\n例题2 【问题3】：状态图；属性：clevel；功能：计算里程数\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-14-uml%E5%BB%BA%E6%A8%A1/","title":"软考-中级软件设计师-14 UML建模"},{"content":"15 数据结构及算法应用 数据结构基础那章是上午题，此章为下午题\n不容易拿高分，但要把容易的都填出来\n分治法 递归 概念：运行的过程中调用自己\n二分查找 回溯法 贪心法 性价比方法：耗费时间少，找到【可以】的解\n图示背包问题贪心法（图b左边）：优先考虑单位价值最多的物品\n动态规划法 拆分为子问题，但是子问题一般有关联，所以需要一个表来协助\n例题 例题1 答案：\n【问题2】：贪心法；贪心法；时间复杂度分析具体代码（O(N^2),O(N^2)）\n【问题1】：\n例题2 题目略\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-15-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8F%8A%E7%AE%97%E6%B3%95%E5%BA%94%E7%94%A8/","title":"软考-中级软件设计师-15 数据结构及算法应用"},{"content":"16 面向对象程序设计 类和派生类的定义 构造函数和析构函数 对象指针与对象引用\n虚函数\n类的定义 关键字：extends对方就是类而不是接口\n接口的定义 关键字：implements 对方就是接口而不是类\n例题 例题1 此类定义的填空很好拿分\n例题2 ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-16-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/","title":"软考-中级软件设计师-16 面向对象程序设计"},{"content":"开始 视频教程： https://www.bilibili.com/video/BV1yU4y1371J?spm_id_from=333.337.search-card.all.click#/\n","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%BD%AF%E8%80%83-%E4%B8%AD%E7%BA%A7%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%BC%80%E5%A7%8B/","title":"软考-中级软件设计师-开始"},{"content":"部分sql的user_io_wait_time值较大 背景：报“针对近一个月的sql语句执行进行分析，每天执行较频繁的sql中，有几个sql的user_io_wait_time值较大，建议进行优化\noracle sql 响应时间分析 1、按照IO等待取top5（https://blog.csdn.net/fengsd_sy/article/details/51322766#/）\n1 2 3 4 5 6 7 8 9 10 select * from (select sql_text, sql_id, elapsed_time, cpu_time, user_io_wait_time from sys.v_$sqlarea order by 5 desc) where rownum \u0026lt; 6; 2、根据步骤1获取具体SQL详情\n1 2 3 4 5 6 7 8 9 10 11 select event, time_waited, owner, object_name, current_file#, current_block# from sys.v_$active_session_history a, sys.dba_objects b where sql_id = \u0026#39;6gvch1xu9ca3g\u0026#39; and a.current_obj# = b.object_id and time_waited \u0026lt;\u0026gt; 0; ","date":"2022-05-14T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E9%83%A8%E5%88%86sql%E7%9A%84user_io_wait_time%E5%80%BC%E8%BE%83%E5%A4%A7/","title":"部分sql的user_io_wait_time值较大"},{"content":"​\t终于拥有了自己的网站，可以写点东西了。计划每周六回顾一下每周自己的状态、新启发、有趣的事等。太久没有写这种长文了，希望这个过程不会很困难😆\n本周回顾 状态\n由好变坏。前3天保持自律：10:30上床，看半小时kindle睡觉，早上七点多起床。白天状态也算不错。\n但是后面几天就不好了，一是晚上不看小说改为看视频了，脑袋处于活跃状态；二是白天状态也不好，烦躁，老刷手机；下午会困，继而发展成头疼，眼睛疼。不清楚是休息不够还是身体问题，下周再观察。\n做了啥\n域名终于备案通过了。于是火速简单安装wordpress，七牛云（用于markdown图床）域名绑定。 买了软考书，报名。这两个月准备备战软件设计师。 订阅产品沉思录。 学习进度\ngit，了解基本操作 看github抢hpv疫苗的代码，只看了一点；顺带python学了一点 书与影\n正在阅读：\n《金色梦乡》 伊坂幸太郎 (作者), 代珂 (译者)\n电影：\n波斯语课 Persischstunden (2020) ⭐⭐⭐⭐\n展望下周 不这么困了，多睡！ 开始准备软考 网站整好看点 工作状态调整好，效率up 碎片化阅读 目前主要的摄入渠道，分为两类：\n电脑端长文阅读，主要包括newsletter，订阅，少数派 手机端碎片阅读，主要包括红版报、即刻、豆瓣、小报童 你每日所摄入的东西，一点点影响你自己。我目前还没形成很好的阅读习惯，阅读源的选择也处于不断筛选、进化的过程中。今天只想简单聊一下碎片化时间。\n碎片化的阅读到底应该是怎样的，这个问题也在一直探索。短视频以及一些快餐文章，确实填补了我每一次无聊，但我往往在事后感觉不到它们的存在，也就是即使在刚刷完关上手机的一霎那，我也想不起来刚才我所看的东西是什么。不否认也许这些东西是在潜移默化中“充实”我，但我需要这些“充实”吗？这些没有带来一点启发，占据我的休息时间，打碎我的注意力的东西。所以我取关了大多数公众号（因为我发现由于关注太多，推送流里充斥着我不想点进去但却忍不住点进去的boring文章），关闭了朋友圈入口只在每周末定期阅读一次（于我个人来说，平时关闭朋友圈入口真的是我最近做出的最正确的决定），不刷抖音，不看微博\u0026hellip;\n这些碎片化的东西，我也并不是都不喜欢的，只是我一直在探索应该将自己的碎片化时间放到哪里是更好的选择。**一方面来说，我想尽量避免碎片化时间。**意味着：上班时能有更高的专注力，尽量避免无谓的刷手机。只有效率提上去了，才能更快做完工作上的东西，才能拥有更多属于自己的时间。**另一方面，在一天中，总会存在碎片时间，怎么利用好也是个问题。**除了刷手机，还可以起来走动，拉伸身体，思考，做一些特意安排在状态不好时间做的事。\n其实说了这些浅显的道理，真正实操起来又是另一回事。我只是把最近的一些心得写了出来，勉励警醒自己在接下来的时间更好地践行，希望自己可以早日找到碎片时间的“最佳”去处吧。说到底，并不是需要最大化碎片时间的价值，而是不要被无效且庞大的碎片化时间反噬。\n言论 有句话是这么说的：“找到三个爱好：一个让你赚钱，一个让你保持健康，一个让你有创造力。”\n赚钱和保持健康的爱好比较好找，有创造力的爱好，必定是很棒的爱好了！\n其实剪 B-roll 有时候和电影预告片有些类似，适当「喂不饱」才更吊人胃口 - sspai.com\n与电影预告片类比，那我一下子懂了！\n第一种运镜方法，是希区柯克导演在电影中常用的方式，故而也被称为「希区柯克变焦运镜」。这种看上去空间扭曲的运镜有个明显的特征：在改变镜头焦距的同时也改变拍摄的距离，从而让拍摄主体在画面的大小和位置都不改变，常常被用来渲染紧张局促的氛围。 - sspai.com\n绝了！这不就是闪灵的那个双胞胎镜头！\nLast Word 🙏早日摆脱这种白天昏昏欲睡的状态吧！\n2022.3.26 ☁️ by.XD\n","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.01-hello-world/","title":"【XD的一周漫步】No.01 Hello World"},{"content":"​\t本周的一大快乐：重新爱上菜市场。线上买菜虽然可以满足懒人的一切需求，但比不上：自己去菜市场挑菜捡肉，经过一个个摊位，让阿姨帮忙切片处理，看着新鲜的肉菜被装到袋子里传递到手中的满足，同时脑中已经勾勒出今晚的菜单。比起线上，线下买菜的另一大好处就是便宜，吃多少买多少，不用为了凑单而凑单。住在菜市场附近，多么幸福呀！\n本周回顾 状态\n比起上周，昏昏欲睡以至头疼的时候少了（也不是完全都没有），且工作的状态和完成量也好了不少。但是，中断了早睡早起的安排。【原因】：晚上禁不住诱惑，刷手机停不下来，导致晚睡和晚起。有一天晚上甚至到2点才睡！\n做了啥\n上周日去看了【安迪沃霍尔展】 给网站换了个主题，稍微好看了些 （只）学了一个晚上的软考 看凹凸电波（最喜欢的一个播客节目）六周年直播，买纪念徽章和专辑 学习进度\n几乎没有！ 书影音\n正在阅读：\n《风声》麦家，首次出版于2007年10月\n完成阅读：\n《金色梦乡》伊坂幸太郎，⭐⭐⭐⭐\n电影：\n《色，戒 (2007)》李安，⭐⭐⭐⭐⭐\n《菊次郎的夏天 菊次郎の夏 (1999)》北野武，⭐⭐⭐⭐\n《蝙蝠侠：黑暗骑士崛起 The Dark Knight Rises (2012)》克里斯托弗·诺兰，⭐⭐⭐⭐\n歌手推荐：陈婧霏 展望下周 多学软考！！！ 服务器漏洞修复 丰富网站，以及解决网站备案后续 半途而废的心和浅尝即止的新鲜事物 本周，来谈谈我自己的“无法坚持”。\n曾经看到一个言论，大意是：规定今年不准学习探索新东西，只专注提高自己已有的能力。首先，我100%赞成这个实践思想；其次，我知道自己100%做不到。因为我：1、在一个洞里坚持刨的耐心没有；2、看到新洞就想扎进去爽一下就跑。于是，我可以看到很多人在属于自己的洞穴里玩得不亦乐乎，而我呢，唯一的栖息地就是不断更换的新的浅洞或是光秃秃的平原。我剩下了什么，无外乎是不会再打开的只更新几页的电子笔记，收藏夹里吃灰的视频和文章，听过但不会/学过但忘了的“理直气壮”。“坚持”从不在我的字典里。\n怎么办？改变是痛苦的，坚持改变愈发痛苦。这里列出我的一些小想法，待尝试是否可行：\n先给自己一个小目标，如每天只需学习该领域的知识20分钟，等可以了再往上增 每天早上列出3个自己今天一定要完成的事情，并坚持每天完成 设立一定的奖惩机制，比如连续一周坚持住xxx，奖励自己xxx；如果某天没有坚持xxx，罚自己xxx（比如第二天双倍时间等） 每晚睡前，自己总结：为什么今天该做的事没做，下次应该怎么做 接触的新鲜玩意，控制量。可以先放入待办，告诉自己手头上的做好了，再去处理，避免增加半途而废的机会 效果只等时间和努力见分晓，争取在下个月来个初反馈~~\n言论 过去的十年里，我搬了六次家，做过十几份工作，交过两三个男朋友。仅此而已，真的只有这些。感觉青春就这样过去了，这让我感到慌张。这些年我发生了哪些变化？好像只是变得大手大脚，对人不再信任，眼光变高，成了俗人。这让我颇为不安。二十多岁的时候，不管我做什么，都感觉只是个过程。现在呢，似乎一切都是结果，让人很焦虑。 - https://www.yuque.com/gaohui-bdaa2/chengbao/urnhdi#/\n青春散场，绝大多数变成俗人的我们，仿佛逃脱不掉的魔咒。\n智慧不是来自于所发现的事物本身，而是事物之间的关联。为了找到这种关联，你需要广泛地阅读，自由地联想，最好的话，再结合输出的习惯。 - 摘自Newsletter\n现代人对信息的摄入永远不缺，甚至乐此不疲地追求用过量的信息填满每一个时间空隙。可以把人们想象成一台输入原料进行生产的机器。有的人输入多，却因为“机器性能（转化率）”不足，产的少；有的人输入不多，却可以以很高的性能转化出去。所以，要优化的是你的处理器，而不是外设。\n互联网时代的信息质量，呈现两极化。信息的平均质量变得越来越差，但是你能从网上找到的最有用信息，质量正越来越好。 这就好比一个商品极大丰富的市场，对普通消费者是不利的，因为他不知道怎么选择琳琅满目的商品；但对高水平消费者非常有利，因为他能找到最满足自己需要的商品。 《丰富市场的悖论》 - https://www.ruanyifeng.com/blog/2022/04/weekly-issue-201.html#/comments\n这是最好的互联网时代，也是最坏的互联网时代。\n据说，猎人会剜去旅鸽的眼珠。看不见的旅鸽失去了飞翔能力，只能不断扇动翅膀原地挣扎。其他同行旅鸽发现后会误认为那是在进食，于是全都聚过来。猎人们只要等候这一刻，一网打尽即可。 - 《金色梦乡》\n残忍而有智慧。\n如果在纸上画一条直线，代表从大学开始到现在为止的那些岁月，樋口晴子现在的感觉就好像纸对折了，直线的两端连在一起，时光的距离一下子无限缩短，眼前仿佛见到了第一次在社团活动上露面的阿一。- 《金色梦乡》\n这件事她早已遗忘，但在阿一的提醒下，记忆的片段又不断地涌了出来，好像有一把钥匙打开了一个柜门，柜子里的东西接二连三地掉落了出来。- 《金色梦乡》\n关于时光的比喻。\n内向的人更倾向于独自工作，而独自工作能享受孤独是创造力的一个必要条件。 - sspai.com\n与自己对话，向自己提出质疑，为阶段性成功独自拍手叫好。\n绝大部分时候，「把事情讲明白」比「把文章写华丽」重要上百倍， 不要把文章写得像说话。\n你可能不信，很多人对「写稿」这件事情存在刻板印象，甚至你问他们上一次认真写长文章是在什么时候，很可能不少的回答都是「高考语文作文」。然而当我们走进现实却发现，绝大部分的文章并不需要多么有文化气息的描述，关键仍是在于能把若干件事情快速地向读者讲透彻。即使是最文艺向的诗歌和散文，也需要把思绪理顺，讲明白需要表达的内心世界。否则，语言的华丽完全不能掩饰内核的空洞。 - sspai.com\n和演讲、技术探讨等很多场合一样，“讲明白”是多么的珍贵呀。\n保健食品本质是食品，外包装标有「国食健字」批准文号，并印有「蓝帽」标志； 非处方药本质是药品，外包装有「国药准字」标志与批准文号，印有绿色（乙类）或红色（甲类）的 OTC 标志。 - sspai.com\n如果你前往药店，能买到的商品大致分为三类：处方药（Rx）、非处方药（OTC）和保健食品。后两者虽然都可以直接购买，但差别巨大。\nLast Word 我知道有的人生来就是自律和努力的那类人，我也知道我不是那类人。接受自己的平庸难，不接受更难。每个人都有适合自己的活法，并不一定是为了出人头地而奋斗才是对的。但我始终没有找到自己的“活法最优解”，我认为起码我得先走一条路，起码尝试过努力，与自己的懒惰天性对抗过，才知道自己是否应该为之抗争。所以，我认为接下来我的关键词是“对抗”，对抗一切生理和心理的惰性，过“意志”主导的生活。也许我不适合，但我想试试。\n2022.04.03 🌤️ by.XD\n","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.02-%E4%B8%80%E7%99%BE%E4%B8%AA%E7%BF%BB%E6%9D%A5%E8%A6%86%E5%8E%BB%E7%9A%84%E5%A4%9C%E6%8A%B5%E4%B8%8D%E8%BF%87%E8%87%82%E5%BC%AF%E7%9A%84%E6%B8%A9%E6%9A%96/","title":"【XD的一周漫步】No.02 一百个翻来覆去的夜抵不过臂弯的温暖"},{"content":"本周回顾 状态\n这周更加偏离【早睡早起】的作息了。但是工作状态不错，毕竟本周只需工作三天。头疼的状态也没有出现，真棒！希望下周可以回归早睡，我需要自控力！I NEED SELF-CONTROL POWER💪!\n做了啥\n发现了一个日常背单词的好东西【喵喵机墨水屏电子单词卡】（被https://sspai.com/post/72523安利到了），速速买来，准备每天工作间隙背一背 终于搞清楚了为啥电脑上打开自己的网站，放在七牛云上的图片无法显示：先是拨打了七牛云客服电话，被告知可以提【工单】说明具体情况（土鳖如我，第一次知道）；后面被告知是因为我的网站是https协议，但我在七牛云上绑定的是http，并被告知“由于浏览器端 安全策略问题，目前Chrome、火狐等浏览器默认会将https协议网站内置http协议URL强制升级为https发起访问，这是浏览器端的处理策略，七牛侧无法控制。”。所以我只能将七牛云绑定的域名升级为https【下周待做】 洗晒换季被子，天气热了 学习进度\n无 😢 反思时间：看了上周的【一周漫步】，关于“展望下周”模块的三个事，一个都没做到！ 书与影\n正在阅读：\n《N号房追踪记》 追踪团火花 (作者), 叶蕾蕾 (译者)\n完成阅读：\n《风声》 麦家，⭐⭐⭐⭐\n电影：\n《无敌破坏王 Wreck-It Ralph (2012)》 ⭐⭐⭐⭐\n《无敌破坏王2：大闹互联网 Ralph Breaks the Internet (2018)》 ⭐⭐⭐⭐\n展望下周 升级七牛云绑定域名http-\u0026gt;https 球球了！下周一定要学软考！ 好好写代码！下周work任务多！ 言论 计算机使用能量进行计算，那么能不能反过来，使用计算来储存能量？ 这是可以做到的，让信息变成电池。电力便宜时提前执行某些耗时的计算，并将结果缓存；电力昂贵时，再使用这些计算结果。 \u0026ndash; 《错时计算节省机房成本》 - https://www.ruanyifeng.com/blog/2022/04/weekly-issue-202.html#/\n让信息变成电池，听起来不可思议吧。惊叹于每一个巧妙的思路。\n我们完成了一次公式，就进入了一个新的舒适区，我们再完成一次，又形成了新的平衡。我们不断扩大自己舒适区的面积，变得越来越有学识，能解决越来越多的问题，也许运气好，可以获得超额或意外的回报。\n我们的生活，被一次一次平衡填满，直到生命结束。我甚至可以再写出一个公式。定义生命的视角有太多种，我只能说，我不喜欢终身学习这一种，更讨厌躺平那一种。 我们不能忘记时间的力量，不能忘记经验的力量，甚至不能忘记父母给予的资本和帮助的力量。\n我见过太多人，不是终身学习，而是在终身折磨自己，试图打破舒适区，忘记了舒适区其实是一种平衡。 在舒适区里生活，向舒适区外挑战。大多数人，可能都弄反了。 - 摘自newsletter\n说的真好。舒适区不是一成不变的，它是平衡，它会扩大。近段时间，【舒适圈】似乎被妖魔化了，待在【舒适圈】被等同于不求上进。为何一定要追求跳出舒适圈去遍体鳞伤甚至失去斗志呢，我就待在【舒适圈】，把头探出去嗅嗅外面的世界，有保留地挑战自己，稳中求进，何尝不是一种好策略呢？\n某支爱斯基摩人有这样的习俗，谁要是生气，就让他带一根树枝到雪地上走一直线，以消解怒气，一直走到在心灵上获得平静的那个点上，插上树枝——以见证愤怒的力度和长度。(by 梁文道为《走路的历史》作序) - 摘自newsletter\n插在雪地的树枝，见证愤怒的力度和长度。听惯了物化表现心灵“好”的一面（诸如爱情，浪漫，喜悦），将愤怒用树枝表现，读来惊喜。\n当他在微博提问：「你有多久没有体验过那种一觉醒来，充满着活力和期待完成一天事务的感觉？」许多人感觉被击中了。 - mp.weixin.qq.com\n我也被击中了。\n韩裔德国哲学家韩炳哲在《倦怠社会》一书中提出这样的观点，21世纪的社会不再是一个规训社会，而是功绩社会。功绩社会充满积极的口号，它看似自由，却让人们在过度的积极性中自我剥削，直至精疲力尽，感到疲累和抑郁。 - mp.weixin.qq.com\n内卷是天性，是人类逃不过的诅咒罢了。\n对孩子来说，每天都能遇到非常多的新鲜事物，比如平板电脑，他们会很小心的去尝试触摸，并在收到反馈以后兴奋异常。每一个 APP 或者小游戏都能把玩很久，收获快乐。 对我们来说，快乐的阈值是越来越高的，保持好奇心和探索欲需要消耗能量，在现实的压力下，也会慢慢淡化。但在和孩子相处的过程中，感觉能补充到这样的能量。\n在荡秋千的时候，会专注在如何让自己保持荡的更高；在骑自行车的时候，会专注在如何让自己骑得更快更稳；甚至在玩摔炮的时候，都会专注在换着花样把炮摔出不同的响声。 而对我们来说，专注做一件事在各色碎片化信息和视频流的刺激下，变得异常艰难。- sspai.com\n不动声色、不想思考的成年人，我们何以堕落至此。\n听过很多道理，依然过不好一生 摘自本周看过的那些大小“道理”，希望可以【稍微】过好这一生吧\n看似最笨的学习方法\u0026mdash;-笔记和记忆力\u0026mdash;-偏偏造就了最高的开发效率。 永远选择自己真正喜欢的事情，最后即便失败了，逝去的每一天都不亏。 真没想到我们在这样一个地方告别，但跟人告别的时候吧，还是得用力一点。因为你多说一句话，说不定就是最后一句。多看一眼，弄不好就是最后一眼。 在固定时间做固定事情的意义 ，就是带来稳定的预期和信任。 生气就像团滚热的煤块，拿在手里的时候，你只想把它扔给别人。 分心就是你的大脑在不断敦促你分散自己的注意力，以此来逃避负面情绪。 重新考虑自己与时间的关系，时间并不是一定要“充分利用”。 Last Word 拖延症，消灭它😣！清空TODOlist，人人有责😣！\n2022.04.09 ☀️ by.XD\n","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.03-%E7%9C%BC%E7%9C%8B%E4%B8%96%E7%95%8C%E5%8F%98%E5%BE%97%E8%B6%8A%E6%9D%A5%E8%B6%8A%E7%B3%9F/","title":"【XD的一周漫步】No.03 眼看世界变得越来越糟"},{"content":"​\t下周三就是本打工人一周年了。我熟悉和进步了很多，但也常常能感觉到能力不足，有很多需要学习的地方。工作一年了，就不能算是新手了。希望自己在工作中可以提高效率，少犯错，找到自己的价值。虽然很“官话”，但也是对自己的真实期许。一直在路上，不要停下脚步。\n本周回顾 状态\n本周是忙得团团转的一周。紧张的工作需求，加上下个月的软考压力，像两座大山一直压着我。每天白天我一直处于高压状态，努力码代码，几乎没机会看手机。晚上加班后，仍然想学一会儿软考，但再怎么不浪费时间，也只有大概半小时的学习时间。**感觉有些窒息。**但周三状态就明显疲软了，到了晚上就没劲了。后面两天也是好好工作，但没精力学习软考了。说真的，很累。但是这两件事都是无法推迟的事情，即使我想慢慢来，时间也不允许。加油，熬过这段时间，XD。\n做了啥\n努力工作 学了一点软考 学习进度\n只学了一点软考 书与影\n正在阅读：\n《你的夏天还好吗？》，金爱烂 (作者), 薛舟 (译者)，出版2016\n完成阅读：\n《N号房追踪记》，作者: [韩]追踪团火花，出版2022 ⭐⭐⭐⭐\n电影和电视剧：\n《后天 The Day After Tomorrow (2004)》 ⭐⭐⭐⭐\n《猎罪图鉴 (2022)》 ⭐⭐⭐⭐\n展望下周 希望自己压力不要这么大，相信自己能一步步做完💝。 言论 十年前，2011年3月11日，日本经历了一次集体性社会创伤——9.0级特大地震、巨大海啸、核泄漏。这三重伤害超过“天灾”的范畴，在现今的日本仍留下了难以磨灭的后遗症。 这十年，在无数日剧、电影、文学、非虚构写作里，也总是能看到东日本大地震的影子。但人们很少直呼其名，要么是主人公把日历翻到了3月11日，要么是镜头里的建筑物在剧烈颤抖，然后旁白缓缓开始叙述说——「あの日」（那天）。 日本人不会直呼其名。他们不像美国人，每年秋天那一天，在双子塔曾经矗立的地方亮起高耸入云的灯；也不像中国人，用默哀鸣笛防空警报等仪式纪念灾难中逝去的亡魂。日本民族性中的隐忍、自制，让他们把巨大的悲痛融入了这短短的三个字，这是一种克制的默契与心领神会。 - 链接\n关于一个民族的集体创伤和沉默。\n每个人的身体里都有一个神，但当你没有将自己全然贯注于此刻的时候，这个神就会离开你，自己走掉。这个过程就叫走神。 - mp.weixin.qq.com\n看好你体内的那个神吧（笑）。\n相信大数定律。一件事哪怕只有 10% 的把握，连试 20 次之后成功率也有九成 - mp.weixin.qq.com\n这个时代还算不算，努力虽然不一定都能发光，但持续努力的话，你的光芒很可能就遮不住了。\n我这几天没睡着，一幕幕的就像放电影一样，都在我心里面啊。她很小的时候，几个月大，我骑自行车，她坐在我自行车后面，带到外婆家去啊，到公园去啊什么的。她坐在后面打瞌睡了。后来去学校，背语文书啊，有时候她不用心，背不出来。然后我脾气一发，她马上读两遍就背出来了，很聪明的。但现在我连女儿最后一面也没见到，这么残忍。 - mp.weixin.qq.com\n前阵子因为在微博上感恩辛苦帮忙送餐给自己父亲的外卖员，却遭到网暴的女孩，跳楼自杀了。看到这篇文章时，我感到很恍惚，为什么又是一个因为网暴而离世的人，为什么这些键盘侠可以这样恶意揣测，质问，煽动，跟风去曲解一件完全没错的事情，为什么。\n工具傍身，应该如有私人助理一样轻松舒适。 这是我所理解的，一种朴素的「信息极简」。- view.inews.qq.com\n文中以“私人助理”来比喻最让人舒服的信息管理方式。也许我们大多数人没法聘请私人助理帮我们打理一切，但可以磨练出最适合自己的信息流及日常计划方式。\nCounterpart 里，三十年前开始分叉的不同平行世界的同一个男人第一次面对面坐着。他问，为什么我们会那么不同？你看起来那么自信，我那么颓废，你升职了我在这止步不前，我们娶的或没娶的人不同，我们喜欢的食物不同、音乐不同，你有胆固醇我不知道自己有没有。\n另一个人回答：别想了，很多人因为想这个而想疯了。这就是最 fucked up 的地方，基因、童年，这些居然都不重要。我们都对自己的经历束手无策。你和我的区别可能仅仅在于一小个瞬间，仅仅因为一件小事你做错了或者做对了。 - mp.weixin.qq.com\n是我们决定了选择，还是选择造就了我们。\n每个人心里都有一团火，但路过的人只看到烟。 - mp.weixin.qq.com\n很妙的形容。\n在韩剧中经常可以看到男主角把女主角推到墙上强吻的场面，以及男主角粗暴地抓住女主角手腕的场景等，而有些人竟然将之吹捧为所谓的经典镜头。在韩国社会，约会暴力正作为让人心动的浪漫场面被消费。 - 《N号房追踪记》\n以前没觉得有什么不对，突然醒悟到这居然是一种被浪漫美化的暴力。\n这样说的时候，我的声音已经像山羊的叫声一样带着哭音了。- 《N号房追踪记》\n虽然是个难过的场景，但还是想说：很喜欢这个比喻。\n听过很多道理，依然过不好一生 摘自本周看过的那些大小“道理”，希望可以【稍微】过好这一生吧\nThose who have a WHY to live, can bear with almost any HOW. 如果你总是认可自己，那么余生皆是假期。 我对你的看法说明不了你是谁，而只说明了我是谁。 Last Word 晚安。\n2022.04.17 ☁️ by.XD\n","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.04-%E4%B8%80%E7%9B%B4%E5%9C%A8%E8%B7%AF%E4%B8%8A/","title":"【XD的一周漫步】No.04 一直在路上"},{"content":"​\t上周末因为补班了一天，就搁置了。故本次的一周漫步，其实是两周漫步😛。今天是五一假期的第一天，我发4️⃣，这五天要好好学软考，好好生活，好好快乐！！！\n本周回顾 状态\n这两周的状态，还是感觉压力大，心累。感觉自己抗压能力还是很弱。但也一直在调整心态，在自己能力还不够的情况下，先做到与压力共存，后续逐渐化压力为动力。我认为，自己还是没有找到正确的工作方式，工作安排也不够好，工作能力也不够好，所以会有点力不从心的感觉。我想要的是那种游刃有余，“完美”安排好自己的时间，工作生活两不误的理想状态，这也是我一直努力的目标。总之，我不希望自己操之过急，毕竟要给自己成长的时间和机会，只要是一直向前的，就是对的。\n另外，不知道为啥，最近早上很嗜睡，起床都很困难🤦。\n做了啥\n写季度工作个人总结 网站加了两张专辑Playlist 网站加了吃过的部分店评分 解决关于网站之前遗留的问题 学习进度\n几乎没有🤔 书与影\n正在阅读：\n《贪婪的多巴胺》，(美) 丹尼尔·利伯曼 / [(美) 迈克 尔·E.朗](https://book.douban.com/search/迈克 尔·E.朗)，出版2021\n完成阅读：\n《你的夏天还好吗？》，金爱烂 (作者), 薛舟 (译者)，出版2016 ⭐⭐⭐⭐⭐\n《夏天、烟火和我的尸体》， [日] 乙一，出版2019 ⭐⭐⭐⭐\n电影：\n《绅士杰克 第一季 Gentleman Jack Season 1 (2019) 》 ⭐⭐⭐⭐⭐\n《杀死伊芙 第四季 Killing Eve Season 4 (2022)》 ⭐⭐⭐\n展望下周 下班时间多放点精力在软考上，这个月其他东西可以先放一放 工作上，需求抓紧完成 言论 我们的时间很宝贵，不要用于那些改变不了的事情，而要用于你能够改变的事情。一位美国神学家曾经写过一段著名的祈祷文：“请赐予我力量，全力改变那些可以改变的事情，平静接受那些无能为力的事情，拥有智慧区分这两者。” - www.ruanyifeng.com\n认清自己和现实\n你要知道，你的头脑，你的内心，不是酒店的厨房，可以把里面的东西像旧罐头一样扔掉。它更像是一条河流，每时每刻都在流动和变化。你无法矫直一条河流。 - www.yuque.com\n和自己共处，接受自己，也接受自己的变化\n我总觉得阅读和写作应该是个简单的循环游戏，如果你要写出点什么，要么在生活中碰到什么，所以你写下来，要么灵光一闪，被灵感砸中于是写点什么，要么就是你不停找点什么来读，然后写点什么。所以，就是生活、阅读、写作。嗯，应该就是这么简单才对，要继续生活，生活、生活、生存、生活、生存、生活、生存、生活，最后在一些间隙里，阅读和写作。 - 摘自Newsletter\n阅读，补充自己；写作，充实自己。我们中的绝大多数人无法将这两件事作为生存和生活的途径，但可以作为间隙中的一点喘息\n尽管本科阶段的学费贷款还没还清，然而恩智始终坚信，促使人生前进的不是忧愁，而是胆魄。克服恐惧最好的方式就是蔑视恐惧。她常常背诵这句咒语，尽管自己也不相信。 - 《你的夏天还好吗？》\n想起“朝阳冬泳怪鸽”的那句：“我们遇到什么困难也不要怕，微笑着面对它。消除恐惧的最好办法就是面对恐惧，坚持才是胜利。加油，奥利给! ” 一直被人们调侃。调侃着调侃着，我都快忘了这是一句“至理名言”了。\n听过很多道理，依然过不好一生 摘自本周看过的那些大小“道理”，希望可以【稍微】过好这一生吧\n那些难熬的日子才是一生中最好的时光，因为那些日子造就了他。 人生总有不顺的时候，不必勉强冲刺，就把它当作老天给的悠长假期，好好享受这个假期。 耐冷耐苦，耐劳耐闲。 Last Word 加油，奥里给！🧜‍♀️\n2022.04.29 ☁️ by.XD\n","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.05-%E5%8E%8B%E5%80%92%E7%A8%BB%E8%8D%89%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%8C%B9%E9%AA%86%E9%A9%BC/","title":"【XD的一周漫步】No.05 压倒稻草的最后一匹骆驼"},{"content":"​\t或许我应该把标题改为【XD的四周漫步】:） 没错，整个五月我都没更新文章了，现在回来了。所以我的一周漫步，好久不见。\n上月回顾 状态\n五月，可以用忙碌和变动来形容。这也是我这个月没有写一篇文章的原因——很累，身心俱疲。六月虽然也忙，但总算能喘口气。前两天看过一篇文章，大概是一个事业有成的企业家尝试最艰难的“底层”生活，住在一个卫生间大小的出租屋，干着累且收入微薄的体力工作。在开始之前，他设想自己可以在这种生活下也能保持自我理想和冲劲，但真正体验后，才发现他的唯一愿望已变成了吃上一口可口的饭菜。人的精力和体力都是有限的，即使你设想的自己可以多么自律多么保持进步，但当白天的高节奏工作消耗掉大部分夜晚存储的能量后：自律no，勤勉no，诗和远方nonono。这也是我最近和自己和解的一个观点：不要因为没实现自己的预期而沮丧或焦虑，认识到自己的极限，不要Overtake。\n做了啥\n参加软考（太忙了没准备好，先去体验一次） 去福大学生街看了看（托软考的福） 搬家（买了很多适配新家的东西，收拾打扫） 工作忙于开发一个需求 年终退税（居然还能退回一千多） 用Hugo+GitHub搞了静态网站，用于写技术文章 学习进度\n几乎没有，这个月太忙了 书与影\n这个月太忙，几乎没有书影音🙂\n展望下周 开发交易，改bug 调整作息，别让自己太累了 悲凉的底色 马东说他的人生底色是悲凉的。我想我们都是如此，只是有的人淡一点，有的人浓一点。我们已经看过很多讨论人生的言论，有人说人生就是要享受每一天活下来的馈赠；有人说人生来疾苦；有人说开心也是一天难过也是一天所以何不选择快乐呢；有人说只有痛苦才是人生。\n有时候我会想，人是否就只有这一生。在你有幸能够呼吸的这几十年，是否就是你的全部？你的脑子，你的思想，你的情感，你的所有组成你的部分，都会随着呼吸停止的一刻而罢工或消失吗？我觉得这很可怕，因为我想象不到「我没了」是什么概念。\n在这个浩瀚宇宙中，我们是怎样的存在呢？有没有可能，我们认为的浩瀚宇宙，只是真实宇宙的一个小点？我们是完全自主的高级智慧生物吗，亦或是未知的超生命体的一个卑微产物？我们太无知，太局限了。\n与这些相比起来，人生？只不过是一个渺小的人的几十年留下的一点痕迹罢了。就像我们认为五分钟很短，一天很长；人生也很短，从人类历史的长河看；人类历史也很短，从无限的未知看。\n偶尔，我会这种空而大的思考，就像现在。我常常关注的是今天明天我要做什么，很少想到今年我要完成什么。我很想跳脱出来，指导自己做事，如鱼得水地处理工作和生活。我觉得我太陷在我的生活中了，很少有反思和鞭策，我想改变自己，但总觉得缺了些什么。是动力、决心吗？不知道。\n这算是我的思考碎碎念吧，没有主题，单纯就是把脑中的一些想法打出来，我感觉我会舒服很多，这就够了。\n言论 不管是过去还是现在，传记最吸引我的一点是，书中的人物在自己生命的初期，也就是前五十页当中，是不会知道他或者是她会在第三百页的时候取得的成功。他们并不知道将会出现在自己面前的伟大。仔细想想这点吧，这是对你们自己未来的生活保持乐观的一个极好理由。你们所有人都仅仅在自己那本传记的前五十页，还有几百页的路要走。 - 摘自Newsletter（富于理性）\n对自己的最好幻想是：希望未来的自己会感激现在的自己，希望现在的自己不要让未来的自己懊恼和伤心。\n当你老了，回顾一生，就会发觉：什么时候出国读书、什么时候决定做第一份职业、何时选定了对象而恋爱、什么时候结婚，其实都是命运的巨变。只是当时站在三岔路口，眼见风云千樯，你作出抉择的那一日，在日记上，相当的沉闷和平凡，当时还以为是生命中普通的一天。（来自于《杀鹌鹑的少女》） - 摘自Newsletter（事不过三）\n人生真像一场只能玩一次的游戏呀。\n客气、中庸、骑墙也许可以保护自己，避免冲突。但是只有确信与坚持，才是职业和勇气的表现。团队需要一个有担当的领导，家庭需要一个负起责任的主心骨，社群需要敢于说出真相的人。 - 摘自Newsletter（happy xiao）\n作者举了两个故事的例子：1、一个不教客户摆pose的摄影师（“他都是客气地说，随你们就好”）被认为是不专业的；2、一个遇到极端天气的机长坚持自己的判断，拒绝指示台的命令，避开了危险。在很多专业领域，都要用自己的声音，而且要响亮。\n关于人类的梦境，这里有一个很有意思的研究，对于梦的进化意义提出了过适大脑假说（overfitting brain hypothesis）。这个假说的提出源于科学家在对深度神经网络的研究中发现，如果一个网络一直处理同一组数据，就有可能造成网络过于精密地匹配到现有数据，而无法对未来做出预测和概括，无法generalize，所以数据科学家就需要对该网络进行人为的“噪声注入”。这篇论文的作者认为人的大脑也具有类似特性，因为日常生活中处理的信息有可能是非常重复和固定的，所以大脑需要通过梦境的方式来输入一些新鲜奇特，不同寻常的数据，来增加大脑神经网络的概括和预测能力。以及，我们对大脑的理解，真是和时代的技术发展并行的，这些假说来源于计算机和算法研究，在此之前的时代人类应该不太能拥有这种视角。 - 摘自Newsletter（Steve说每周通讯）\n这里面的两个观点都很多意思。一是大脑为了激活大脑，通过奇特的梦境来提高大脑神经网络的概括和预测能力；二是，人的认知随着技术思维的发展，也会更加开阔。\n有个护工跟朋友说自己总能见到孙俪，朋友说不要吹牛。他有一天终于鼓起勇气开口，希望孙俪和他拍张合影，穿上了自己最干净的蓝衬衣。拍好照片后，孙俪大喊：你赶紧去证明自己！ - mp.weixin.qq.com\n哈哈，这里的孙俪好可爱！\n这10年里，孙俪见过了太多人在那儿来来往往，今天去，他还在，下次去，人就没了。「在那个医院你只能看到很多无常，看到生死，看到人最无奈的状态，你根本不知道人生下一秒发生什么。所以不要做那么多事业规划，没有用的，就过好当时当刻就可以了。**我就会特别珍惜我自己还能直立行走，还能用语言表达，还能独立思考，还能享受自然空气，享受美食，看到这美景。我觉得这就够了，已经是天下最幸福的事了，真的，没有过多的奢求。**所以我就很珍惜每一天，也很珍惜我拍的每一个作品，每个作品都当成最后一部作品拍。我也不知道这叫乐观，还是悲观。我觉得我挺会安在当下的，经常会想到，我每一天都当最后一天过。」 - mp.weixin.qq.com\n看了这篇文章，才知道孙俪是一个极度自律和极度认真的演员。和邓超简直是互补的性格。珍惜当下，虽然已经是烂大街的标语了，但我觉得孙俪应该是有在好好践行。\n在中国十几年，2010年左右，拿着相机在路上并不会引起任何人的惊讶：无论是拍摄路上的行人、老弄堂、拆迁的工地，还是在最繁忙的商业街，顶多会引人多看一眼。大概从 2018 年起，尤其是疫情之后，我带着相机，哪怕什么都没有做，总有保安过来问我在拍什么、我是哪里人、为什么要拍摄，有时候甚至被呵斥、赶走。曾经与保安、年长的居民畅快闲聊，听他们自豪地讲述背后建筑的零星历史和故事——这样的经历已经消失了。2022 年初，因为商业项目我去了济南，工作结束后，在济南的火车站，当我拿出相机准备拍摄新盖好的车站建筑时，被保安拦住。他抓着我的胳膊，冲对讲机说着什么（我没听懂）。之后来了两个警察。那个保安情绪很激动，对警察说着什么，我只听到了「美国间谍」四个字，围观的人开始越来越多。警察看了我的护照，了解到我不是美国人，让我删除了照片之后就放我走了。这件事对我的冲击很大。为什么我会被当作「美国间谍」？分不清白人的国籍我还能理解，但「间谍」？ - mp.weixin.qq.com\n一个在中国生活了十几年的白人，在离开上海之前的自述。虽然没有亲身经历，但对于这种变化在这些年其实也能捕捉到。疫情，国际关系，人们之间的隔墙、言论等原因，使得以「开放」闻名的上海人是也人非。\n基辛格说：“权力是最好的春药。”但是研究表明，权力似乎也是一剂毒药，会给位高权重的人带来脑损伤。历史学家亨利·亚当斯说：“权力是一种以杀死患者的同情心终结的肿瘤。”《大西洋月刊》的一篇文章聚焦了权力对大脑和认知能力的不良影响——糟糕的是目前似乎还没有治愈的手段。 - 36kr.com\n权力会扼杀同理心？原来这真有医学依据。\n《焚书》\n当那个政权下达命令，公开烧掉包含\n有害知识的书，而牛群被迫\n从四面八方把一车车书\n拖向篝火，一个被流放的作家，\n最好的作家之一，细看\n被烧的书目，惊讶地发现\n他的著作都不在其中。他愤怒地\n奔向他的书桌，给当权者写信。\n烧我！他飞快地写道，烧我！难道我的书\n不是一直在报告真理吗？而你们竟然\n把我当成谎言家！我命令你们：\n烧我！\n1938 - mp.weixin.qq.com\n——布莱希特\n听过很多道理，依然过不好一生 摘自本周看过的那些大小“道理”，希望可以【稍微】过好这一生吧\n绝对没有负担会使一个人比空气还轻，翱翔于高空，离开大地和他的尘世，变得只有一半的真实。 有钱人只是有钱，富有的人有的是时间。 跌落，是每个周期里最深刻的烙痕。 艺术是让你逃脱一切的避风港。 当你原谅一个人，对方未必知道，但你会自愈。原谅，不是为了别人，那是给自己的礼物。 99% 情况下，最佳时机就是现在。 Last Word 最近看到一个关于记录自己的音乐清单APP（MusicBox，￥18），可以配合Spotify或Apple music使用，体验下来蛮有意思的。可以把要听的单曲/专辑mark到这里来，等到有空的时候听。听完可以标记【Played】状态，也可以添加Tag和Notes。现在听歌越来越浮躁和守旧了，忽略了许多高质量的歌。希望这个APP能更促进我吧。\n2022.06.04 ☁️ by.XD\n","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.06-%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81/","title":"【XD的一周漫步】No.06 好久不见"},{"content":"​\t延续忙碌的五月，这周过的也是非常枯燥。被忙碌的工作塞满了时间，一周加了四天班，回家后只剩下疲倦。所以，回想起过去的一周，脑袋空空，只想用null来形容，也就是本周的标题。本来想想这周就不写了，但是又想到没内容的一周也是一周，也记录下吧。\n本周回顾 状态\n如前言，不赘述。\n做了啥\nwork 将新搬来的家收拾清楚了 公司搬家 旧租处的水电费等结算清楚 学习进度\n无 书与影\n正在阅读：无\n完成阅读：无\n电影：无\n展望下周 没别的奢求，把最近的工作做清楚就好 言论 很多可怕的事情都可以被称为「百年一遇」。 百年一遇的事件并不意味着它每 100 年都会发生。它意味着在任何一年都有 1% 的机会发生。这似乎很低。但是，当有数百个不同的独立的 100 年事件时，其中一个会在某一年发生的几率是多少？相当高。 如果明年有 1% 的机会发生新的全球疫情，1% 的机会发生经济萧条，1% 的机会发生洪灾，1%的机会发生政治崩溃等等，那么明年——或任何一年——发生坏事的几率是\u0026hellip;\u0026hellip;不低。 - 摘自Newsletter（Shyrism.News）\n重新认识【百年一遇】\n——不要让黑夜成为所有女孩的噩梦 https://mp.weixin.qq.com/s/viYyBpF8-QiZsIi_G0KgiA#/\n酷热的夏天想要穿上漂亮又凉爽的吊带连衣裙，但是一想到地铁上恼人的目光，还是换上了T恤和牛仔裤； 加班到很晚叫车回家，尽管很困还是强打精神，坐在后排警惕司机的一举一动； 半夜回到小区，避开幽暗的小路，绕远走有路灯的地方，看到昏暗的楼梯间和虚掩的门立马神经紧绷，加快脚步一路小跑直到回到家锁上门； 好不容易到了周末与朋友聚会，也不敢玩到太晚，到家后不忘掏出手机给朋友发一条报平安的微信\u0026hellip;\u0026hellip;\n这些细节都是犯罪学中典型的受害焦虑的表现——情绪或行动上对于犯罪或与犯罪关联的现象产生的畏惧或焦虑反应。 - mp.weixin.qq.com\n真的，每个场景都感同身受。请把黑夜还给女性。\n“厅局风”潮流之所以能够异军突起，碾压日潮美潮等，都是年轻人在疫情的背景下和生活提取的最大公约数，是妥协的产物。 当缺乏安全感时，人们就会趋向于保守，在安全和冒险的选择中，人们会不自觉的寻求安全，就连就连乐队的主唱，也找了一份安定工作，当了保安，没有什么可挣扎的。 - mp.weixin.qq.com\nemmmm\u0026hellip;\n听过很多道理，依然过不好一生 摘自本周看过的那些大小“道理”，希望可以【稍微】过好这一生吧\n要爱具体的人，不要爱抽象的人；要爱生活本身，胜于爱生活的意义。 Last Word 因为某些原因，决定接下来都要健康生活，少出去吃，不熬夜，坚持锻炼更好。自勉🐝。\n2022.06.12 ☁️ by.XD\n","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.07-null/","title":"【XD的一周漫步】No.07 Null"},{"content":"​\t没想到我又三周没写了！\n本周回顾 状态\n最近的状态大概就是浮躁吧，发生了一些事，有了一些新感悟。虽然是工作的事情不便在这边说，但结论就是更深刻地感受到时不待我，要加紧时间努力向上，化被动为主动。\n做了啥\n去宜家买了新书桌，稳定的桌子的快乐 买了iMac，还未到货 这周开始养成早睡早起的作息，早上上班前可以有一个小时学习 买了竖屏显示器，双屏的快乐 买了折叠床，中午可以躺下的快乐 学习进度\n最近开始看鸟哥的Linux基础书 书与影\n电影/电视剧：\n瞬息全宇宙 Everything Everywhere All at Once (2022) ⭐⭐⭐⭐⭐\n无人知晓 誰も知らない (2004) ⭐⭐⭐⭐⭐\n异物志 (2022) ⭐⭐⭐⭐\n幽灵公主 もののけ姫 (1997) ⭐⭐⭐⭐⭐\n小武 (1998) ⭐⭐⭐⭐\n展望下周 好好学习 充实、坦然 言论 谈恋爱就像在高速路上开车，有很多个出口，有的人会在下一个出口下车，有的可以陪你开很久后才下车，但只有一个会陪你一直开到尽头 - 《老爸老妈浪漫史》\n人生就像没有回头路的高速路，你必须一直一直开，就算有时候你累了，在休息区休息了一晚，第二天仍然得继续出发。小时候，父母驾驶着家庭这辆车；长大后，你就要渐渐掌握方向盘了，别说你不会开车，没有人生下来就会。幸运的话，你可以一路无阻地驶向终点，但大部分人小则遭遇抛锚，或驶错分岔口，甚至有场车祸等着TA。珍惜你脚下的车、眼前的路、身边的人。一点无关谈恋爱的高速路感想。\n稳定高自尊的人，看起来简单、自然、真实，成功的时候会开心，失败的时候也不掩饰难过。被表扬的时候就感谢对方，被批评的时候就想想对方有没有道理，就事论事，不会因此而否定自己或者埋怨别人，别人跟他相处也愉快。 - 摘自Newsletter（事不过三）\n自勉\n没挤上公交前，我认为每个人都可以再挪一下给我一个空间；一旦上了公交车，我就嫌弃每一个想要上车的人。 - mp.weixin.qq.com\n一篇关于今年上海疫情封闭时期的观察想法，关于人性的复杂性的讨论。\n大裁员那段时间，整个 HR 团队是比较丧的，或者说压抑。我自己做这一行太多年了，面对员工可以保持淡定，但当你回到家或者周末，那种情绪是会影响你。它不是那种激烈的，不像有的人回家就大哭一场，我是过一段时间才发现，我那时情绪特别差，对什么都不感兴趣，我知道自己的情绪已经不健康了。 负面情绪一方面是来自于，做我们这行肯定都懂法，但有时候做的东西又不完全按法；你明知道这个事不对，你没有立场去做这个事，你只不过是欺负员工不懂法，或者欺负员工没选择。 - www.myzaker.com\n从HR的角度了解今年的大厂裁员浪潮，砍掉的是数字，背后关乎的不仅是每一个直接被裁掉的员工故事，也是在这场裁员中的直接执行者HR的挣扎。\n这跟80年代的画风完全不同。仅在几年前，日本人还想要买下整个世界，伦敦和纽约的奢侈品店挤满了日本富人，而即使是再普通的工薪阶层，也敢按揭30年购买一套价格堪比纽约的公寓或一户建。整个国家大病一场后，所有人的预期都变了。\n村上春树在《海边的卡夫卡》里写道：从沙尘暴中逃出的你，已不再是跨入沙尘暴时的你。 - mp.weixin.qq.com\n每5个韩国年轻人里，就有1个在炒币 - m.huxiu.com\n把这两篇放在一起看，因为日本和韩国曾经都有自己的鼎盛时期（其实现在也不赖），现在的境遇却引人深思。年轻人的发展空间和努力回报率已被大大缩减了。\n城市团队亦如履薄冰。“竞争对手给政府施压，宣称对方投我也要投。”运营负责人说，他们组织上百号人扫街，争分夺秒地把小蓝从犄角旮旯找回来，送仓库修复，再想办法投出去。对手为了阻挡投放，甚至“用粪便擦在车座上”。- mp.weixin.qq.com\n共享单车大战已是昨日。回看当时的竞争，还有点野蛮哈哈 :-)\n听过很多道理，依然过不好一生 摘自本周看过的那些大小“道理”，希望可以【稍微】过好这一生吧\n喜欢就是生产力 最高效的头脑往往最能放开去追随那些最幼稚的内心冲动 Last Word 「即刻」蛮有趣的~\n2022.07.03 🌧️ by.XD\n","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.08-%E5%8A%A0%E5%BF%AB%E8%84%9A%E6%AD%A5%E5%B9%B4%E8%BD%BB%E4%BA%BA/","title":"【XD的一周漫步】No.08 加快脚步年轻人!"},{"content":"​\t其实很多时候我都不知道要写啥东西，表达欲缺缺，也没有想发表观点的事件，大多只是输入别人的看法，但也对热点事件越来越不关心了。有时在想这是不是失去年轻的“热情”的一种表现，一种心累的表现，这很可怕，因为我现在的年龄不应该正是关心大众，表达一切的时候吗！WAKE UP!\n本周回顾 状态\n被公司新出的考核制度“伤透”了心，也逐渐意识到工作再怎么干，也是为别人做的，你真正获得的是自己的进步。所以我这两周就几乎不加班了，抓紧事件自学。我也深刻意识到自己现在的知识储备有多被动，多么需要被扭转。Anyway，最近需求也没有很紧张了，我也在找时间学习了，所以目前一切还可以。但是可能这两周刚开始作息早睡早起，所以有几天的下午感到很疲倦。\n做了啥\n周六仔仔她们来家里玩了 学习进度\n这两周《鸟哥的Linux私房菜 基础学习篇》看了1/3 Redis看视频浅学了些 书与影\n电影：\n真爱至上 Love Actually (2003) ⭐⭐⭐⭐\n十二猴子 Twelve Monkeys (1995) ⭐⭐⭐⭐⭐\n展望下周 继续自我学习 早睡（划重点） 言论 无\n听过很多道理，依然过不好一生 摘自本周看过的那些大小“道理”，希望可以【稍微】过好这一生吧\n无\nLast Word 热啊 最近最高温39°，白天出门会变得不幸！\n2022.07.10 ☀ by.XD\n","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/xd%E7%9A%84%E4%B8%80%E5%91%A8%E6%BC%AB%E6%AD%A5no.09-%E5%B0%B1%E5%A5%BD%E5%A5%BD%E7%94%9F%E6%B4%BB%E5%90%A7/","title":"【XD的一周漫步】No.09 就好好生活吧"},{"content":"参考教程：https://www.xiachufang.com/recipe/104726387\n好吃指数：⭐⭐⭐⭐\n难易指数：💦💦💦\n准备 食材 调料 鸡爪（10个） 八角（2.5个） 五花肉（250g） 香叶（3片） 鹌鹑蛋 桂皮（不到半个） 干辣椒（1个） 花椒（15粒） 姜片（2片） 冰糖（不要太大块，大概一勺） 料酒（3勺） 生抽（4勺）、老抽（3勺） 步骤👩‍🍳 泡鸡爪去血水 焯水煮鸡爪和五花肉（放姜片和料酒），鸡爪8分钟，五花肉5分钟 鹌鹑蛋煮熟，剥壳 开卤 加所有食材和配料，水没过食材 大火煮开，转中小火煮，共45分钟 中途记得搅动 出锅 PLUS😋 五花肉的肥肉比较油腻，不推荐用此方法煮 鹌鹑蛋很入味，推荐！！！ 45分钟鸡爪已经软烂了，赞 冰糖不要加太多，不然会太甜 此方法不用炒糖色，比较容易 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E5%8D%A4%E9%B8%A1%E7%88%AA/","title":"卤鸡爪"},{"content":"参考教程：https://www.xiachufang.com/recipe/106432832/\n好吃指数：⭐⭐⭐\n难易指数：💦\n准备 食材 调料 口蘑 葱 米粉（一人吃：半块） 香菜 魔芋丝 步骤👩‍🍳 洗口蘑\n去掉根部（不要丢弃），洗 煎（小火）\n油不要太多，不然汤会油 把口蘑开口朝上煎，煎一会放口蘑根部一起，口蘑软了后用铲子一份为二 多煎一会 煮（中小火）\n加冷水煮（⌛切葱和香菜，洗魔芋丝） 沸腾后加魔芋丝，加盐（可以多点），生抽（如果需要的话） 快出锅前加米粉，煮2分钟大概 加葱和香菜，出锅 PLUS😋 想吃鲜掉眉毛的口蘑汤，又不想煮饭，于是自己加了米粉。本来怕汤味道太浓，后面感觉还是蛮淡的，蛮正好（下次盐可以多加点）。 汤的鲜度不是很出色，但是口蘑本身吃起来的鲜度太棒了！ 用的是雪平锅煎口蘑，一直开小火，不会焦掉。因为口蘑自己会出水。 香菜和葱，有还是一定要加的。 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E5%8F%A3%E8%98%91%E7%B1%B3%E7%B2%89%E6%B1%A4/","title":"口蘑米粉汤"},{"content":"参考教程：https://www.xiachufang.com/recipe/106616303/\n好吃指数：⭐⭐⭐⭐\n难易指数：💦💦\n​ 准备 食材 调料 肥牛（半包） 生\u0026amp;老抽 土豆 x 1 耗油 番茄 x 1 盐 洋葱 x 1 淀粉 胡萝卜 x 0.5 （黑胡椒，白芝麻） 白菜或其他菜（一点） 步骤👩‍🍳 调酱汁\n生抽2勺+老抽1勺+耗油1.5勺+盐\u0026amp;淀粉若干\n⌛同时：肥牛焯水到变色；番茄泡热水\n处理食材\n所有食材削皮+切丁\n炒（按先后顺序）\n煎土豆+番茄煮烂+放洋葱和胡萝卜+翻炒一会儿+加酱汁\n煮\n煮5分钟大概+加肥牛等其他+2分钟后出锅(可以撒些黑胡椒和芝麻)\nPLUS😋 拌饭好吃 这个量够一个人吃3顿了，因为一碗饭不能配很多 仅需一道菜即可，足够方便 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E5%9C%9F%E8%B1%86%E8%82%A5%E7%89%9B%E6%B5%87%E5%A4%B4/","title":"土豆肥牛浇头"},{"content":"好吃指数：⭐⭐⭐\n难易指数：💦💦\n准备 食材 调料 排骨（肋排） 小米辣、蒜、香菜、葱、姜 青尖椒 白糖 小青柠 料酒 花椒粉 生抽 盐 步骤👩‍🍳 腌排骨\n加料酒、姜丝、生粉、食盐、油搅拌均匀，冰箱腌制2小时\n准备调料汁\n用可食用的菜板准备（因为调料待会不过油了）。\n切葱、小米辣、蒜、香菜碎放入碗中 加入生抽、白糖、食盐、花椒粉 挤入小青柠搅拌均匀 蒸排骨\n将腌好的排骨码在盘子上，上面放上青尖椒，水沸后上锅蒸25分钟\n调料汁继续调制\n蒸完排骨后，将整好的青尖椒捣碎，加入步骤2的调料汁拌匀，并加入蒸排骨汁\n将排骨和调料汁拌匀即可\nPLUS😋 排骨一定要买那种骨头在中间的哦，香，有软骨也很嫩 排骨一定要腌一段时间，不然会有些腥味。有条件的，可以腌一晚上 酱汁很美味，也可以拌饭吃 青尖椒切的时候要小心，里面的籽尽量别碰到手，不然你会收获一双火辣辣的手 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E6%89%8B%E6%8A%8A%E6%8E%92%E9%AA%A8/","title":"手把排骨"},{"content":"参考教程：https://www.xiachufang.com/recipe/102197411/\n好吃指数：⭐⭐⭐\n难易指数：💦💦💦\n准备 食材 调料 猪肉*1/4斤 白胡椒粉 湿木耳*1.5片 生抽 黄瓜*0.5 盐 韭黄 糖 虾*几只 麻油 胡萝卜*一点 油 香菇 粉丝*一卷 春卷皮（两个人10张） 步骤👩‍🍳 蒸（或微波炉）春卷皮（因为是冷冻层拿出来的）\n处理食材\n切丁：猪头，木耳，韭黄，虾（生的剥壳剁烂），香菇 切丝：黄瓜，胡萝卜，粉丝 搅拌在一起调味（所有调料适量）\n虾头煎出虾油，捞出虾头；放所有食材进去炒熟\n包着吃\nPLUS😋 调味个人觉得有点怪，但不知道哪里怪，可能是酱油或麻油导致的 肉可以少放点，因为蔬菜炒完会缩水，肉就显得太多 煎虾油后的虾头，也是一大美味呀！ ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E6%98%A5%E5%8D%B7/","title":"春卷"},{"content":"好吃指数：⭐⭐⭐⭐\n难易指数：💦💦💦\n准备 食材 调料 椰子（椰青汁水多，椰皇椰肉厚） 小青柠 鸡肉（文昌鸡最适合，三黄鸡也可） 姜末（沙姜更正宗） 配料（比如木耳，魔芋结，玉米，日本豆腐） 蒜末 青菜 小米辣 步骤👩‍🍳 取椰肉和椰水（此步较麻烦，推荐直接买椰肉和椰水。但不得不说，自己取的更好吃） 椰青表皮用刀削掉，用刀背沿着头部敲一圈，就可以打开倒出椰水。 椰皇先用筷子把头上的洞戳开，倒出椰水；用刀背在椰子中部敲一圈，就可以打开了。再敲若干块，外面的壳也脱落了。就剩下椰肉和粘连的黑色椰皮，用削皮刀分离即得椰肉。椰肉切小块。 准备配料（洗+切） 调酱汁（调料表+生抽） 煮椰子鸡（椰子水+椰肉+若干水煮沸，加鸡肉【煮十五分钟以内】） PLUS😋 有条件一定用文昌鸡，清远鸡也试过，还是不如文昌鸡。个人感觉文昌鸡\u0026gt;三黄鸡\u0026gt;清远鸡 有条件不要买冷冻的鸡肉，口感不如冷藏的 我们习惯第一锅不要加配料，只煮鸡。因为其他配料可能会抢走椰子的清甜味 此道菜的复杂性在于椰子的处理，有椰肉和椰水后，简单如火锅 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E6%A4%B0%E5%AD%90%E9%B8%A1/","title":"椰子鸡"},{"content":"好吃指数：⭐⭐⭐\n难易指数：💦\n准备 食材 调料 猪肉（最好带点肥） 小米辣 蒜 料酒 耗油 生抽 盐 步骤👩‍🍳 腌肉\n猪肉切薄片，加适量料酒、耗油、生抽、盐、油搅拌均匀\n切\n切小米辣和蒜片\n炒肉\n多放点油，加入小米辣和蒜片，加入肉片炒，加生抽，出锅\nPLUS😋 本来想煎肉的，但可能有水出来，就变成了炒肉。不过有个技巧是，等到炒到后面时，水快干了，这时候很香，趁着这个劲多炒几下，会有煎香。 纯瘦肉会有点干，尤其是放了一阵子再吃的话。但是也不是特别柴，没条件也能尝试。 炒完不要洗锅，直接炒青菜。青菜的水会把炒肉粘锅的香味溶进去。 小米辣是炒肉的灵魂。 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E7%82%92%E7%8C%AA%E8%82%89/","title":"炒猪肉"},{"content":"参考教程：https://www.xiachufang.com/recipe/103899941/#/\n好吃指数：⭐⭐⭐\n难易指数：💦💦\n准备 食材 调料 蛏子 盐 红椒（半个） 味精 姜 耗油 小葱 老抽 花蛤（顺便买了一点） 料酒 步骤👩‍🍳 稍微洗花蛤和蛏子即可（因为后面要剥壳） 焯水花蛤，蛏子（加姜片；别太久，不然会老） ⏳切红椒和小葱条状（葱白和葱叶分开）；切姜片 花蛤，蛏子剥壳 炒 热油爆香姜和葱白 放入红椒断生 放入花蛤，蛏子炒 加料酒、耗油、老抽、盐、味精 炒一会儿加葱叶，出锅 PLUS😋 蛏子推荐买菜市场中的带泥的，活的，肥美的好吃 炒花蛤同样好吃 红椒也好吃，甜甜的，不辣 味道不错，如果要辣点，可以加点小米辣 炒的时候大火翻炒，不要太久，不然会老 来自原作者：炒蛏子肉的时候可以适量加点水留点酱汁出来，用酱汁泡饭或是拌干面孩子都能吃上一大碗 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E7%BA%A2%E6%A4%92%E7%82%92%E8%9B%8F%E5%AD%90/","title":"红椒炒蛏子"},{"content":"参考教程：https://www.xiachufang.com/recipe/102856374\n好吃指数：⭐⭐⭐\n难易指数：💦💦\n准备 食材 调料 羊排块 葱 萝卜*0.5 盐 姜 料酒 步骤👩‍🍳 羊排冷水焯水\n萝卜切滚刀块（⌛焯水时）\n煮\n开水+羊排+葱段+姜+料酒，煮沸后转小火30分钟（珐琅锅） 加萝卜再20分钟 加葱花+盐，出锅 PLUS😋 超简单！ 下次水要多放点！ ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E7%BE%8A%E6%8E%92%E8%90%9D%E5%8D%9C%E6%B1%A4/","title":"羊排萝卜汤"},{"content":"参考教程：https://www.xiachufang.com/recipe/106681710\n好吃指数：⭐⭐⭐⭐\n难易指数：💦💦\n准备 食材 调料 羊肉 十三香 洋葱*1 盐 胡萝卜*0.5 糖 蒜苗 玉米*0.5 步骤👩‍🍳 羊肉切块，洗，冷水焯水 准备食材（⌛焯水时） 切洋葱（丁）、胡萝卜（条）、蒜苗（丁）、玉米（粒） 炒 洋葱炒香+加羊肉+十三香+加胡萝卜/玉米 煮 加开水（淹没），加盐和糖，煮沸后中小火到1/3 煮饭 将锅里的所有倒进洗净的米中，汤汁看下是否适量（多减少加），开始煮饭。等饭熟了，加入蒜苗搅匀即可出锅。 PLUS😋 很香，羊肉味也ok！ （直接copy原教程）羊肉可以选羊腿肉，带点羊油更好吃。 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E7%BE%8A%E8%82%89%E6%89%8B%E6%8A%93%E9%A5%AD/","title":"羊肉手抓饭"},{"content":"好吃指数：⭐⭐⭐⭐\n难易指数：💦\n准备 食材 调料 挂面 生抽 蒜 芝麻油 小米辣 醋 耗油 黑胡椒粉 步骤👩‍🍳 切蒜和小米辣 准备酱汁（生抽+芝麻油+醋+耗油+黑胡椒粉） 煮酱汁（小火，时间短一点） 放油，热蒜和小米辣 放第二步的酱汁 煮面，捞出拌酱汁即可 PLUS😋 味道很不错 煮完面直接将面倒到煮酱汁的锅里搅拌，更加均匀 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%92%9C%E6%B2%B9%E6%8B%8C%E9%9D%A2/","title":"蒜油拌面"},{"content":"参考教程：https://www.xiachufang.com/recipe/100447540\n好吃指数：⭐⭐\n难易指数：💦\n准备 食材 调料 豆腐（两块） 盐 紫菜 醋 小葱 味精 姜 步骤👩‍🍳 水泡干紫菜（大概1/2紫菜饼两人吃） 切 小葱丁 豆腐小块 姜片 煮 大火煮姜片和豆腐，水煮干 放紫菜（慢慢推开） 盐、味精、油、醋调味 煮一会儿即可，放小葱丁出锅 PLUS😋 味道比较单薄，不过也算是及格的简单式汤 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%B1%86%E8%85%90%E7%B4%AB%E8%8F%9C%E6%B1%A4/","title":"豆腐紫菜汤"},{"content":"参考教程：https://www.xiachufang.com/recipe/105959639\n好吃指数：⭐⭐⭐\n难易指数：💦💦\n准备 食材 调料 牛肉（一定请摊主切薄片）（二三十元） 生抽 豆角（其他蔬菜也可，如红萝卜、荷兰豆） 耗油 小黄瓜（不要也罢） 地瓜粉 蒜*4瓣 小米辣*2个 步骤👩‍🍳 腌肉\n洗肉片，加一点盐、生抽2勺、耗油1勺、蒜4瓣切片拌匀；加一点地瓜粉拌匀；加一/两勺油拌匀\n蔬菜处理\n豆角洗，切段，焯水煮熟；快煮熟时，加入切好的小黄瓜断生即刻\n炒牛肉\n放油，炒小米辣，放牛肉炒【牛肉切薄片后熟很快，炒变色差不多就可】，先盛出\n炒蔬菜\n放油，炒豆角和小黄瓜（加点盐），放牛肉继续炒，放一点生抽炒，出锅\nPLUS😋 最好用不粘锅炒牛肉，不然容易淀粉都黏在锅上 炒牛肉时油多一点，特别不是用不粘锅炒时 牛肉腌制时间充裕的话，放冰箱冷藏腌制几小时更好；没时间就不用腌制很久 最后一步放牛肉后，炒一会儿就出锅，防止炒老 很下饭 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E8%B1%86%E8%A7%92%E7%82%92%E7%89%9B%E8%82%89/","title":"豆角炒牛肉"},{"content":"参考教程：https://www.xiachufang.com/recipe/104010704/#/\n好吃指数：⭐⭐⭐⭐\n难易指数：💦💦\n准备 食材 调料 韭黄 生抽 鸡蛋*2 盐 香菇*2 糖 木耳*1片 味精 姜*1片 步骤👩‍🍳 处理食材\n鸡蛋打散，加一点水和盐 韭黄切段，香菇和木耳切丝 炒\n第一锅：油放多点，炒鸡蛋（打不打散无所谓） 第二锅：放油，姜片，炒香菇和木耳，加点水焖熟 第三锅：放油，同一个姜片，炒一会儿韭黄，放少量盐和糖；加入前两锅的食材加生抽一起炒，加味精，出锅 PLUS😋 放香菇和木耳只要是为了清理冰箱，如果没有，可以不放（或放其他食材）。但放香菇会使整道菜更香。 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E9%9F%AD%E9%BB%84%E7%82%92%E8%9B%8B/","title":"韭黄炒蛋"},{"content":"参考教程：https://www.xiachufang.com/recipe/102116058/#/\n好吃指数：⭐⭐⭐\n难易指数：💦\n准备 食材 调料 肉（前腿肉或里脊肉） 生抽 青菜 大蒜 洋葱x 0.3 盐 地瓜粉 鸡精 步骤👩‍🍳 腌肉片\n肉切薄片，洗干净，加适量盐、鸡精、生抽腌制一段时间\n处理食材（利用肉腌制的时间）\n洗（青菜和洋葱）+切（青菜，洋葱【丝】，大蒜【丁】）\n炒\n雪平锅炒大蒜+洋葱，然后放水（冷热皆可）\n煮\n【煮之前】分次在肉里加生粉，每次放后搅拌均匀，确保每片肉裹上生粉\n【煮】将肉片挨个放入锅内，再加青菜+盐，大概五分钟出锅\nPLUS😋 食材准备的少，只买了1块钱的青菜+4块钱的前腿肉，加上家里已有的洋葱和大蒜。比起原教程，少了很多味道，下次有机会做个完整版的~~ 【直接粘贴教程里的小贴士】裹地瓜粉是关键，一定要一勺一勺往里加，这样才能均匀地粘上，最好用猪的前腿肉，毕竟这个部位的肉都比较好吃，肥瘦均匀 虽然调料简单，汤的味道还是不错的；肉有点🐖腥味，不过对我来说可以接受。 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E9%A3%9F%E6%9D%90%E7%AE%80%E9%99%8B%E7%89%88%E7%82%9D%E8%82%89%E6%B1%A4/","title":"食材简陋版炝肉汤"},{"content":"参考教程：https://www.xiachufang.com/recipe/104416251\n好吃指数：⭐⭐\n难易指数：💦\n准备 食材 调料 挂面一人份 黄豆酱*1勺 鸡蛋*1 番茄酱*0.7勺 白胡椒粉 玉米淀粉 清水半碗 步骤👩‍🍳 调酱汁\n所有调料按顺序加在一起，搅拌均匀\n煎鸡蛋\n油放多点，煎鸡蛋打大块散；酱汁煮沸，和鸡蛋一起煮一会儿，放一旁备用\n煮面\n面煮熟捞出，加上鸡蛋酱拌匀即可\nPLUS😋 酱汁味道有点奇怪，鸡蛋也有点咸。所以下次黄豆酱一勺，番茄酱不要太多 适合快手早餐 ","date":"2022-03-26T22:51:46+08:00","permalink":"https://huangxindi.com/p/%E9%B8%A1%E8%9B%8B%E9%85%B1%E6%8B%8C%E9%9D%A2/","title":"鸡蛋酱拌面"},{"content":"难得 真难得 这周末，不加班的我\n中午cook 下午sport 晚上computer\n时刻谨记 只有生活是自己的 工作为了养活生活 生活供给我 我把握生活 我和生活同生\n谢谢你 不加班侠\n","date":"2022-03-18T00:00:00Z","permalink":"https://huangxindi.com/p/%E4%B8%8D%E5%8A%A0%E7%8F%AD%E7%9A%84%E5%BF%AB%E4%B9%90/","title":"不加班的快乐"},{"content":"迫切的需要 对自我知识库 贫乏、无聊、杂乱 整理\n网易博客 抱歉 我几乎把你忘掉 抱歉 六七年前的自己 我快把你的 脆弱、敏感、有趣 忘掉\n我看到了诗 其实称不上诗 长短句 称得上吧 当时的我 把这些句子取名叫 湿 听起来就很色情\n时代的眼泪 就像是 现在的我 再也写不出 当年的湿\n","date":"2022-02-02T00:00:00Z","permalink":"https://huangxindi.com/p/%E6%97%B6%E4%BB%A3%E7%9A%84%E7%9C%BC%E6%B3%AA/","title":"时代的眼泪"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"1、(1,null,2) 唯一索引也不算重复的问题 2、值的大小写敏感\noracle的all_tables,user_tab_comments,user_tab_columns,user_col_comments这几张表，对应mysql分别是什么表\n这几个 Oracle 数据库中的表在 MySQL 中对应的表如下：\nall_tables - 没有直接对应的表，可能需要查询多个 MySQL 系统表来获取相应信息，例如 information_schema.TABLES、information_schema.COLUMNS 和 mysql.TABLES_priv 等。 user_tab_comments - INFORMATION_SCHEMA.TABLES 系统表中的 TABLE_COMMENT 字段。 user_tab_columns - INFORMATION_SCHEMA.COLUMNS 系统表。 user_col_comments - INFORMATION_SCHEMA.COLUMNS 系统表中的 COLUMN_COMMENT 字段。 oralce中，all_tab_comments和user_tab_comments表的区别是什么\n在 Oracle 数据库中，ALL_TAB_COMMENTS 和 USER_TAB_COMMENTS 都是用来存储表的注释信息的表，它们之间的区别在于：\n所有者：USER_TAB_COMMENTS 只包含当前用户拥有的表的注释信息，而 ALL_TAB_COMMENTS 则包含了所有可见的表的注释信息，包括系统表、其他用户的表以及当前用户的表。\n权限：查询 USER_TAB_COMMENTS 不需要特殊权限，而查询 ALL_TAB_COMMENTS 则需要 SELECT_CATALOG_ROLE 角色或 SELECT ANY DICTIONARY 权限。\n因此，如果只需要获取当前用户拥有的表的注释信息，那么应该使用 USER_TAB_COMMENTS 表；如果需要获取所有可见表的注释信息，则可以使用 ALL_TAB_COMMENTS 表。\noralce的user_constraints和user_cons_columns分别对应mysql的哪个表\n在 MySQL 中，user_constraints 和 user_cons_columns 这两张表没有直接的对应物，因为 MySQL 和 Oracle 在数据库架构设计上存在一些差异。以下是一些相关的 MySQL 表及其作用：\ninformation_schema.TABLE_CONSTRAINTS：包含所有表约束的信息，包括主键、外键、唯一性约束、检查约束等。 information_schema.KEY_COLUMN_USAGE：包含表中所有索引列和外键列的信息，包括列名、列位置、索引名称、外键名称等。 information_schema.COLUMNS：包含所有列的信息，包括列名、数据类型、字符集、是否为 NULL 等。 3.获取所有select字段 SELECT GROUP_CONCAT(COLUMN_NAME ORDER BY ORDINAL_POSITION SEPARATOR \u0026lsquo;, \u0026lsquo;) AS field_names FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = \u0026lsquo;your_table\u0026rsquo;;\nORDER BY ORDINAL_POSITION 按照表定义本来的字段顺序获取\n在 MySQL 中，当你创建一个包含 VARCHAR 类型的列时，MySQL 会为这个列分配固定的存储空间，这个存储空间的大小取决于你在 VARCHAR 类型中指定的最大长度。如果你指定的最大长度超过了 MySQL 可以使用的存储引擎的最大限制，那么 MySQL 将会自动将该列的数据类型从 VARCHAR 变为 TEXT 类型。\n在 MySQL 5.6.4 及更高版本中，使用 VARCHAR 类型的列的最大长度为 65535 字节，或者在某些情况下为 16777215 字节。在早期版本的 MySQL 中，VARCHAR 类型的最大长度为 255 字节。\n如果你在创建一个 VARCHAR(600) 类型的列时，MySQL 自动将该列的数据类型更改为 TEXT(4096) 类型，那么可能是因为你正在使用的存储引擎不支持超过 4096 字节的 VARCHAR 类型。\n如果你需要使用更大的 VARCHAR 类型，请检查你正在使用的存储引擎的最大限制，并相应地更改列的定义。如果你需要更大的存储空间，可以考虑使用 MEDIUMTEXT 或 LONGTEXT 类型的列。这些数据类型支持更大的存储空间，并且可以存储更长的字符串。\n","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"软考-中级软件设计师视频笔记 by huangxd, 2022\n总目录 [TOC]\n开始 视频教程： https://www.bilibili.com/video/BV1yU4y1371J?spm_id_from=333.337.search-card.all.click#/\n00 无分类 海明码（Hamming code） https://www.bilibili.com/video/BV1SJ41157pR?spm_id_from=333.337.search-card.all.click#/\nhttps://www.cnblogs.com/godoforange/p/12003676.html#/\n遇到这种题，做题练一下\nCRC校验法（循环冗余校验 Cyclic Redundancy Check） https://seedeer.github.io/2022/03/20/crc/#/\nhttps://www.bilibili.com/video/BV1rJ411V7L5?spm_id_from=333.337.search-card.all.click#/\n01 计算机组成与体系结构 数据的表示 进制转换 R进制-\u0026gt;十进制：底数，指数\n十进制-\u0026gt;R进制：短除法\n二进制-\u0026gt;八进制，十六进制\n编码 原码：正常转为二进制，位数不足前面补0。最高位为符号位（0正1负） 反码：正数=原码；负数：符号位不动，其他位原码取反 补码：正数=原码；负数：反码+1 移码：一般用来做浮点运算的阶码；符号位为补码的反，其他位一样。这样在数轴上，正数在负数的右边，看起来正常些 ps. 原码：1-1为-2，是不正常的，因此计算机里不能用原版来做加减\n移码 https://blog.csdn.net/Desire_Dir_W/article/details/114399797#/\n表示范围 为何补码比原/反码多一个数：原/反码有正负0，补码只有一种0的表示\n浮点数运算 M*R^e\nM：尾数；R：基数：e：指数\n对阶（小向大的指数对） - 尾数计算 - 结果格式化（尾数小数点左边是1）\n计算机结构 主机=CPU（运算器+控制器）+主存储器\nFlynn分类法 单I/多M+指令I/数据D\nSISD 现在的机器几乎没有，可能在单片机用到\nSIMD 阵列处理机：适合处理数组运算\nMISD 只在理论中\nMIMD 全面并行\nCISC和RICS CISC 比较早期，通常是定制。指令数量多；可变长格式\nRICS 复杂操作由简单操作组成即可；定长格式；操作寄存器；硬布线（速度快）\n流水线 主要考察计算\n周期 概念：执行时间最长的一个步骤时间\nn条指令全部执行时间：\n理论公式：1条指令执行时间+（指令条数-1）*流水线周期 实践公式：（k+n-1）*周期；k为子指令个数 考试时优先用理论公式算，没有这个选项，再用实践公式\n吞吐率 概念：单位时间内处理指令条数\n公式：TP=指令条数/流水线时间\n最大吞吐率：\n理解：极限情况下（不考虑流水线建立的时间等），1条指令配合上一个流水线周期\n加速比 概念及公式：同一个任务不使用流水线时间/使用流水线时间\n效率 概念：流水线的设备利用率。时空图中，设备占用时空区占总时空区之比。\n公式：\n每个子任务时间一样 -\u0026gt; 效率最高\n存储 层次化存储结构 cache 特点：\nCPU和内存之间 为何能改善系统性能：局部性原理 平均周期公式\n局部性原理\n时间/空间局部性\n工作集理论：工作集是进程运行时被频繁访问的页面集合；把工作集打包到cache，短时间内不被替换，可提高效率\n主存 随机存取存储器 RAM 只读存储器 ROM 编址 8*4位的存储器：8个地址空间，每个地址空间含4位\n两种组合方法：\n（1）=C7FFFH-AC000H+1=C7FFFH+1-AC000H=112\n（2）112k x 16 = 28 x 16k x 未知数 结果为4\n磁盘 主要掌握：读取一次数据过程中1、哪些动作；2、多少时间\n存取时间=存道时间+等待时间（平均定位时间+旋转延迟时间）\n存道时间：磁头移动到磁道 等待时间：等待扇区转到磁头 总线 分类\n内部总线 系统总线 数据总线（传输数据，字长与数据总线宽度有关） 地址总线（宽度与内存大小有关，如32位操作系统内存最多2^32=4G） 控制总线 外部总线 系统可靠性分析与设计 串联系统与并联系统 可靠度：\n串联：可靠性为各节点可靠性相乘 并联：R=1-(1-R1)x(1-R2)x\u0026hellip;x(1-Rn) 失效率=1-可靠度\n模冗余系统与混合系统 校验码 码距 概念：编码系统中任意（所有）两个码字的最小距离，即A-\u0026gt;B需要改变最少几位；如采用3位长度作为二进制编码，可选用111和000作为合法编码，这时码距就是3（000需要改变3位才变为111）\n循环校验码CRC（检错不纠错） 采用模2除法，接收到除多项式若余数为0，则表明传输正确\nCRC编码：\n编码后：原报文+余数吗，作为最终报文传输\n接收端接收到报文后，将报文同样除以二项式，若余数为0，则表示传输正确\n海明码（检错加纠错） 校验位：\n位置：2^n 如一个信息位，最终有3位（因为0和1位需要填校验码） 需要校验位数r：2^r-1\u0026gt;=x+r 02 操作系统 概述 操作系统的角色：\n管理系统的硬件、软件、数据资源 控制程序运行 人机之间的接口 应用软件与硬件之间的接口 管理分类：\n进程管理 存储管理 文件管理 作业管理 设备管理 进程状态 三态模型\n运行：万事具备 就绪：只等CPU资源 等待：除了CPU资源，还在等其他资源 五态模型\n运行 静止就绪（运行过程中主动挂起） 活跃就绪 静止阻塞 活跃阻塞=等待 前趋图 同步与互斥 互斥：一个资源同时只能被一个进程所用 同步：速度有差异，一定情况下要等待 【注意】：两者不为相反的概念，互斥\u0026lt;-\u0026gt;共享，同步\u0026lt;-\u0026gt;异步\n在生产者消费者问题，理解互斥和同步：如一个商场只能存放一件物品，若目前已有一件时，生产者无法将新的一件放入（互斥）；生产者是否可以放入也取决于消费者是否消费了这个物品，只有等消费者消费了，生产者才能新生产（同步）\nPV操作 概念 临界资源：进程间需要互斥访问的资源（如打印机，磁带机）\n临界区：每个进程中访问临界资源的那段代码\n信号量：一种特殊的变量，如P(s)中的s\nP分配（减），V释放（加）\n例子（单缓冲区）：\n习题：\n答案：A和C\nPV操作和前趋图 【重要！经常考！】\n例题（答案：CAA）：\n解题思路：信号量的赋值可根据从上到下、从左到右的原则赋值，出箭头设为V(s)，入箭头设为P(s)。如P1出箭头那里是V(S1)，P2出箭头那里是V(S2)，P3入箭头那里是P(S1)和P(S2)。\n死锁 最小需要多少个资源不发生死锁 公式：k*(n-1)+1；k：进程数，n，每个进程需要的资源数\n死锁四大条件 互斥 保持和等待 不剥夺 环路等待 解决死锁 预防：打破四大条件 避免：有序资源分配法，银行家算法 银行家算法 例题：\n存储管理 分区存储 首次适应法 最佳适应法（空闲区块按大小顺序链式排列，找最小能满足分配空间的内存块） 内存碎片多 最差适应法（类似最佳，找最大能满足的内存块） 循环首次适应法（把可分配区块循环链接起来，下次就先看下一块能否分配，而不是从头开始匹配） 分配均匀些 页式存储 把用户程序等分为固定大小的页，这样不需要一次性将全部程序导入内存才能运行\n优点：利用率高，碎片小，分配及管理简单 缺点：增加系统开销；可能产生抖动现象 常考：逻辑和物理地址的转换\n页表中记录了【页号】和对应的【块号】\n【可参考上面的例题】逻辑转为物理地址的思路：逻辑地址由页号和块内地址组成：\n1、找到页号和块内地址分别是几位表示：根据页面大小为4K，说明块内地址是用12位表示，也就是A29H，那么页号就是5；\n2、根据页号5，找到对应的页帧号（也就是块号）为6，所以选D\n找到淘汰页号的思路：\n1、从状态位为1的（在内存中）中找\n2、从访问位为0的（最近没访问）中找\n所以选页号为1的页面\n段式存储 组成：段号+段内地址\n段的长度也不同，依据代码结构\n优点：多道程序共享内存，各段程序修改互不影响\n缺点：内存利用率低，内存碎片浪费大\n段页式存储 结合段式和页式，先分段再分页\n快表 小容量的相联存储器，放在cache，速度快。从硬件保证按内存并行查找。\n页面置换算法 页面淘汰算法分类 最优 OPT(optimal)：只存在理论上的，从整体序列来分析 随机算法 先进先出FIFO：有可能产生抖动 最近最少使用LRU：不会抖动 例题:\n答案：B和C\n没有使用快表：意味着访问一页，需要访问两次内存（第一次为查询页表）\n考试有个潜在规则：读取指令时是算作一次，也就是说虽然横跨0和1页，但是缺页中断次数为1；但是读取操作数时，比如读取A，横跨2和3页，所以缺页中断次数为2\n文件管理 索引文件结构 目的：扩充容量\n例题：\n答案：C和D\n文件和树型目录结构 绝对路径/相对路径\n空闲存储空间管理 方法分类 空闲区表法（空闲文件目录） 空闲链表法 位示图法（0，1分别代表空闲和占用） 成组链接法 位示图法 例题：\n(4195+1)/32=131.125\n注意：位置是从0开始算\n答案：D和B\n数据传输控制方式 方式 程序控制方式（需要很多CPU参数，CPU持续发出查询指令）\n程序中断方式（主动发中断）\nDMA方式（直接存取控制方式，专门的DMA控制器，CPU只要在开头介入即可）\n通道\n输入输出机\n虚设备与SPOOLING技术 微内核操作系统 03 数据库系统 三级模式-两级映射 内模式（物理级数据库）：如何存储数据（格式等） 概念模式（概念级数据库）：表级别（关注【概念模式-内模式映射】） 外模式（用户级数据库）：视图（隔绝概念模式的修改【外模式-概念模式映射】，灵活性） 数据库设计过程 ER模型：与物理数据库无关\n关系模式：表形式，规范化理论\nE-R模型 矩形：实体；椭圆：属性；菱形：关系\n子模型集成\n逐步集成 一次集成 集成产生的冲突\n属性冲突（属性域或取值冲突） 命名冲突（同名异义，异名同义） 结构冲突（可能一个作为表，一个作为列） 实体型转换为关系模式\n1：1 - 转成两张表，菱形联系可跟任意一个 1：n - 转成两张表，菱形联系跟N m：n - 转成三章表，菱形联系单独一张表 ps.即使是多对多对多的，也只需一个关系来表示菱形\n关系代数 并：注意：相同行只显示一次\n交\n差\n笛卡尔积（✖）：完全组合；属性数为两关系相加；行数为两关系行数相乘\n投影\n选择\n连接：都有的属性只保留一个**（这点和笛卡尔积不同）**；等值连接、自然连接 规范化理论 函数依赖 部分函数依赖：其中的某一个属性，可以形成函数依赖\n价值与作用 非规范化可能存在的问题：数据冗余，更新/插入/删除异常\n键 超键（可能存在冗余属性）：唯一标识元组 候选键（超键消除多余属性-\u0026gt;候选键，可以有多个） 主键（候选键任选一个） 外键：其他关系的主键，对表做关联的时候可用 求候选键：图示法\n根据依赖关系画依赖图，找到所有入度为0的节点，尝试遍历所有节点，成立则为候选键。注意有可能是多个节点组合成候选键。若没有入度为0的节点，则找既有入度也有出度的节点，同样进行遍历分析。\n范式 级别越高，规范程度越高\n主属性：属于候选键的一部分\n第一范式：当且仅当所有域只包含原子值，即不可再分\n第二范式：第一范式的基础上，不存在部分依赖\n第三范式：第一范式的基础上，没有非主属性传递依赖于码时\nBC范式：所有函数依赖的左边部分必须包含候选键\n例题：\n答案：C D A\n模式分解 保持函数依赖分解：函数依赖关系不变（冗余的函数依赖不需要保持） 无损分解：可以还原，可通过联结还原成原始的关系模式 或者：表格法\n假设有一行全部是a，则说明还原好了，也就是无损分解。\n或者：代数运算法（仅限于分解为两个的情况）\n并发控制 事务 原子性（全做or全不做） 一致性（转账前后加起来钱都一样） 隔离性 持续性 并发存在的问题 丢失更新 不可重复读 读脏数据 封锁协议 死锁 预防 解除 数据库完整性约束 分类 实体完整性约束：如主键不能为空 参照完整性约束：外键约束 用户自定义完整性约束 触发器：更加复杂的用脚本写的约束 数据库安全 数据备份 冷备份（静态备份）：数据库关闭情况下的备份 热备份（动态备份）：正常运行时的备份 根据备份量区别：\n完全备份 差量备份（备份上一次完全备份之后变化的数据），更有利于备份恢复 增量备份 数据库故障与恢复 数据仓库与数据挖掘 数据仓库\n面向主题 集成的 相对稳定的（非易失的） 反应历史变化（随着时间变化） 反规范化（逆规范化） 牺牲一些空间和规范，提高查询效率\n大数据 4V\nvolume 数据量 velocity 速度 variety 多样性 value 值 04 计算机网络 OSI/RM七层模型 中继器/集线器：延长传输距离（类似烽火台）\n例题：\n分析：考察局域网的通信范围，局域网是下面两层（物理层和数据链路层连接的），所以P和S之间经过路由器（网络层）的话，就不能通信。\n网络技术标准和协议 TCP：三次握手，可靠传输\nUDP：没有反馈过程\nDHCP：IP地址动态分配\nDNS：域名映射到IP地址\n递归查询：亲自深挖，不断根据线索问其他服务器，最终把正确的IP反馈给客户（如本地域名服务器，因为其压力不大）\n迭代查询：只提供线索，没有刨根究底（如根域名服务器）\n计算机网络分类 拓扑结构 单点故障：环形比星型稳定，因为一个点故障可以从另一头走\n网络规划与设计 逻辑网格设计 物理网络设计 分层设计（考比较多） IP地址与子网划分 全0：网络地址；全1：广播地址\nA类：前8位网络号，后24位为主机号，可包含2^24-2主机\nB类：前16位网络号，后16位为主机号，可包含2^16-2主机\nC类：前24位网络号，后8位为主机号，可包含2^8-2主机\n例题：\n或者问是否在同一个子网内，怎么看：把ip化为2进制，根据网络号有多少位，看最终的网络号是否相同\n无分类编制 例题：\n分析：已知C类子网有24位的网络号，现在是20位，也就是还有4位可以拿来作子网号，2^4=16\n特殊含义的IP地址 HTML（考的少） 无线网 网络接入技术 IPv6 IPv4：32位地址，地址不够用\nIPv4：128位地址\n05 计算机安全 信息系统安全属性 完整性：保证A到B的消息没被篡改\n加密技术 对称加密 非对称加密 信息摘要 特性：单向\n用于验证数据完整性\n数字签名 特性：防抵赖\n加密（即数字签名）：私钥；解密（即数字签名的验证过程）：公钥；不是真正的加密和解密\n与信息摘要技术结合：对信息摘要进行数字签名（而不是对原消息进行数字签名）\n数字信封与PGP 综合例题 例题：设计邮件加密系统\n网络安全 网络层级的安全保障 网络威胁与攻击 要会区分窃听和业务流分析\n防火墙技术 应用级：把内容拆出来分析看有无问题\n网络级：比如看源和目的ip\n屏蔽子网：内部网和外部网之间额外的一个防护\n06 数据结构与算法基础 数组 考点：存储地址计算\n稀疏矩阵 矩阵坐标转换到数组坐标的解题技巧：带入特殊值\n数据结构的定义 概念：计算机存储和组织数据的方式\n逻辑结构划分\n线性结构 非线性结构 树 图 线性表 分类\n顺序表（一维数组形式）\n链表（节点包含数据与指针）\n单链表 循环链表 双向链表 队列（先进先出）\n循环队列\n栈（先进后出）\n链表的基本操作（删除和插入节点）\n顺序存储和链式存储对比：\n广义表 概念：线性表的推广，以递归的方式进行定义\n广度（最外层括号包含的元素个数）、深度（包含括号的重数）\n表头head（最外括号的第一个元素）、表尾tail（除去表头的其他所有部分）\n树与二叉树 结点的度：孩子数\n数的度：所有结点度数最高的度\n内部节点：非头节点和叶子节点\n深度：最大的层数\n特殊二叉树 满二叉树 完全二叉树（除最后一层，上面层都满；且最后一层从左到右没有中间缺失的情况） 二叉树遍历 前、中、后序遍历：差别在根节点前、中、后时候被访问\n层次遍历\n反向构造二叉树 例题：\n树转二叉树 原则：\n孩子结点 -\u0026gt; 左子树结点 兄弟结点 -\u0026gt; 右孩子结点 除了挨个用【原则】分析，还可以用连线法：如上图的虚线图所示。将兄弟结点连起来，并将第一个孩子以外的孩子结点的连线去掉，然后旋转，得到最终的二叉树\n查找二叉树（二叉排序树） 特点：\n左孩子小于根 右孩子大于根 极大提高查找速度 操作：插入和删除结点\n最优二叉树（哈夫曼树） 哈夫曼树：用于无损压缩\n基本概念：\n树的路径长度 权（每个结点的数值，一般表示出现的频度） 带权路径长度 树的带权路径长度（树的代价） 构造哈夫曼树：即构造带权路径长度最小的树\n例题：\n求解树的带权路径长度：将所有叶子结点的带权路径长度相加\n线索二叉树 why：很多结点的左右指针是空的，可以利用这些空闲指针，来方便遍历\n前序线索二叉树 中序线索二叉树 后序线索二叉树 构造线索二叉树：左右线索指针指向的是x序排列的前/后面的结点\n平衡二叉树 定义：\n左右子树深度相差不超过1 每个结点的平衡度（左子树深度-右子树深度）只能为-1，0，1 非平衡二叉树 -\u0026gt; 平衡二叉树\n图 图与树最大的区别：树没有环路\n分类：\n有向图 无向图 完全图（可连的边都连了） 存储 邻接矩阵 邻接表 图的遍历 深度遍历 广度遍历 根据邻接表进行遍历：广度是一个结点所连的线走到底，深度是连续试探第一个\n拓扑排序 表示活动之间开始的先后关系\n执行完把连线去掉，继续分析\n图的最小生成树 使得留下来的边（n-1条，n为节点数）构成树（注意不能有环），权值总和最小\n普利姆算法 分析：画图时实时将结点分成两个阵营，寻找到另一个阵营的最短边\n克鲁斯卡尔算法 依次选择权最小的边，注意不要构成环。连接所有结点后，即生成结束\n算法基础 算法的特性 算法的复杂度 顺序查找和二分查找 顺序查找 二分查找 前提：查找内容本身是有序排序的\n散列表 冲突解决：\n线性探测法（往后顺序查找第一个空的） 伪随机数法 再散列法 排序（重要） 稳定性：值相同的数，排序后，顺序是否不变\n内/外排序：前者只在内存中，后者用到外存\n直接插入排序 希尔排序 是直接插入排序的一种，但更复杂。\n好处是：经过前几轮的组内直接插入排序，序列已基本有序。到最后一轮的全组直接插入排序时，调整顺序的次数会更少。\n直接选择排序 堆排序 堆的概念\n堆排列概念和步骤：\n初建堆过程：\n顺次将结点数组构成完全二叉树 调整为堆（从最后一个非叶子结点开始，而后分析最后第二个） 注意，有的结点调整需要向下继续调整 重新建堆过程：\n把根结点取走 把堆的最后一个结点放到根结点 从根节点开始与子节点对比，一直往下 所以，诸如从大量数据中求前10小的元素，比较有优势\n冒泡排序 快速排序 分析：\n分治法 与基准比较 归并排序 一般是两两合并\n基数排序 基数和关键字的分解有关\n排序算法分析（常考） 07 程序设计语言与语言处理程序基础 编译过程 文法定义 有限自动机 例题（常考）：\n答案：C\n正规式 例题：\n答案：D C\n表达式 答案：D\n函数调用 - 传值和传址 传值：不真正改变实参 传址：真正改变实参 各种程序语言特点 08 法律法规 保护期限 知识产权人确定 侵权判定 标准化基础知识 标准的分类 标准的编号 09 多媒体基础 基本概念 音频概念 次声波：\u0026lt;20Hz；超声波：\u0026gt;20kHz\n图像概念 亮度 色调（如红，绿） 饱和度：色彩艳丽程度 彩色空间：\nCMY：印刷领域；CMYK（K：黑色）\nHSV(HSB)：艺术家空间，从艺术欣赏的角度\n媒体的种类 易考：输入设备也包含在显示（表现媒体）媒体中\n多媒体相关计算 例题：\n注意单位和(k和K：k为1000，存储的K为1024)\n常见多媒体标准 数据压缩 压损的前提：有冗余\n有损压缩与无损压缩 10 软件工程 软件开发模型 瀑布模型（SDLC） 缺陷：需求难以在项目初期明确确定\n适用于：\n需求明确 二次开发 结构化开发 其他经典模型 原型（针对需求不明确的情况）：在初期先构造一个简易的系统，给用户做演示，记录用户发现的问题，再做调整。往往只用于需求分析阶段。最终变为演化模型。\n增量模型：先做核心部分，给用户用；发现问题，逐步修改和继续开发剩下内容。\n螺旋模型 特征：\n多个模型组成 引入了风险分析 V模型 特点：\n强调测试 在前半部分的过程，同时也做后半部分的测试准备 喷泉模型 特点：\n面向对象模型 迭代 无间隙 RAD 特点：\n快速构建应用系统 构件组装模型(CBSD) 特点：\n提高复用性，缩短时间，减少成本，提高可靠性 统一过程（UP/RUP） 特点：\n用例驱动 以架构为中心 多轮迭代和增量 敏捷开发方法 特点：\n一组模型 比较适合(中)小型项目 信息系统开发方法 结构化方法缺点：一旦开发完，整个流程不容易改变\n需求开发 需求分类与获取 结构化设计 多扇入：复用性高；少扇出：一个函数包括的职能较少\n内聚与耦合 软件测试（常考） 回归测试：将之前的测试案例再测下，看会不会发现新的问题\n测试用例设计 等价类划分：选出各种类的代表性数据来测\n错误推测：根据经验，推测哪些容易产生问题\n测试阶段 单元测试：模块级/函数级\n集成测试：模块之间的衔接\n确认测试：确认需求实现\nMcCabe复杂度（常考） 注意：分叉点是否要转为结点，复杂度公式的结果都一样。如右边结点的5和6，如果不转换，则2、3、4都指向7，计算结果一致\n系统运行与维护（常考） 适应性维护：适应系统、数据环境\n完善性维护：扩充功能、改善功能\n软件过程改进 CMMI 阶段式：\n已管理级：项目级 已定义级：文档标准化 定量管理级：量化管理 优化级：持续优化 连续式：\n过程管理 项目管理 工程 支持 项目管理 甘特图：关键路径的计算\n例题：\n风险管理 11 面向对象设计 边界类：与外界系统交互\n控制类：类之间的衔接类\n封装：提供给外部接口，外界用接口调用\n设计原则 UML 设计模式 架构和设计模式区别：全局or局部\n设计和惯用法区别：是否与实现语言相关\n设计模式的分类 创建型模式 抽象工厂：只需指定生产的系列名，而不是类\n构建器：部件构建组合\n原型（克隆原型）：拷贝现有对象来生成新的对象\n单例：保证一个类只有一个实例\n结构型模式 行为型模式 12 数据流图（DFD） 数据流图基本概念 自上往下细分\n数据字典 数据流图的平衡原则 父图与子图之间的平衡（如顶层-\u0026gt;0层）：外部实体到系统的连线数据流内容和方向应该是不变的\n子图内平衡：有输入没输出/有输出没输入，是不正常的\n答题技巧 例题1 例题2：\n13 数据库设计 数据库设计过程 ER模型 实体间联系类型 1:1 1:n m:n E-R图向关系模型的转换 实体和联系分别转换为关系，属性转换为关系的属性\n数据库设计答题技巧 例题1：\n【问题4】\n优点：查询操作权限属性时，会减少一次连接操作\n缺点：数据冗余\n例题2：\n答案：\n14 UML建模 重点：用例图、类图\n用例图 包含关系 include\n如每次登记外接信息都要【用户登录】，故是包含关系\n扩展关系 extend\n如每次查询书籍信息不是都要【修改书籍信息】，故是扩展关系\n泛化关系\n类图与对象图 多重度：\n关系：\n顺序图 主要考察：\n消息：箭头来传递 对象名 活动图 粗横线：产生分支，即并行的线程\n还有带泳道的活动图（划分对应的主体）：\n状态图 以状态为结点，箭头为触发事件\n考点：\n填充状态 填充触发事件 通信图 对象：结点；消息：箭头\n与顺序图类似，但时间顺序先后不明晰。与顺序图统称为交互图。\n例题 例题1 答案：\n问题3：类都是音轨，多重度0..1\n问题4：\n例题2 【问题3】：状态图；属性：clevel；功能：计算里程数\n15 数据结构及算法应用 数据结构基础那章是上午题，此章为下午题\n不容易拿高分，但要把容易的都填出来\n分治法 递归 概念：运行的过程中调用自己\n二分查找 回溯法 贪心法 性价比方法：耗费时间少，找到【可以】的解\n图示背包问题贪心法（图b左边）：优先考虑单位价值最多的物品\n动态规划法 拆分为子问题，但是子问题一般有关联，所以需要一个表来协助\n例题 例题1 答案：\n【问题2】：贪心法；贪心法；时间复杂度分析具体代码（O(N^2),O(N^2)）\n【问题1】：\n例题2 题目略\n16 面向对象程序设计 类和派生类的定义 构造函数和析构函数 对象指针与对象引用\n虚函数\n类的定义 关键字：extends对方就是类而不是接口\n接口的定义 关键字：implements 对方就是接口而不是类\n例题 例题1 此类定义的填空很好拿分\n例题2 ","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"\u0026amp; Metadata Author: [[丹尼尔·利伯曼;迈克尔·E·朗]] Highlights 但当你把注意力转到“向上”的世界时，你的大脑则依赖另一种化学物质——一个单一的分子，它不仅让你突破指尖所指的领域，而且激励你去追求、控制、拥有你无法即刻抓取的世界。它驱使你去寻找遥远的东西，不仅包括物质的东西，也包括看不见的东西，比如知识、爱和影响力。无论是去拿桌子对面的盐瓶，坐宇宙飞船飞向月球，还是敬拜超越时空的神，这种化学物质都能跨越地理上或想象中的距离，给我们下达指令。 — location: 32 ^ref-37747\n你服从它，它就会奖励你；你不服从它，它就会让你痛苦。它是创造力的源泉，甚至是疯狂的源泉；它是上瘾的关键因素，也是康复的途径；它让雄心勃勃的管理者不惜一切代价去追求成功，让成功的演员、企业家和艺术家在拥有了梦想中的金钱和名望之后，还会继续工作很长一段时间；它使得生活美满的丈夫或妻子不顾一切地寻找婚外的刺激。它是一种无可否认的欲望的源泉，这种欲望驱使科学家去寻找解释，驱使哲学家去寻找秩序、理由和意义。 — location: 38 ^ref-3623\n哺乳动物、爬行动物、鸟类和鱼类的大脑中都含有这种化学物质，但没有一种生物拥有的数量有人类这么多。这既是一种福报，也是一种诅咒；既是一种动力，也是一种奖励。它形式简单，包含碳、氢、氧三种元素，再加上一个氮原子，但产生的结果极为复杂。它就是多巴胺，一种讲述着整个人类行为的故事的分子。 — location: 47 ^ref-36045\n我们人类的多巴胺冲动也来自类似的让人期待的惊喜：收到恋人的甜蜜留言（上面会说什么？），或是一封来自多年未见的老友的电子邮件（会有什么新鲜事？），或是在老酒吧的破旧桌子边遇见迷人的新伴侣（会有怎样的浪漫？）。但当这些事情都习以为常时，新奇感就消逝了，多巴胺冲动也随之消退——更甜蜜的留言、更长的邮件或是更好的桌子也挽救不回来。 — location: 139 ^ref-31238\n为了享受我们拥有的东西，而不是仅仅可能得到的东西，我们的大脑必须从面向未来的多巴胺过渡到面向现在的某种化学物质，这是一系列神经递质，我们称之为“当下分子”。大多数人都对它们的名字略有耳闻，包括血清素、催产素、内啡肽（相当于大脑自产的吗啡）和内源性大麻素（相当于大脑自产的大麻）。与通过多巴胺得到的来自预期的愉悦相反，这些化学物质会给我们带来由感觉和情感引发的愉悦。花生四烯酸乙醇胺是内源性大麻素的一种，它的英文名称anandamide就源于表示欢乐、狂喜和高兴的梵语单词 — location: 294 ^ref-15298\n实验室的测试证明了这个结论。科学家们观察了从处于热恋中的人身上提取的血细胞，发现血清素受体的水平比“健康人”要低，这表明当下分子受到了抑制。 — location: 311 ^ref-16659\n科学家们在实验室里对各种动物的神经递质进行了研究。例如，科学家将催产素注射到雌性草原田鼠的大脑中以后，它们会立刻与周围的某只雄性田鼠形成长期关系。类似地，研究人员通过基因编辑制造出了具有滥交倾向的雄性田鼠，又给它们增加了一个增强血管升压素的基因时，发现它们在有多个雌性田鼠可供交配时，也只与某一只雌性田鼠交配。血管升压素就像一种“好丈夫激素”，而多巴胺则相反。具有能产生高水平多巴胺的基因的人拥有的性伴侣数更多，首次性交年龄也更低。 — location: 321 ^ref-6719\n男性和女性的性欲都是由睾酮引起的。男性会产生大量的睾酮——它导致了男性化特征，如面部的毛发、肌肉量的增加和低沉的声音。女性在卵巢中产生较少量的睾酮。平均来说，女性在月经周期的第13天和第14天的睾酮水平最高。这时卵巢会释放出卵子，她们怀孕的可能性最高。睾酮的含量在不同天，甚至在一天之内都会随机变化。有些女性早上产生的睾酮更多，有些则在晚些时候产生。个体之间的差异非常大，有些女性天生比其他女性产生更多睾酮。睾酮甚至被当作药物使用。宝洁公司（欧仕派古龙水和帮宝适纸尿裤的制造商）的科学家在女性皮肤上使用一种含有睾酮的凝胶后，这些女性的性生活变得更频繁了。不幸的是，由于一些女性出现了面部毛发浓重、嗓音低沉和男性型秃发等变化，“女性伟哥”凝胶从未得到过美国食品药品监督管理局（FDA）的批准 — location: 336 ^ref-38215\n从热切的期待到亲密接触的快感，性爱的各阶段定义了爱情的各阶段：性就是爱情的快进。性始于欲望，是由睾酮这种激素驱动的一种多巴胺能的现象。接下来是性兴奋，这也是一种期待性的多巴胺能的体验。当身体接触开始时，大脑就将控制权转移到当下分子以便提供感官体验的愉悦，这个过程主要涉及内啡肽的释放。这一行为的顶峰，即性高潮，几乎完全是一种此时此地的体验，内啡肽和其他当下神经递质一起工作，将多巴胺彻底关闭。 — location: 352 ^ref-20083\n多巴胺的反应不是针对奖赏，而是针对奖赏预测误差，即实际奖赏减去预期奖赏。这就是热恋的状态不会持久的原因。当我们坠入爱河时，我们期待与所爱之人拥有一个完美的未来。这是一个存在于炽热的想象中的未来，而12~18个月后，当现实变得明晰时，这个想象就会支离破碎。然后会怎样？在很多情况下，一切都结束了。之后，对多巴胺能刺激的探索又重新开始了。或者，激情之爱也可能转化为更持久的东西。它可以成为陪伴之爱，这可能不会像多巴胺那样让人兴奋，但基于当下神经递质，如催产素、血管升压素和内啡肽的作用，它会为你提供长期的幸福感。 — location: 394 ^ref-14988\n而当未来变成了现在，当晚餐已经下肚，或者爱人已被你拥入怀中，会发生什么？兴奋、热情和充满精力的感觉消散了，多巴胺停止工作了。多巴胺回路不会处理现实世界中的经验，只处理想象中未来的可能性。这让很多人感到很失望。他们过于依附多巴胺能的刺激，让自己逃离了现在，躲在自己想象的舒适世界里。“明天我们做什么？”他们一边咀嚼食物一边问自己，忘记了这样一个事实——他们也曾热切期待着这顿饭，但现在却对它视而不见。满怀希望的旅途要比到达目的地更快乐，这是多巴胺爱好者的座右铭。 — location: 495 ^ref-11073\n因此，有三种方法可以用来弥补买家懊悔：其一，通过购买更多的东西来追求更高的多巴胺；其二，通过少买一些东西来预防多巴胺的剧减；其三，增强从多巴胺欲望向当下喜爱转变的能力。然而，在任何情况下，谁都不能保证我们极度渴望的东西正是我们享受的东西。想要和喜欢是由大脑中的两个不同的系统产生的，所以我们想要的东西往往是我们不喜欢的。 — location: 516 ^ref-54770\n贝里奇博士在接受《经济学人》采访时指出，多巴胺欲望系统在大脑中具有强大的影响力，而喜欢回路则又小又脆弱，很难触发。两者之间的区别在于“生活中强烈的愉悦比强烈的欲望更罕见，也更短暂”。 “喜欢”涉及的大脑回路与欲望回路不同，并使用当下化学物质来发送信息，而不是多巴胺。特别是，“喜欢”依赖的化学物质与促进陪伴式爱情的长期满足相同，它们是内啡肽和内源性大麻素。海洛因和奥施康定等阿片类药物是目前最容易上瘾的药物之一，正是因为它们同时扰乱了欲望回路和喜欢回路（多巴胺和内啡肽分别在其中起作用）。大麻也同样如此，它与两个回路相互作用，刺激多巴胺和内源性大麻素系统。这种双重效应导致了不寻常的结果。 多巴胺的增加会让人热情参与自己原本认为不重要的事务。例如，有报道称一些吸大麻的人会站在水池前，看着水龙头不断地滴水，这一平平无奇的景象让他们看得十分着迷。当吸食大麻的人迷失在自己的思想中，漫无目的地在自己创造的想象世界中遨游时，多巴胺的增强效应也就变得更明显。但在某些情况下，大麻也会抑制多巴胺，模仿当下分子的作用。这种情况下，通常与渴望和动机有关的活动，如工作、学习或洗澡，看起来就不那么重要了。 — location: 666 ^ref-58768\n帕金森病是一种多巴胺缺乏症，患有这种病的人负责控制肌肉运动的一条通路中多巴胺不足。这条通路，简单地说，就是我们将内心世界转化为行动，以及将意志施加给世界的途径。当这条通路中没有足够的多巴胺时，人就会僵硬和颤抖，并且移动缓慢。治疗方法是吃一些能促进多巴胺增长的药物 — location: 698 ^ref-1754\n经过中脑边缘回路的多巴胺会产生冲动，我们称该回路为多巴胺欲望回路。计算和规划（控制各种情况的手段）来自中脑皮层回路，我们称之为多巴胺控制回路（图3–1）。为什么称之为控制回路？因为它的目的是管理欲望多巴胺不可控的冲动，将这种原始能量引向对我们有利的终点。此外，通过使用抽象的概念和前瞻性的策略，它使我们能够控制周围的世界，并支配我们的环境[1]。 — location: 862 ^ref-13465\n可卡因和苯丙胺等药物会促进多巴胺的分泌，其结果之一是自我效能的提高，通常会达到病理水平。滥用这些药物的人可能会自信地承担很多任务，甚至超出自己的能力。重度使用者甚至可能产生浮夸的妄想。他们会坚信自己能写出世界上最杰出的论著，或者发明一种能解决世界性问题的装置，即使没有任何证据表明这一点。 — location: 955 ^ref-56627\n我们无意识地知道，当别人对成功抱有很高的期望时，我们就会给他们让路。我们会服从他们的意志——在控制多巴胺的驱动下，他们的自我效能得到了完全的表达。我们的大脑之所以进化成这样，有一个充分的理由：参加一场你无法取胜的比赛可不明智。如果你发现对手对成功抱有很高的期望，那么你想要获胜就不那么容易了。 — location: 999 ^ref-24310\n几秒钟后，控制多巴胺被完全激活，他开始做出理性的计划。当下分子去甲肾上腺素被关闭，恐惧随之消退，他转而用一种理性、理智的方式来找到生存的办法。危机结束后，他安全地待在岸上，多巴胺消退了，当下分子有了喘息的空间，引发了抽泣。 传统观点将他的脱险归因于“肾上腺素爆发”，事实则恰恰相反。他不是靠肾上腺素爆发，而是靠多巴胺爆发。在他拯救船只的紧张时刻，多巴胺开始掌控局面，肾上腺素（当它在大脑中时被称为去甲肾上腺素）被抑制。 — location: 1282 ^ref-7657\n研究人员得出结论：“抵制诱惑似乎产生了一种心理代价，这种代价体现为，参与者之后在面对挫折时更容易放弃。”如果你在节食，抵制诱惑的次数越多，下次你越有可能失败。意志力是一种有限的资源。 — location: 1365 ^ref-60697\n疯子和天才，大脑能做的最坏和最好的事情，都依赖于多巴胺。由于这种基本的化学联系，疯子和天才之间的联系比它们与普通大脑工作方式的联系更为紧密。 — location: 1494 ^ref-58320\n如果大脑在突出性方面的功能失灵，即在没有发生对你真正重要的事情时，它也爆发了，那么会发生什么呢？想象你在看新闻，主持人正在谈论政府的一项间谍计划，突然你的突出性回路无缘无故地启动，你可能就会相信新闻上的这个故事和你有关。突出性过强或者在错误的时间出现，都会产生错觉，让触发事件从默默无闻上升到至关重要。 — location: 1549 ^ref-3014\n如果你只有一把锤子，一切看起来都像钉子。 ——谚语 — location: 1690 ^ref-55200\n高水平的多巴胺会抑制当下分子的功能，所以聪明的人在人际关系上往往很差。我们需要当下的同理心来理解别人的想法，这是社交互动的基本技能。 — location: 1843 ^ref-61567\n几乎可以肯定的是，爱因斯坦的多巴胺能特征有相当一部分是由基因决定的。他的两个儿子中有一个成为国际知名的水利工程专家，另一个在20岁时被诊断患有精神分裂症，后在精神病院去世。大量研究也发现了多巴胺能特性的遗传成分。冰岛的一项研究对86 000多人的基因进行了评估，发现那些携带更容易患上精神分裂症或双相情感障碍基因的人，大部分都加入过全国性的演员、舞蹈家、音乐家、视觉艺术家或作家协会。 — location: 1877 ^ref-48782\n在大学校园里，强制所有人接受自由主义正统思想的情况比在任何其他环境下都更为普遍。喜剧演员克里斯·洛克告诉《大西洋月刊》的一名记者，他不会在大学校园里表演，因为观众太容易被不符合自由主义意识形态的言论冒犯。杰瑞·宋飞在一次电台采访中也说，有些喜剧演员告诉他不要离大学太近。他被警告说：“他们太政治正确了。” — location: 2003 ^ref-7185\n","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"三体三部曲 Metadata Author: [[刘慈欣]] Highlights “是的，整个人类历史也是偶然，从石器时代到今天都没什么重大变故，真幸运。但既然是幸运，总有结束的一天；现在我告诉你，结束了，做好思想准备吧。” — location: 804 ^ref-2737\n","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"cookbook模板 参考教程：xxx\n好吃指数：⭐⭐⭐\n难易指数：💦\n准备 食材 调料 步骤👩‍🍳 PLUS😋 ","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"待学习 readwise.reader midjorney obsidian arc 工作流 1、使用ob写md文章，再用hugo渲染： 由于hugo的发布内容需要在/content/post中，所以将总工程的根目录workspace整体放到hugo文件结构的/content/post中。 坚果云同步时，还是只同步workspace文件夹即可。\n2、日常阅读 rss（Reader）+ newsletter（邮箱）+ cubox（稍后读）+ 即刻 + 少数派 工具后续计划换掉\n梯子资源 https://glados.rocks/ agentneo（网站需要🪜） https://neoproxy.me/ ","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"插件 自用推荐插件 image auto upload plugin ： 配合picgo，实现图片自动上传图床 kanban ： 看板工具 recent files ： 便于打开最近文件 Minimal Theme Settings： 如果用的是minimal主题的话，可以用这个插件设置样式 Readwise Official : Readwise官方出的同步高亮到ob的插件，可以自动或手动同步 待学习插件 dataview ","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"文件/文件夹 显示文件夹中的隐藏文件 Command + Shift + .\n日常操作 删除当前页面 command + w 打开终端 在启动台 （LaunchPad）或聚焦 （Spotlight）中输入 terminal\n妙控板的使用 首先，触控板的所有设置、功能、偏好，都可以在系统偏好设置-触控板中来查看和设置。关于这里的设置更详细的解释，可见 https://support.apple.com/zh-cn/guide/mac-help/-mchlp1226/12.0/mac/12.0\n","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"开始 注册步骤：参考 b站视频 1、下载并注册Discord软件 2、打开midjorney网站，点击右下角的join the beta，然后就会自动打开Discord，进入Midjorney界面了 可以在设置中把语言改为“中文” 3、添加自己的服务器（在上面界面的左边的绿色加号），搜索找到Midjorney的官方机器人，点击添加至服务器，就可以授权添加到自己创建的服务器里了 4、开始做图 下方输入/imagine，输入prompt即可。因为目前只支持英文的prompt，可以在比较好的翻译网站上翻译下再输进去（up主推荐 https://www.deepl.com/translator） 此外，输入setting，可以做一些画图的设置\n","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":"计划学习途径：\n知乎 小红书 鞋的常见材质组成 洗鞋工具 ","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""},{"content":" 学习来源： 书籍《你是你吃出来的》——夏萌\n","date":"0001-01-01T00:00:00Z","permalink":"https://huangxindi.com/p/","title":""}]