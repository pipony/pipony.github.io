<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>BenchmarkSQL性能测试 on 2MUCH</title>
        <link>https://huangxindi.com/tags/benchmarksql%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
        <description>Recent content in BenchmarkSQL性能测试 on 2MUCH</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 15 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://huangxindi.com/tags/benchmarksql%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>BenchmarkSQL性能测试</title>
        <link>https://huangxindi.com/p/benchmarksql%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
        <pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate>
        
        <guid>https://huangxindi.com/p/benchmarksql%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
        <description>&lt;h1 id=&#34;benchmarksql性能测试&#34;&gt;BenchmarkSQL性能测试&lt;/h1&gt;
&lt;h2 id=&#34;何为benchmarksql&#34;&gt;何为BenchmarkSQL&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;BenchmarkSQL是一款经典的开源数据库测试工具，其包含 TPCC 测试脚本，支持MySQL、Oracle 、EnterpriseDB、PostgreSQL以及SQL Server 等数据库的性能压力测试。模拟多种事务处理：新订单、支付操作、订单状态查询、发货、库存状态查询等，从而获得最终的压测值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;安装及压测大致步骤&#34;&gt;安装及压测大致步骤&lt;/h2&gt;
&lt;p&gt;总结在linux安装BenchmarkSQL工具，并使用的步骤。压测工具安装的主机是单独的，即不是放在待压测的数据库服务器上，前者通过jdbc连接到后者进行压测。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将BenchmarkSQL安装包传到主机上，并解压&lt;/li&gt;
&lt;li&gt;额外需要安装ant和jdk&lt;/li&gt;
&lt;li&gt;使用ant编译BenchmarkSQL&lt;/li&gt;
&lt;li&gt;在待压测数据库中，创建压测用户&lt;/li&gt;
&lt;li&gt;修改BenchmarkSQL配置文件&lt;code&gt;props.xxx&lt;/code&gt;，将连接驱动、地址、用户配置正确。并设置所需的压测参数&lt;/li&gt;
&lt;li&gt;执行压测数据导入命令 &lt;code&gt;sh runDatabaseBuild.sh props.xxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;执行正式压测命令 &lt;code&gt;./runBenchmark.sh props.xxx&lt;/code&gt;。运行后可以看到实时的tpmC数值，运行结束后会显示平均的tpmC数值。&lt;/li&gt;
&lt;li&gt;压测结果生成&lt;/li&gt;
&lt;li&gt;执行删除压测数据命令 &lt;code&gt;./runDatabaseDestroy.sh props.xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;props配置文件解析&#34;&gt;props配置文件解析&lt;/h2&gt;
&lt;p&gt;可参考：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_47308871/article/details/123872130&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weixin_47308871/article/details/123872130&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://t.zoukankan.com/DFX339-p-13071848.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://t.zoukankan.com/DFX339-p-13071848.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/klb561/p/10513528.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/klb561/p/10513528.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Warehouses 代表仓库数,框中的数字表示该表将存放的记录条数，仓库数的调整在测试中能够体现数据库所能支持的数据规模的能力。每个 Warehouse 的数据量，其大小约为 76823.04KB，可以有小量的变化，因为测试过程中将会插入或删除现有记录。可以根据每个Warehouse的数据量，计算测试过程中的数据总量。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;计算公式为：数据总量（KB）≈ Warehouse个数*76823.04KB
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;以10个Warehouse的数据量为例计算其数据总量大小约为：768230.4KB
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;loadWorkers=10   //用于在数据库中初始化数据的加载进程数量，默认为4，实际使用过程中可以根据实际情况调整，加载速度会随worker数量的增加而有所提升
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;terminals=10  //终端数，即并发客户端数量，通常设置为CPU线程总数的2～6倍
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runTxnsPerTerminal=10 //每个终端（terminal）运行的固定事务数量，例如：如果该值设置为10，意味着每个terminal运行10个事务，如果有32个终端，那整体运行320个事务后，测试结束。该参数配置为非0值时，下面的runMins参数必须设置为0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;runMins=0    //要测试的整体时间，单位为分钟，如果runMins设置为60，那么测试持续1小时候结束。该值设置为非0值时，runTxnsPerTerminal参数必须设置为0。这两个参数不能同时设置为正整数，如果设置其中一个，另一个必须为0，主要区别是runMins定义时间长度来控制测试时间；runTxnsPerTerminal定义事务总数来控制时间。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;测试指标&#34;&gt;测试指标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;流量指标（Throughput,简称tpmC)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;流量指标(Throughput,简称tpmC)：按照TPC组织的定义，流量指标描述了系统在执行支付操作、订单状态查询、发货和库存状态查询这4种交易的同时，每分钟可以处理多少个新订单交易。所有交易的响应时间必须满 足TPC-C测试规范的要求，且各种交易数量所占的比例也应该满足TPC-C测试规范的要求。在这种情况下，流量指标值越大说明系统的联机事务处理能力越高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;性价比（Price/Performance,简称Price/tpmC)。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;性价比（Price/Performance,简称Price/tpmc)：即测试系统的整体价格与流量指标的比值，在获得相同的tpmC值的情况下，价格越低越好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/396651167&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/396651167&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.modb.pro/db/137349&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.modb.pro/db/137349&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/ActionTech/article/details/123985424&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/ActionTech/article/details/123985424&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/klb561/p/10513528.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/klb561/p/10513528.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://wade-test.readthedocs.io/zh/latest/BenchmarkSQL5.0%20%E6%95%B0%E6%8D%AE%E5%BA%93%20TPC-C%20%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%20-%20%E7%91%BE%E7%86%99%E7%9A%84%E5%8D%9A%E5%AE%A2%20JL%20Blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wade-test.readthedocs.io/zh/latest/BenchmarkSQL5.0%20%E6%95%B0%E6%8D%AE%E5%BA%93%20TPC-C%20%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%20-%20%E7%91%BE%E7%86%99%E7%9A%84%E5%8D%9A%E5%AE%A2%20JL%20Blog/&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
